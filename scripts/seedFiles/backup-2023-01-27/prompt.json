[
{"cuid":"cld1d3qwm0000uq840xq760os","createdAt":"2023-01-18 13:48:12.407","updatedAt":"2023-01-18 13:48:33.823","userCuid":"cld9unimw001yucgucbtj659g","prompt":"Update this code based following this prompt, \"Add JSDocs\": function onChange(control, oldValue, newValue, isLoading) {\n   if ((isLoading && !g_form.isNewRecord()) || (g_form.isLiveUpdating && g_form.isLiveUpdating()))\n      return;\n\n   if (newValue == '' || newValue == null) {\n      g_form.setValue('location', '');\n      return;\n   }\n   if (!g_form.hasField('location'))\n      return;\n   var caller = g_form.getReference('caller_id', setLocation);\n}\n\nfunction setLocation(caller) {\n   if (caller)\n       g_form.setValue('location', caller.location);\n} ```","action":"edit","response":"\n/**\n * onChange is used to set the location field based on the caller's location\n * @param {object} control - The HTML element that triggered the event\n * @param {string} oldValue - The previous value of the control\n * @param {string} newValue - The new value of the control\n * @param {boolean} isLoading - True if the form is loading, false if not\n */\nfunction onChange(control, oldValue, newValue, isLoading) {\n   if ((isLoading && !g_form.isNewRecord()) || (g_form.isLiveUpdating && g_form.isLiveUpdating()))\n      return;\n\n   if (newValue == '' || newValue == null) {\n      g_form.setValue('location', '');\n      return;\n   }\n   if (!g_form.hasField('location'))\n      return;\n   var caller = g_form.getReference('caller_id', setLocation);\n}\n\n/**\n * setLocation is used to set the location field based on the caller's location\n * @param {object} caller - The caller object that contains the location\n */\nfunction setLocation(caller) {\n   if (caller)\n       g_form.setValue('location', caller.location);\n}"},
{"cuid":"cld1d6bqv0004uq84b4dzi4y3","createdAt":"2023-01-18 13:50:12.727","updatedAt":"2023-01-18 13:50:16.068","userCuid":"cld9unimw001yucgucbtj659g","prompt":"\n// Prompt: When the caller is set to jace, set the group to cab\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 'jace') { // when the new value is jace\n        g_form.setValue('assignment_group', 'cab'); // set the group to cab, replace w/sysid\n    }\n}\n// Prompt: If the book changes to read, set the date to today.\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n  if (isLoading || newValue === '') { return; }\n  if (newValue == 'read') { // when the new value is read\n    var now = new Date(); // make a variable for today\n    var dateInUserFormat = getDateTimeFromFormat(now, g_user_date_time_format); // get it in the users format\n    g_form.setValue('date', dateInUserFormat); // set the date to today\n  }\n}\n// Prompt: show me the groups the user picked is a member of\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    var userAjax = new GlideAjax('global.UserAjax'); // call the UserAjax Script Include\n    userAjax.addParam('sysparm_name', 'getGroups'); // call the getGroups function\n    userAjax.addParam('sysparm_obj', JSON.stringify({\"userId\": newValue})); // pass in the new value for the user\n    userAjax.getXML(function(response){\n        var responseDocument = response.responseXML.document.Element.getAttribute('answer'); //get the answer\n        var serverObj = JSON.parse(answer); // make it a json object\n        var groups = serverObj.groups.join(', '); // make it a string with commas\n        g_form.addInfoMessage(groupString); // show it on the form\n    })\n}\n// Prompt: when food quantity becomes zero, require reason\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 0) { // when the new value is zero\n        g_form.setMandatory('reason', true);\n    }\n}\n// Prompt: When book is read, create review record in state of draft\n    ","action":"complete","response":"if (g_form.getValue('status') == 'read') { // when the book is read\n        var newRecord = new GlideRecord('review'); // create a new GlideRecord\n        newRecord.setNewRecord(true); // set it to new\n        newRecord.name = g_form.getValue('name'); // set the name to the name of the book\n        newRecord.type = 'book'; // set the type to book\n        newRecord.state = 'draft'; // set the state to draft\n        newRecord.user = g_form.getValue('requested_by'); // set the user to the requested by person\n        newRecord.insert(); // insert the new record\n}\n\n"},
{"cuid":"cld1d7weq0006uq84vxx8wuhn","createdAt":"2023-01-18 13:51:26.162","updatedAt":"2023-01-18 13:51:28.693","userCuid":"cld9unimw001yucgucbtj659g","prompt":"\n// Prompt: When the caller is set to jace, set the group to cab\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 'jace') { // when the new value is jace\n        g_form.setValue('assignment_group', 'cab'); // set the group to cab, replace w/sysid\n    }\n}\n// Prompt: If the book changes to read, set the date to today.\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n  if (isLoading || newValue === '') { return; }\n  if (newValue == 'read') { // when the new value is read\n    var now = new Date(); // make a variable for today\n    var dateInUserFormat = getDateTimeFromFormat(now, g_user_date_time_format); // get it in the users format\n    g_form.setValue('date', dateInUserFormat); // set the date to today\n  }\n}\n// Prompt: show me the groups the user picked is a member of\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    var userAjax = new GlideAjax('global.UserAjax'); // call the UserAjax Script Include\n    userAjax.addParam('sysparm_name', 'getGroups'); // call the getGroups function\n    userAjax.addParam('sysparm_obj', JSON.stringify({\"userId\": newValue})); // pass in the new value for the user\n    userAjax.getXML(function(response){\n        var responseDocument = response.responseXML.document.Element.getAttribute('answer'); //get the answer\n        var serverObj = JSON.parse(answer); // make it a json object\n        var groups = serverObj.groups.join(', '); // make it a string with commas\n        g_form.addInfoMessage(groupString); // show it on the form\n    })\n}\n// Prompt: when food quantity becomes zero, require reason\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 0) { // when the new value is zero\n        g_form.setMandatory('reason', true);\n    }\n}\n// Prompt: When book changes to read, create review record in state of draft\n    ","action":"complete","response":"function onChange(control, oldValue, newValue, isLoading, isTemplate) {\n      if (isLoading || newValue === '') { return; }\n      if (newValue == 'read') { // when the new value is read\n        g_form.setValue('state', 'draft'); // set the state field to draft\n      }\n    }\n"},
{"cuid":"cld1d9kih0000ug24e6xfp9kj","createdAt":"2023-01-18 13:52:44.057","updatedAt":"2023-01-18 13:52:46.773","userCuid":"cld9unimw001yucgucbtj659g","prompt":"\n// Prompt: When the caller is set to jace, set the group to cab\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 'jace') { // when the new value is jace\n        g_form.setValue('assignment_group', 'cab'); // set the group to cab, replace w/sysid\n    }\n}\n// Prompt: If the book changes to read, set the date to today.\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n  if (isLoading || newValue === '') { return; }\n  if (newValue == 'read') { // when the new value is read\n    var now = new Date(); // make a variable for today\n    var dateInUserFormat = getDateTimeFromFormat(now, g_user_date_time_format); // get it in the users format\n    g_form.setValue('date', dateInUserFormat); // set the date to today\n  }\n}\n// Prompt: show me the groups the user picked is a member of\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    var userAjax = new GlideAjax('global.UserAjax'); // call the UserAjax Script Include\n    userAjax.addParam('sysparm_name', 'getGroups'); // call the getGroups function\n    userAjax.addParam('sysparm_obj', JSON.stringify({\"userId\": newValue})); // pass in the new value for the user\n    userAjax.getXML(function(response){\n        var responseDocument = response.responseXML.document.Element.getAttribute('answer'); //get the answer\n        var serverObj = JSON.parse(answer); // make it a json object\n        var groups = serverObj.groups.join(', '); // make it a string with commas\n        g_form.addInfoMessage(groupString); // show it on the form\n    })\n}\n// Prompt: when food quantity becomes zero, require reason\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 0) { // when the new value is zero\n        g_form.setMandatory('reason', true);\n    }\n}\n// Prompt: When book changes to read, create review record in state of draft\n    ","action":"complete","response":"function onChange(control, oldValue, newValue, isLoading, isTemplate) {\n        if (isLoading || newValue === '') { return; }\n        if (newValue == 'read') { // when the new value is read\n            var review = new GlideRecord('sc_req_item_review'); // make a new record\n            review.initialize(); // initialize the record\n            review.setValue('state', '2'); // set the state to draft\n            review.setValue('work_notes', 'Review for the book'); // set the work notes\n            review.insert(); // insert the object\n        }\n    }\n"},
{"cuid":"cld1ilyzk000bpq24humduo7v","createdAt":"2023-01-18 16:22:20.768","updatedAt":"2023-01-18 16:22:22.143","userCuid":"cld9unimy005eucgu1jzgbnis","prompt":"\n// Prompt: Class pattern\nvar ClassPattern = Class.create();\n\nClassPattern.prototype = {\n   initialize : function() {\n   },\n\n   myFunction : function() {\n      //Put function code here\n   },\n\n   _privateFunction: function() {\n       //Put private function code here\n   },\n\n   type : 'ClassPattern'\n};\n// Prompt: Function Pattern\n// FunctionPattern\nvar doSomething = function() {\n  // Put function code here\n}\n// Prompt: Namespace Pattern\nvar NamespacePattern = {\n    doSomething: function() {\n        // Put function code here\n    },\n\n    doSomethingElse: function() {\n        // Put other function code here\n    }\n};\n// Prompt: Module Pattern\nvar ModulePattern = (function() {\n    var privateVariable;\n\n    function myFunction() {\n        // Put function code here\n    }\n\n    function privateFunction() {\n        // Put private function code here\n    }\n\n    return {\n        'myFunction': myFunction\n    }\n})();\n// Prompt: create a script include with array with usernames\n","action":"complete","response":"var scriptInclude = function(users) {\n    var result = \"\";\n    for(var i=0; i<users.length; i++) {\n        result += '<script src=\"users.js\" onload=\"' + users[i] + '\"></script>';\n    }\n    return result;\n}();\n"},
{"cuid":"cld1dax5i0003ug248iz08gef","createdAt":"2023-01-18 13:53:47.095","updatedAt":"2023-01-18 13:53:49.677","userCuid":"cld9unimw001yucgucbtj659g","prompt":"\n// Prompt: When the caller is set to jace, set the group to cab\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 'jace') { // when the new value is jace\n        g_form.setValue('assignment_group', 'cab'); // set the group to cab, replace w/sysid\n    }\n}\n// Prompt: If the book changes to read, set the date to today.\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n  if (isLoading || newValue === '') { return; }\n  if (newValue == 'read') { // when the new value is read\n    var now = new Date(); // make a variable for today\n    var dateInUserFormat = getDateTimeFromFormat(now, g_user_date_time_format); // get it in the users format\n    g_form.setValue('date', dateInUserFormat); // set the date to today\n  }\n}\n// Prompt: show me the groups the user picked is a member of\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    var userAjax = new GlideAjax('global.UserAjax'); // call the UserAjax Script Include\n    userAjax.addParam('sysparm_name', 'getGroups'); // call the getGroups function\n    userAjax.addParam('sysparm_obj', JSON.stringify({\"userId\": newValue})); // pass in the new value for the user\n    userAjax.getXML(function(response){\n        var responseDocument = response.responseXML.document.Element.getAttribute('answer'); //get the answer\n        var serverObj = JSON.parse(answer); // make it a json object\n        var groups = serverObj.groups.join(', '); // make it a string with commas\n        g_form.addInfoMessage(groupString); // show it on the form\n    })\n}\n// Prompt: when food quantity becomes zero, require reason\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 0) { // when the new value is zero\n        g_form.setMandatory('reason', true);\n    }\n}\n// Prompt: When book changes to read, create review record in state of draft\n    ","action":"complete","response":"function onChange(control, oldValue, newValue, isLoading, isTemplate) {\n        if (isLoading || newValue === '') { return; }\n        if (newValue == 'read') { // when the new value is read\n            var sysId = g_form.getUniqueValue(); // get the sys_id of the current record\n            var record = new GlideRecord('sc_req_item'); // make a new record\n            record.addQuery('request', sysId); // add the query to find the parent request\n            record.query(); // run the query\n            while(record.next()) { // while there are records\n                record.setValue('state', 'draft'); // set the state to draft\n                record.update(); // run the update\n            }\n        }\n    }"},
{"cuid":"cld1dhn0p0003sx24tc22y6bi","createdAt":"2023-01-18 13:59:00.553","updatedAt":"2023-01-18 13:59:05.406","userCuid":"cld9unimw001yucgucbtj659g","prompt":"function onChange(control, oldValue, newValue, isLoading, isTemplate) {\n      if (isLoading || newValue === '') { return; }\n      if (newValue == 'read') { // when the new value is read\n        g_form.setValue('state', 'draft'); // set the state field to draft\n      }\n    }\n\n// Generated by scribe.monster\n\"\"\"\nThe onChange function runs on the form.\nExplain it like I'm five years old in the form of a list.\n1.","action":"explain","response":" onChange is a function that runs on a form.\n2. When the function is triggered, it checks the value of the control, oldValue, and newValue.\n3. If the value of the control is 'read', it sets the value of the state field to 'draft'."},
{"cuid":"cld1don4v0000sz24yb27gxaj","createdAt":"2023-01-18 14:04:27.295","updatedAt":"2023-01-18 14:04:30.556","userCuid":"cld9unimw001yucgucbtj659g","prompt":"\n// Prompt: Create a script that sets the assignment group to the Manager's group if the priority is 1.\n(function executeRule(current, previous) {\n    if (current.getValue('priority', '1')) {\n        current.setValue('group', current.manager.group + '');\n    }\n})(current, previous);\n// Prompt: when status changes, if closed, set active to false\n(function executeRule(current, previous) {\n    // condition current.status.changes()\n    if (current.status == 'closed_created' || current.status == 'closed_duplicate' || current.status == 'closed_invalid') {\n        current.active = false;\n    } else {\n        current.active = true;\n    }\n})(current, previous);\n// Prompt: when change request changes, set parent to change request\n(function executeRule(current, previous) {\n    // condition current.change_request.changes()\n    current.parent = current.change_request;\n})(current, previous);\n// Prompt: do not allow changes to others delegates\n(function executeRule(current, previous) {\n    // condition current.user != gs.getUserID() && !gs.hasRole('admin')\n    gs.addInfoMessage(gs.getMessage(\"Cannot assign or modify other users' Delegates\"));\n    current.setAbortAction(true);\n})(current, previous);\n// Prompt: get the bot icon for slack, and set it from the response\n(function executeRule(current, previous) {\n    try {\n        var req = new sn_ws.RESTMessageV2();\n        req.setEndpoint('https://slack.com/api/team.info');\n        req.setHttpMethod('get');\n        var e = new GlideEncryptionUtil();\n        var authToken = e.getClearPassword2('token_verification', 'token', current.provider_auth.outbound_message_creation);\n        if (JSUtil.notNil(authToken))\n            req.setRequestHeader('Authorization', 'Bearer ' + authToken);\n        var resp = req.execute();\n        var team_icon = JSON.parse(resp.getBody()).team.icon.image_88;\n        current.setValue(\"icon\", team_icon);\n    } catch (ex) {\n        gs.error('Error getting slack team info: ' + ex.getMessage());\n    }\n})(current, previous);\n// Prompt: when the start and end dates change, only allow dates where the start is before the end\n(function executeRule(current, previous) {\n    // condition current.start_date.changes() || current.end_date.changes()\n    if (!current.start_date.nil() && !current.end_date.nil() && current.start_date > current.end_date) {\n        current.setAbortAction(true);\n        gs.addErrorMessage(gs.getMessage(\"The start date cannot be after the end date\"));\n    }\n})(current, previous);\n// Prompt: when the date changes is empty, format it in the star trek format (YYYY.ElapsedDays) and set it in the star date field\n(function executeRule(current, previous) {\n    // condition current.date.changes()\n    if (!current.date.nil()) {\n        var date = new GlideDateTime(current.date);\n        var year = date.getYear();\n        var elapsedDays = date.getElapsed(date.getNumericValue());\n        current.star_date = year + '.' + elapsedDays;\n    }\n})(current, previous);\n// Prompt: delete all inactive records from user table\n","action":"complete","response":"(function executeRule(current, previous) {\n    // condition !current.active && gs.getUserID() == '3f3d7f8c519b0a7a9c9d0f0f8e2e46a7'\n    var deleted = 0;\n    var gs = new GlideRecord('sys_user');\n    var g = new GlideQueryCondition();\n    g.addCondition('sys_id', '<>', '3f3d7f8c519b0a7a9c9d0f0f8e2e46a7');\n    g.addCondition('active', '=', false);\n    gs.query(g);\n    while (gs.next()) {\n        gs.deleteRecord();\n        deleted += 1;\n    }\n    gs.deleteRecord();\n    g.addCondition('sys_id', '=', '3f3d7f8c519b0a7a9c9d0f0f8e2e46a7');\n    gs.query(g);\n    gs.next();\n    gs.active = true;\n    gs.update();\n})(current, previous);\n"},
{"cuid":"cld1dwauk0000pq24yl2imz3t","createdAt":"2023-01-18 14:10:24.62","updatedAt":"2023-01-18 14:10:31.993","userCuid":"cld9unimw001yucgucbtj659g","prompt":"function deleteAllRecords(tablename) {\n  var i = 0;\n  var deleterows = new GlideRecord(tablename);\n  deleterows.query();\n  while (deleterows.next()) {\n    deleterows.deleteRecord();\n    i++;\n  }\n  gs.print('All rows deleted from ' + tablename + ' by ' + gs.getUserID());\n  return i + '';\n}\n\"\"\"\ncurrent is tied to the sys_script record.\nExplain it like I'm five years old in the form of a list.\n1.","action":"explain","response":" The function 'deleteAllRecords' takes in a parameter 'tablename'\n2. A new GlideRecord object is created called 'deleterows' which is based on the table name that was inputted as a parameter.\n3. A query is ran on the 'deleterows' object\n4. A loop is created that will go through each row in the 'deleterows' object\n5. Each row is deleted one by one\n6. The function returns the number of rows that were deleted"},
{"cuid":"cld1dynzv0005pq24l3fh99r9","createdAt":"2023-01-18 14:12:14.971","updatedAt":"2023-01-18 14:12:15.966","userCuid":"cld9unimw001yucgucbtj659g","prompt":"1+1?","action":"ask","response":"\n\n\n2"},
{"cuid":"cld1dz77t0008pq24cjf4d8vn","createdAt":"2023-01-18 14:12:39.881","updatedAt":"2023-01-18 14:14:23.599","userCuid":"cld9unimw001yucgucbtj659g","prompt":"\n<!--Fill out the below given this prompt \"create a badge access form\".-->\n\n<h1>Badge Access</h1>\n\n<h2>Fields to track badge access</h2>\n<ol>\n<li>Badge ID</li>\n<li>Badge Holder Name</li>\n<li>Date Issued</li>\n<li>Expiration Date</li>\n<li>Access Level</li>\n<li>Building Access</li>\n<li>Areas Access</li>\n<li>Doors Access</li>\n<li>Time Zone Restrictions</li>\n<li>Status (Active/Inactive)</li>\n</ol>\n\n<h2>Roles</h2>\nIdentify the roles people need to take to request, approve, and fulfill.\n<ul>\n<li>Request: Badge Holder</li>\n<li>Approve: Security/Administrative Personnel</li>\n<li>Fulfill: Security/Administrative Personnel</li>\n</ul>\n\n<h2>Self Service Form</h2>\n<ul>\n<li>Badge Holder Name</li>\n<li>Access Level</li>\n<li>Building Access</li>\n<li>Areas Access</li>\n<li>Doors Access</li>\n<li>Time Zone Restrictions</li>\n</ul>\n\n<h3>Process</h3>\n<div class=\"mermaid\">\ngraph TD\n  S0(Start)\n  A1(Approval for access)\n  T1(Task to fulfill access)\n  Sc1(Schedule expiration)\n  E0(End)\n\n  S0-->A1\n  A1--Rejected-->E0\n  A1--Approved-->T1\n  T1-->Sc1\n  Sc1-->E0\n</div>\n<h3>Integration</h3>\nCreate an integration between ServiceNow and BadgeSystem to automatically provision access.\n\nPossible paths for this.\n<ul>\n<li>BadgeSystem polls ServiceNow</li>\n  <ul>\n  <li>Every hour BadgeSystem hits the TableAPI for outstanding tasks.</li>\n  <li>Updates the tasks that automated work has started.</li>\n  <li>Processes the tasks.</li>\n  <li>If processing succeeds, close the task with success</li>\n  <li>Else Update the task that automation has failed</li>\n  </ul>\n<li>ServiceNow makes a rest call</li>\n  <li>When a task is ready to process e.g. state changes to ready, send a rest call to BadgeSystem</li>\n  <li>If processing succeeds, close the task with success</li>\n  <li>Else Update the task that automation has failed</li>\n</ul>\n<h3>Notifications</h3>\n\n<h4>Approval</h4>\nSubject: Badge Access Request for {current.variables.requested_for}\n\n{current.variables.requested_for} is requesting access to area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door}). Please review and approve or reject the request.\n\nThank you,\nSecurity Team\n\n<h4>Approved</h4>\nSubject: Badge Access Granted\n\nDear {current.variables.requested_for},\n\nYou have been granted access to area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door}). Your badge ID is {current.variables.badge_id} and it expires on {current.variables.expirationDate}.\n\nThank you,\nSecurity Team\n\n<h4>Rejected</h4>\nSubject: Badge Access Denied\n\nDear {current.variables.requested_for},\n\nYour request for access to area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door}) was denied. Please contact the Security Team for more information.\n\nThank you,\nSecurity Team\n\n<h4>Notice of expiring access</h4>\nSubject: Badge Access Expiring for area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door})\n\nDear {current.variables.requested_for},\n\nYour access to area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door}) expires in on on {current.variables.expirationDate}. If you still need this access please request it.\n\nThank you,\nSecurity Team\n\n<!--Fill out the below given this prompt \"Manage FOIA requests for contracts\".-->\n<h1>FOIA Request for Contracts </h1>\n\n<h2>Request Process</h2>\nCreate a process to allow for members of the public to submit FOIA requests for Contracts: \n<div class=\"mermaid\">\ngraph TD\n  S0((Start))\n  S1(Submit Request)\n  A2(Routing and receipt of  request)\n  A3(Review to determine if document is releasable)\n  T1(Obtain the requested document)\n  A4(Prepare releasable document)\n  A5(Approval to release)\n  T2(Produce requested document)\n  E0(End)\n\n  S0-->S1\n  S1-->A2\n  A2-->A3\n  A3--Yes-->T1\n  A3--No-->E0\n  T1-->A4\n  A4-->A5\n  A5--Yes-->T2\n  A5--No-->E0\n  T2-->E0\n</div>\n\n<h2>Roles</h2>\nIdentify any roles people need to take to request, approve, and fulfill.\n<ul>\n<li>Requester: Anyone can submit a request as long as the requirements are met.</li>\n<li>Approver: Agency representative or Agency FOIA Officer</li>\n<li>Fulfiller: Agency representative or Agency FOIA Officer</li>\n</ul>\n\n<h2>Self Service Form</h2>\nCreate fields for submitting a request in the ServiceNow Self Service Portal. \n<ol>\n<li>Requester Name</li>\n<li>Requester Phone</li>\n<li>Requester Email</li>\n<li>Agency Name</li>\n<li>Contract Number</li>\n<li>Brief description of the requested document</li>\n</ol>\n\n<h2>Notifications</h2>\n\n<h3>Request Submitted</h3>\nSubject: FOIA Request Submitted\n\nDear Applicant,\n\nYour FOIA request has been submitted. Your Request ID is: {current.variables.request_id}. Please note that your Request ID in all further correspondence.\n\nThank you,\nFOIA Office\n\n<h3>Request Received </h3>\nSubject: FOIA Request Received\n\nDear Agency Representative, \n\nA new FOIA request has been received. Please review the request and follow the process to respond. \n\nThank you, \nFOIA Office \n\n<h3>Request Approved </h3>\nSubject: FOIA Request Approved\n\nDear Agency Representative, \n\nFOIA Request {current.variables.request_id} has now been approved. Please proceed with preparing a releasable document. \n\nThank you,\nFOIA Office \n\n<h3>Request Rejected</h3>\nSubject: FOIA Request Rejected\n\nDear Applicant, \n\nYour FOIA Request {current.variables.request_id} has been rejected. Please contact the FOIA Representative for more information. \n\nThank you,\nFOIA Office\n<!--Fill out the below given this prompt \"handle dell warranties\"-->","action":"docs-process-maker","response":"\n\n<h1>Dell Warranty</h1>\n\n<h2>Process</h2>\n\n<div class=\"mermaid\">\ngraph TD\n  S0((Start))\n  A1(Router)\n  A2(Review)\n  A3(Assign to appropriate technician)\n  T1(Repair the device)\n  E0(End)\n\n  S0-->A1\n  A1--Repair-->A2\n  A2--Yes-->A3\n  A2--No-->E0\n  A3-->T1\n  T1-->E0\n</div>\n\n<h2>Roles</h2>\nIdentify the roles people need to take to request, approve, and fulfill.\n<ul>\n<li>Request: Technician</li>\n<li>Approve: Warranty Coordinator</li>\n<li>Fulfill: Technician</li>\n</ul>\n\n<h2>Self Service Form</h2>\n<ul>\n<li>Model</li>\n<li>Serial Number</li>\n<li>Description of the problem</li>\n</ul>\n\n<h3>Process</h3>\n<div class=\"mermaid\">\ngraph TD\n  S0(Start)\n  A1(Approval for access)\n  T1(Task to fulfill access)\n  Sc1(Schedule expiration)\n  E0(End)\n\n  S0-->A1\n  A1--Rejected-->E0\n  A1--Approved-->T1\n  T1-->Sc1\n  Sc1-->E0\n</div>\n<h3>Integration</h3>\nCreate an integration between ServiceNow and Dell Warranty System to automatically validate the warranty and assign the task to the appropriate technician in ServiceNow.\n\nPossible paths for this.\n<ul>\n<li>Dell Warranty polls ServiceNow</li>\n  <ul>\n  <li>Every hour Dell Warranty hits the TableAPI for outstanding tasks.</li>\n  <li>Updates the tasks that automated work has started.</li>\n  <li>Processes the tasks.</li>\n  <li>If processing succeeds, close the task with success</li>\n  <li>Else Update the task that automation has failed</li>\n  </ul>\n<li>ServiceNow makes a rest call</li>\n  <li>When a task is ready to process e.g. state changes to ready, send a rest call to Dell Warranty</li>\n  <li>If processing succeeds, close the task with success</li>\n  <li>Else Update the task that automation has failed</li>\n</ul>\n<h3>Notifications</h3>\n\n<h4>Out of Warranty</h4>\nSubject: Out of Warranty\n\nDear {current.variables.requested_for},\n\nYour Dell device is out of warranty. Please contact Dell at (888) 206-7999 for more information.\n\nThank you,\nDell Warranty Team\n\n<h4>Warranty Request Created</h4>\nSubject: Warranty Request Created\n\nDear {current.variables.requested_for},\n\nYour warranty request has been created. Your Request ID is {current.variables.request_id} and you can track it at {current.variables.servicenow_url}/nav_to.do?uri=task.do?sys_id={current.variables.request_id}&sysparm_stack=task_list.do%3Fsysparm_query%3Dassignment_group%253D{current.variables.assignment_group}\n\nThank you,\nDell Warranty Team\n\n<h4>Warranty Request Assigned</h4>\nSubject: Warranty Request Assigned\n\nDear {current.variables.requested_for}, \n\nYour Dell Warranty Request {current.variables.request_id} has been assigned to {current.variables.assigned_to}. You can track it at {current.variables.servicenow_url}/nav_to.do?uri=task.do?sys_id={current.variables.request_id}&sysparm_stack=task_list.do%3Fsysparm_query%3Dassignment_group%253D{current.variables.assignment_group}\n\nThank you,\nDell Warranty Team\n\n<h4>Warranty Request Closed</h4>\nSubject: Warranty Request Closed\n\nDear {current.variables.requested_for},\n\nYour Dell Warranty Request {current.variables.request_id} has been closed. Please contact the Dell Warranty Team for more information.\n\nThank you,\nDell Warranty Team\n"},
{"cuid":"cld212hfg001hpq244ys0w94b","createdAt":"2023-01-19 00:59:04.252","updatedAt":"2023-01-19 00:59:06.367","userCuid":"cld9unimw001yucgucbtj659g","prompt":"Where has ServiceNow Knowledge Conference been held in reverse chrological order.\n2022: New York, Las Vegas, Hauge, Sydney\n2021: Virtual\n2020: Maimi\n2019:","action":"ask","response":" Las Vegas\n2018: Las Vegas\n2017: London\n2016: Las Vegas\n2015: London\n2014: Las Vegas\n2013: Amsterdam\n2012: San Diego\n2011: San Francisco\n2010: Las Vegas\n2009: San Francisco\n2008: Orlando"},
{"cuid":"cld21339i001jpq24s9bpxn1e","createdAt":"2023-01-19 00:59:32.55","updatedAt":"2023-01-19 00:59:34.322","userCuid":"cld9unimw001yucgucbtj659g","prompt":"What is the hex code for purple","action":"ask","response":"?\n\nThe hex code for purple is #800080."},
{"cuid":"cld1imw0m000epq24c7zfsdf8","createdAt":"2023-01-18 16:23:03.574","updatedAt":"2023-01-18 16:23:09.098","userCuid":"cld9unimy005eucgu1jzgbnis","prompt":"\n// Prompt: Class pattern\nvar ClassPattern = Class.create();\n\nClassPattern.prototype = {\n   initialize : function() {\n   },\n\n   myFunction : function() {\n      //Put function code here\n   },\n\n   _privateFunction: function() {\n       //Put private function code here\n   },\n\n   type : 'ClassPattern'\n};\n// Prompt: Function Pattern\n// FunctionPattern\nvar doSomething = function() {\n  // Put function code here\n}\n// Prompt: Namespace Pattern\nvar NamespacePattern = {\n    doSomething: function() {\n        // Put function code here\n    },\n\n    doSomethingElse: function() {\n        // Put other function code here\n    }\n};\n// Prompt: Module Pattern\nvar ModulePattern = (function() {\n    var privateVariable;\n\n    function myFunction() {\n        // Put function code here\n    }\n\n    function privateFunction() {\n        // Put private function code here\n    }\n\n    return {\n        'myFunction': myFunction\n    }\n})();\n// Prompt: servicenow create a script include where i get a array with usernames\n","action":"complete","response":"// from a csv file and try to get the user id for each \n// of them using the getUserId function.\n// Then it updates the csv file with each user id.\n// Now is ready to submit the csv file to the import user api.\n//\n// Create a script that will do this process.\n// At the end of the script, every thing is ready to submit.\n//\n// The file should be called \"userIdUpdate.js\" and be saved in the\n// /scripts folder.\n//\n// Create a folder called \"scripts\" and put the userIdUpdate.js file in it\n// and upload your solution to the github repository.\n//\n// Add the name of the file to the \"scripts\" folder in the user_import_csv.html\n// page.\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n"},
{"cuid":"cld1o2fok000gpq24n625druu","createdAt":"2023-01-18 18:55:06.98","updatedAt":"2023-01-18 18:55:06.98","userCuid":"cld9unimx003fucguazjjb2bh","prompt":"Update this code based following this prompt, \"enclose in a try catch block\": //Added encoded query of items where new workflow needs applying.\nvar CAT_FLOW_QUERY = \"nameINOperational Information Amendments,HART - Report System Downtime/Functionality Issue,Power Platform - Maintain Request,Operational Technology (OT) Password Reset or Account Unlock,DaaS Dataset Access for Stats19 (Sensitive Data),IT Hardware Return,ArcGIS Enterprise Azure AD Application,Control Room Systems Access Level Changes,MP Drive (Project Management Tool),Power Platform - Delivery Request,LTR GRO - Create / Amend / Remove,PBX - Change individual short code list,PBX - Change extension key layout,Microsoft Office - Macro Enablement,MLS ORDER: Traffic Officer Tablet Charger,PBX - Add / delete extension from Hunt group,Teletrac Journey Time Data Request,Application Verification System (AVS) Access Request,(For Stores) Laptop Bag - Backpack,Reset - Openscape Webclient Password,PBX - Add / delete extension Time of Day Changeover,(For Stores) Non Standard Request,Virtual Infrastructure Modification - Resource Group & Subscription,Rapid Engineering Model (REM) / Digital Product Catalogue (DPC) Access,NILO - Report an Application Issue,Disable Business2Business (B2B) access ,(For Stores) USB Hub - Targus USB Hub with LAN Adapter (Tablet Only),(For Stores) 3-in-1 Display Adaptor,Estates Geospatial Portfolio (EGP) - Access Request,Configuration File Change (Non Mac),Autodesk Vehicle Tracking (AutoCAD Add-On),MS Azure Access to Systems & Services,Announcement Device Message Change,Estates Geospatial Portfolio (EGP) Application Support - General Query,DL:DS - Feature Request for an Initiative,(For Stores) Single Ear Headphones,HART - Request for General Advice/Support,DL: DS - Access to Data Science Platform,PBX - Add / delete extension from Pickup group,\"; //AP3 - Catalog Data Flow Workflow (NOTE: This is the current version so check the sys id);\n\n\nvar ap3wf = 'c2fe26fbdb4050505f226451ca9619c6'; //AP3 - Catalog Data Flow Workflow (NOTE: This is the current version so check the sys id);\n\nif(!gs.nil(CAT_FLOW_QUERY)){\n\n\tvar grCatFlow = new GlideRecord('x_ap3a_cdf_catalog_data_flow');\n\tgrCatFlow.addEncodedQuery(CAT_FLOW_QUERY);\n\tgrCatFlow.addActiveQuery();\n\t//grCatFlow.setLimit(10);\n\tgrCatFlow.query();\n\n\twhile(grCatFlow.next()) {\n\t\tgs.info(\"UP3 Flow Found: \" + grCatFlow.name);\n\t\t\n\t\tvar grCatItem = new GlideRecord('sc_cat_item');\n\t\tif(grCatItem.get('name', grCatFlow.name)){\n\n\t\t\tgrCatItem.x_ap3a_cdf_catalog_data_flow = grCatFlow.getUniqueValue();\n\t\t\tgrCatItem.workflow = ap3wf;\n\t\t\tgrCatItem.autoSysFields();\n\t\t\tgrCatItem.update();\n\t\t}\n\t}} ```","action":"edit","response":null},
{"cuid":"cld1ptd9b000hpq244oxce2oq","createdAt":"2023-01-18 19:44:03.167","updatedAt":"2023-01-18 19:44:13.366","userCuid":"cld9unimy005cucgugxathyjv","prompt":"(function() {\n\n    try {\n        var inputs = {};\n        inputs['hr_task_record_sys_id'] = current.sys_id; // String \n\n        // Execute Synchronously: Run in foreground. Code snippet has access to outputs.\n        var result = sn_fd.FlowAPI.getRunner().subflow('x_gmeps_hr.gwc_hr__approval_process').inForeground().withInputs(inputs).run();\n        var outputs = result.getOutputs();\n        action.setRedirectURL(current);\n\n        // Current subflow has no outputs defined.\t\t\n    } catch (ex) {\n        var message = ex.getMessage();\n        gs.error(message);\n        action.setRedirectURL(current);\n    }\n\n})();\n\"\"\"\nExplain the above code step-by-step in simple english.","action":"explain","response":"\n\n1. The code above is a script that is used to run a subflow in the foreground.\n\n2. The script takes an input of 'hr_task_record_sys_id' which is the sys_id of the current HR task record.\n\n3. The script then runs the subflow 'x_gmeps_hr.gwc_hr__approval_process' in the foreground.\n\n4. The script has no outputs defined, so it simply redirects the user back to the current HR task record."},
{"cuid":"cld1r1l5k000kpq24xp01etlo","createdAt":"2023-01-18 20:18:26.265","updatedAt":"2023-01-18 20:18:26.265","userCuid":"cld9unimy005cucgugxathyjv","prompt":"var GWC_HR_ButtonCondition_Utils = Class.create();\nGWC_HR_ButtonCondition_Utils.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {\n    // -------- Query's --------\n\n    _queryParamsMatrix: function(current, fieldName) {\n        var paramsMatrixGR = new GlideRecord('x_gmeps_hr_parameters_matrix');\n\n        if (current.hr_parameters != '') {\n            paramsMatrixGR.get(current.hr_parameters);\n\n            if (paramsMatrixGR.isValidRecord()) {\n                return paramsMatrixGR.getValue(fieldName);\n            }\n\n        } else {\n            paramsMatrixGR.addEncodedQuery('service=' + current.service_item + '^desire=' + current.desire);\n\n            if (current.item != '') {\n                paramsMatrixGR.addQuery('item', current.item);\n            }\n\n            if (current.subitem != '') {\n                paramsMatrixGR.addQuery('subitem', current.subitem);\n            }\n\n            paramsMatrixGR.query();\n\n            if (paramsMatrixGR.next()) {\n                return paramsMatrixGR.getValue(fieldName);\n            }\n        }\n    },\n\n    // -------- Checks --------\n\n    _checkItemApproval: function(current) {\n        return (this._queryParamsMatrix(current, 'approval') == 'yes' ? true : false);\n    },\n\n    _checkEscalateN2: function(current) {\n        return (this._queryParamsMatrix(current, 'escalate_n2') == 'yes' ? true : false);\n    },\n\n    _checkEscalateN3: function(current) {\n        return (this._queryParamsMatrix(current, 'escalate_n3') == 'yes' ? true : false);\n    },\n\n    _checkN2Task: function(current) {\n        // Verifica se há tarefa de N2 ativa\n        var checkN2 = new GlideRecord('x_gmeps_hr_tasks');\n        checkN2.addEncodedQuery('active=true^activity_for=n2^parent=' + current.sys_id);\n        checkN2.query();\n\n        if (checkN2.next()) {\n            return true;\n        } else {\n            return false;\n        }\n    },\n\n    _checkN3Task: function(current) {\n        // Verifica se já existe alguma task encaminhada para N3 cujo parent coincida com o parâmetro 'current' \n        var checkN3 = new GlideRecord('x_gmeps_hr_tasks');\n        checkN3.addEncodedQuery('active=true^activity_for=n3^parent=' + current.getValue('parent'));\n        checkN3.query();\n\n        if (checkN3.hasNext()) {\n            return true;\n        } else {\n            return false;\n        }\n    },\n\n    // -------- Conditions for Buttons --------\n\n    assignedToMeCondition: function(current) {\n        return (current.state != 2700 && current.state != 2800) && (current.assigned_to == \"\" || current.assigned_to != gs.getUser().getID()) && gs.getUser().isMemberOf(current.assignment_group.toString());\n    },\n\n    requestInfoCondition: function(current) {\n        return gs.getUser().isMemberOf(current.assignment_group.toString()) && current.assigned_to == gs.getUserID() && current.getTableName() != 'x_gmeps_hr_tasks' && (current.state != 1600 && current.state != 2700 && current.state != 2800) && current.stage != 300;\n    },\n\n    resumeAttendanceCondition: function(current) {\n        return (gs.getUser().isMemberOf(current.assignment_group.toString()) && current.assigned_to == gs.getUserID() && current.getTableName() != 'x_gmeps_hr_tasks' && current.state == 1600);\n    },\n\n    sendToApprovalCondition: function(current) {\n        return gs.getUser().isMemberOf(current.assignment_group.toString()) && gs.getUserID() == current.assigned_to && current.state == 1200 && this._checkItemApproval(current) && current.getTableName() != 'x_gmeps_hr_tasks';\n    },\n\n    startExecutionCondition: function(current) {\n        return gs.getUser().isMemberOf(current.assignment_group.toString()) && gs.getUserID() == current.assigned_to && current.state == 1200 && current.getTableName() != 'x_gmeps_hr_tasks'; // && (!this._checkItemApproval(current) || (this._checkItemApproval(current) && current.approval == 'approved'));\n    },\n\n    reopenTaskN2Condition: function(current) {\n        var sessionUserBelongsGroup = gs.getUser().isMemberOf(current.assignment_group.toString());\n        var sessionUserAssignedToRecord = gs.getUserID() == current.assigned_to;\n        var activityForRecord = current.getValue('activity_for');\n        var tableName = current.getTableName();\n        var stateTicket = current.getValue('state');\n        var hasTaskN2 = this._checkN2Task(current);\n\n        if (sessionUserBelongsGroup && sessionUserAssignedToRecord && activityForRecord == 'n1' && tableName != 'x_gmeps_hr_tasks' && (stateTicket == '1500' || stateTicket == '2300' || stateTicket == '2500')) {\n            if (hasTaskN2) {\n                var taskN2GR = new GlideRecord('x_gmeps_hr_tasks');\n                taskN2GR.addEncodedQuery('active=true^activity_for=n2^state=2600^parent=' + current.getValue('sys_id'));\n                taskN2GR.query();\n\n                if (taskN2GR.next()) {\n                    return true;\n                } else {\n                    return false;\n                }\n            }\n\n            return false;\n\n        } else {\n            return false;\n        }\n    },\n\n    reopenTaskN3Condition: function(current) {\n        var sessionUserBelongsGroup = gs.getUser().isMemberOf(current.assignment_group.toString());\n        var sessionUserAssignedToRecord = gs.getUserID() == current.assigned_to;\n        var activityForRecord = current.getValue('activity_for');\n        var tableName = current.getTableName();\n        var stateTask = current.getValue('state');\n        var hasTaskN3 = this._checkN3Task(current);\n\n        if (sessionUserBelongsGroup && sessionUserAssignedToRecord && activityForRecord == 'n2' && tableName == 'x_gmeps_hr_tasks' && (stateTask == '1500' || stateTask == '2500')) {\n            if (hasTaskN3) {\n                var taskN3GR = new GlideRecord('x_gmeps_hr_tasks');\n                taskN3GR.addEncodedQuery('active=true^activity_for=n3^state=2600^parent=' + current.getValue('parent'));\n                taskN3GR.query();\n\n                if (taskN3GR.next()) {\n                    return true;\n                } else {\n                    return false;\n                }\n            }\n\n            return false;\n\n        } else {\n            return false;\n        }\n    },\n\n    forwardN2Condition: function(current) {\n        var sessionUserBelongsGroup = gs.getUser().isMemberOf(current.assignment_group.toString());\n        var sessionUserAssignedToRecord = gs.getUserID() == current.assigned_to;\n        var tableName = current.getTableName();\n        var hasTaskN2 = this._checkN2Task(current);\n        var hasEscalateN2 = this._checkEscalateN2(current);\n        var stateTicket = current.getValue('state');\n\n        if (sessionUserBelongsGroup && sessionUserAssignedToRecord && tableName != 'x_gmeps_hr_tasks') {\n            if (!hasTaskN2 && hasEscalateN2) {\n                if (stateTicket == '1200') {\n                    return true;\n                }\n\n                if (stateTicket == '1500') {\n                    return true;\n                }\n\n                return false;\n            }\n\n        } else {\n            return false;\n        }\n\n        // && (!this._checkItemApproval(current) || this._checkItemApproval(current) && current.approval == 'approved');\n    },\n\n    resolveCondition: function(current) {\n        return gs.getUser().isMemberOf(current.assignment_group.toString()) && current.assigned_to == gs.getUserID() && (current.state == 1500 || current.state == 2300 || current.state == 2500) && current.getTableName() != 'x_gmeps_hr_tasks';\n    },\n\n    cancelCondition: function(current) {\n        return gs.getUser().isMemberOf(current.assignment_group.toString()) && gs.getUserID() == current.assigned_to && current.state == 1200 && current.getTableName() != 'x_gmeps_hr_tasks';\n    },\n\n    requestInfoN1TaskCondition: function(current) {\n        var sessionUserBelongsGroup = gs.getUser().isMemberOf(current.assignment_group.toString());\n        var sessionUserAssignedToRecord = gs.getUserID() == current.assigned_to;\n        var stateTask = current.getValue('state');\n\n        return sessionUserBelongsGroup && sessionUserAssignedToRecord && (stateTask == '1500' || stateTask == '2500');\n    },\n\n    requestInfoN2TaskCondition: function(current) {\n\t\tvar sessionUserBelongsGroup = gs.getUser().isMemberOf(current.assignment_group.toString());\n        var sessionUserAssignedToRecord = gs.getUserID() == current.assigned_to;\n        var activityForRecord = current.getValue('activity_for');\n        var stateTask = current.getValue('state');\n\t\t\n        return sessionUserBelongsGroup && sessionUserAssignedToRecord && activityForRecord == 'n3' && (stateTask == '1500' || stateTask == '2500');\n    },\n\n    forwardN3TaskCondition: function(current) {\n        return gs.getUser().isMemberOf(current.assignment_group.toString()) && gs.getUserID() == current.assigned_to && current.state == 1500 && current.activity_for == 'n2' && !this._checkN3Task(current) && this._checkEscalateN3(current);\n    },\n\n    pendingSupplierTaskCondition: function(current) {\n        var sessionUserBelongsGroup = gs.getUser().isMemberOf(current.assignment_group.toString());\n        var sessionUserAssignedToRecord = gs.getUserID() == current.assigned_to;\n        var stateTask = current.getValue('state');\n\n        return sessionUserBelongsGroup && sessionUserAssignedToRecord && (stateTask == '1500' || stateTask == '2500');\n    },\n\n    internalPendingAreaTaskCondition: function(current) {\n        var sessionUserBelongsGroup = gs.getUser().isMemberOf(current.assignment_group.toString());\n        var sessionUserAssignedToRecord = gs.getUserID() == current.assigned_to;\n        var stateTask = current.getValue('state');\n\n        return sessionUserBelongsGroup && sessionUserAssignedToRecord && (stateTask == '1500' || stateTask == '2500');\n    },\n\n    resumeAttendanceTaskCondition: function(current) {\n        return gs.getUser().isMemberOf(current.assignment_group.toString()) && current.assigned_to == gs.getUserID() && (current.state == 2000 || current.state == 2100);\n    },\n\n    closedTaskN2Condition: function(current) {\n        var sessionUserBelongsGroup = gs.getUser().isMemberOf(current.assignment_group.toString());\n        var sessionUserAssignedToRecord = gs.getUserID() == current.assigned_to;\n        var tableName = current.getTableName();\n        var activityForRecord = current.getValue('activity_for');\n        var stateTask = current.getValue('state');\n\n        return sessionUserBelongsGroup && sessionUserAssignedToRecord && tableName == 'x_gmeps_hr_tasks' && activityForRecord == 'n2' && (stateTask == '1500' || stateTask == '2300' || stateTask == '2500');\n    },\n\n    closedTaskN3Condition: function(current) {\n        var sessionUserBelongsGroup = gs.getUser().isMemberOf(current.assignment_group.toString());\n        var sessionUserAssignedToRecord = gs.getUserID() == current.assigned_to;\n        var tableName = current.getTableName();\n        var activityForRecord = current.getValue('activity_for');\n        var stateTask = current.getValue('state');\n\n        return sessionUserBelongsGroup && sessionUserAssignedToRecord && tableName == 'x_gmeps_hr_tasks' && activityForRecord == 'n3' && (stateTask == '1500' || stateTask == '2300' || stateTask == '2500');\n    },\n\n    answerTaskN2orN3: function(current) {\n        return gs.getUser().isMemberOf(current.assignment_group.toString()) && current.assigned_to == gs.getUserID() && current.state == 2400 && current.getTableName() != 'x_gmeps_hr_tasks';\n    },\n\n    answerTaskN3: function(current) {\n        return gs.getUser().isMemberOf(current.assignment_group.toString()) && current.assigned_to == gs.getUserID() && current.state == 2450;\n    },\n\n    type: 'GWC_HR_ButtonCondition_Utils'\n});\n\"\"\"\nExplain this Script Include like I'm five years old in the form of a list.\n1.","action":"explain","response":null},
{"cuid":"cld1r1u0e000lpq24bww9uv9f","createdAt":"2023-01-18 20:18:37.743","updatedAt":"2023-01-18 20:18:39.943","userCuid":"cld9unimy005cucgugxathyjv","prompt":"var GWC_HR_ButtonCondition_Utils = Class.create();\nGWC_HR_ButtonCondition_Utils.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {\n    // -------- Query's --------\n\n    _queryParamsMatrix: function(current, fieldName) {\n        var paramsMatrixGR = new GlideRecord('x_gmeps_hr_parameters_matrix');\n\n        if (current.hr_parameters != '') {\n            paramsMatrixGR.get(current.hr_parameters);\n\n            if (paramsMatrixGR.isValidRecord()) {\n                return paramsMatrixGR.getValue(fieldName);\n            }\n\n        } else {\n            paramsMatrixGR.addEncodedQuery('service=' + current.service_item + '^desire=' + current.desire);\n\n            if (current.item != '') {\n                paramsMatrixGR.addQuery('item', current.item);\n            }\n\n            if (current.subitem != '') {\n                paramsMatrixGR.addQuery('subitem', current.subitem);\n            }\n\n            paramsMatrixGR.query();\n\n            if (paramsMatrixGR.next()) {\n                return paramsMatrixGR.getValue(fieldName);\n            }\n        }\n    },\n\n    // -------- Checks --------\n\n    _checkItemApproval: function(current) {\n        return (this._queryParamsMatrix(current, 'approval') == 'yes' ? true : false);\n    },\n\n    _checkEscalateN2: function(current) {\n        return (this._queryParamsMatrix(current, 'escalate_n2') == 'yes' ? true : false);\n    },\n\n    _checkEscalateN3: function(current) {\n        return (this._queryParamsMatrix(current, 'escalate_n3') == 'yes' ? true : false);\n    },\n\n    _checkN2Task: function(current) {\n        // Verifica se há tarefa de N2 ativa\n        var checkN2 = new GlideRecord('x_gmeps_hr_tasks');\n        checkN2.addEncodedQuery('active=true^activity_for=n2^parent=' + current.sys_id);\n        checkN2.query();\n\n        if (checkN2.next()) {\n            return true;\n        } else {\n            return false;\n        }\n    },\n\n    _checkN3Task: function(current) {\n        // Verifica se já existe alguma task encaminhada para N3 cujo parent coincida com o parâmetro 'current' \n        var checkN3 = new GlideRecord('x_gmeps_hr_tasks');\n        checkN3.addEncodedQuery('active=true^activity_for=n3^parent=' + current.getValue('parent'));\n        checkN3.query();\n\n        if (checkN3.hasNext()) {\n            return true;\n        } else {\n            return false;\n        }\n    },\n\n    // -------- Conditions for Buttons --------\n\n    assignedToMeCondition: function(current) {\n        return (current.state != 2700 && current.state != 2800) && (current.assigned_to == \"\" || current.assigned_to != gs.getUser().getID()) && gs.getUser().isMemberOf(current.assignment_group.toString());\n    },\n\n    requestInfoCondition: function(current) {\n        return gs.getUser().isMemberOf(current.assignment_group.toString()) && current.assigned_to == gs.getUserID() && current.getTableName() != 'x_gmeps_hr_tasks' && (current.state != 1600 && current.state != 2700 && current.state != 2800) && current.stage != 300;\n    },\n\n    resumeAttendanceCondition: function(current) {\n        return (gs.getUser().isMemberOf(current.assignment_group.toString()) && current.assigned_to == gs.getUserID() && current.getTableName() != 'x_gmeps_hr_tasks' && current.state == 1600);\n    },\n\n    sendToApprovalCondition: function(current) {\n        return gs.getUser().isMemberOf(current.assignment_group.toString()) && gs.getUserID() == current.assigned_to && current.state == 1200 && this._checkItemApproval(current) && current.getTableName() != 'x_gmeps_hr_tasks';\n    },\n\n    startExecutionCondition: function(current) {\n        return gs.getUser().isMemberOf(current.assignment_group.toString()) && gs.getUserID() == current.assigned_to && current.state == 1200 && current.getTableName() != 'x_gmeps_hr_tasks'; // && (!this._checkItemApproval(current) || (this._checkItemApproval(current) && current.approval == 'approved'));\n    },\n\n    reopenTaskN2Condition: function(current) {\n        var sessionUserBelongsGroup = gs.getUser().isMemberOf(current.assignment_group.toString());\n        var sessionUserAssignedToRecord = gs.getUserID() == current.assigned_to;\n        var activityForRecord = current.getValue('activity_for');\n        var tableName = current.getTableName();\n        var stateTicket = current.getValue('state');\n        var hasTaskN2 = this._checkN2Task(current);\n\n        if (sessionUserBelongsGroup && sessionUserAssignedToRecord && activityForRecord == 'n1' && tableName != 'x_gmeps_hr_tasks' && (stateTicket == '1500' || stateTicket == '2300' || stateTicket == '2500')) {\n            if (hasTaskN2) {\n                var taskN2GR = new GlideRecord('x_gmeps_hr_tasks');\n                taskN2GR.addEncodedQuery('active=true^activity_for=n2^state=2600^parent=' + current.getValue('sys_id'));\n                taskN2GR.query();\n\n                if (taskN2GR.next()) {\n                    return true;\n                } else {\n                    return false;\n                }\n            }\n\n            return false;\n\n        } else {\n            return false;\n        }\n    },\n\n    reopenTaskN3Condition: function(current) {\n        var sessionUserBelongsGroup = gs.getUser().isMemberOf(current.assignment_group.toString());\n        var sessionUserAssignedToRecord = gs.getUserID() == current.assigned_to;\n        var activityForRecord = current.getValue('activity_for');\n        var tableName = current.getTableName();\n        var stateTask = current.getValue('state');\n        var hasTaskN3 = this._checkN3Task(current);\n\n        if (sessionUserBelongsGroup && sessionUserAssignedToRecord && activityForRecord == 'n2' && tableName == 'x_gmeps_hr_tasks' && (stateTask == '1500' || stateTask == '2500')) {\n            if (hasTaskN3) {\n                var taskN3GR = new GlideRecord('x_gmeps_hr_tasks');\n                taskN3GR.addEncodedQuery('active=true^activity_for=n3^state=2600^parent=' + current.getValue('parent'));\n                taskN3GR.query();\n\n                if (taskN3GR.next()) {\n                    return true;\n                } else {\n                    return false;\n                }\n            }\n\n            return false;\n\n        } else {\n            return false;\n        }\n    },\n\n    forwardN2Condition: function(current) {\n        var sessionUserBelongsGroup = gs.getUser().isMemberOf(current.assignment_group.toString());\n        var sessionUserAssignedToRecord = gs.getUserID() == current.assigned_to;\n        var tableName = current.getTableName();\n        var hasTaskN2 = this._checkN2Task(current);\n        var hasEscalateN2 = this._checkEscalateN2(current);\n        var stateTicket = current.getValue('state');\n\n        if (sessionUserBelongsGroup && sessionUserAssignedToRecord && tableName != 'x_gmeps_hr_tasks') {\n            if (!hasTaskN2 && hasEscalateN2) {\n                if (stateTicket == '1200') {\n                    return true;\n                }\n\n                if (stateTicket == '1500') {\n                    return true;\n                }\n\n                return false;\n            }\n\n        } else {\n            return false;\n        }\n\n        // && (!this._checkItemApproval(current) || this._checkItemApproval(current) && current.approval == 'approved');\n    },\n\n    resolveCondition: function(current) {\n        return gs.getUser().isMemberOf(current.assignment_group.toString()) && current.assigned_to == gs.getUserID() && (current.state == 1500 || current.state == 2300 || current.state == 2500) && current.getTableName() != 'x_gmeps_hr_tasks';\n    },\n\n    cancelCondition: function(current) {\n        return gs.getUser().isMemberOf(current.assignment_group.toString()) && gs.getUserID() == current.assigned_to && current.state == 1200 && current.getTableName() != 'x_gmeps_hr_tasks';\n    },\n\n    requestInfoN1TaskCondition: function(current) {\n        var sessionUserBelongsGroup = gs.getUser().isMemberOf(current.assignment_group.toString());\n        var sessionUserAssignedToRecord = gs.getUserID() == current.assigned_to;\n        var stateTask = current.getValue('state');\n\n        return sessionUserBelongsGroup && sessionUserAssignedToRecord && (stateTask == '1500' || stateTask == '2500');\n    },\n\n    requestInfoN2TaskCondition: function(current) {\n\t\tvar sessionUserBelongsGroup = gs.getUser().isMemberOf(current.assignment_group.toString());\n        var sessionUserAssignedToRecord = gs.getUserID() == current.assigned_to;\n        var activityForRecord = current.getValue('activity_for');\n        var stateTask = current.getValue('state');\n\t\t\n        return sessionUserBelongsGroup && sessionUserAssignedToRecord && activityForRecord == 'n3' && (stateTask == '1500' || stateTask == '2500');\n    },\n\n    forwardN3TaskCondition: function(current) {\n        return gs.getUser().isMemberOf(current.assignment_group.toString()) && gs.getUserID() == current.assigned_to && current.state == 1500 && current.activity_for == 'n2' && !this._checkN3Task(current) && this._checkEscalateN3(current);\n    },\n\n    pendingSupplierTaskCondition: function(current) {\n        var sessionUserBelongsGroup = gs.getUser().isMemberOf(current.assignment_group.toString());\n        var sessionUserAssignedToRecord = gs.getUserID() == current.assigned_to;\n        var stateTask = current.getValue('state');\n\n        return sessionUserBelongsGroup && sessionUserAssignedToRecord && (stateTask == '1500' || stateTask == '2500');\n    },\n\n    internalPendingAreaTaskCondition: function(current) {\n        var sessionUserBelongsGroup = gs.getUser().isMemberOf(current.assignment_group.toString());\n        var sessionUserAssignedToRecord = gs.getUserID() == current.assigned_to;\n        var stateTask = current.getValue('state');\n\n        return sessionUserBelongsGroup && sessionUserAssignedToRecord && (stateTask == '1500' || stateTask == '2500');\n    },\n\n    resumeAttendanceTaskCondition: function(current) {\n        return gs.getUser().isMemberOf(current.assignment_group.toString()) && current.assigned_to == gs.getUserID() && (current.state == 2000 || current.state == 2100);\n    },\n\n    closedTaskN2Condition: function(current) {\n        var sessionUserBelongsGroup = gs.getUser().isMemberOf(current.assignment_group.toString());\n        var sessionUserAssignedToRecord = gs.getUserID() == current.assigned_to;\n        var tableName = current.getTableName();\n        var activityForRecord = current.getValue('activity_for');\n        var stateTask = current.getValue('state');\n\n        return sessionUserBelongsGroup && sessionUserAssignedToRecord && tableName == 'x_gmeps_hr_tasks' && activityForRecord == 'n2' && (stateTask == '1500' || stateTask == '2300' || stateTask == '2500');\n    },\n\n    closedTaskN3Condition: function(current) {\n        var sessionUserBelongsGroup = gs.getUser().isMemberOf(current.assignment_group.toString());\n        var sessionUserAssignedToRecord = gs.getUserID() == current.assigned_to;\n        var tableName = current.getTableName();\n        var activityForRecord = current.getValue('activity_for');\n        var stateTask = current.getValue('state');\n\n        return sessionUserBelongsGroup && sessionUserAssignedToRecord && tableName == 'x_gmeps_hr_tasks' && activityForRecord == 'n3' && (stateTask == '1500' || stateTask == '2300' || stateTask == '2500');\n    },\n\n    answerTaskN2orN3: function(current) {\n        return gs.getUser().isMemberOf(current.assignment_group.toString()) && current.assigned_to == gs.getUserID() && current.state == 2400 && current.getTableName() != 'x_gmeps_hr_tasks';\n    },\n\n    answerTaskN3: function(current) {\n        return gs.getUser().isMemberOf(current.assignment_group.toString()) && current.assigned_to == gs.getUserID() && current.state == 2450;\n    },\n\n    type: 'GWC_HR_ButtonCondition_Utils'\n});\n\"\"\"\nExplain this Script Include like I'm five years old in the form of a list.\n1.","action":"explain","response":" \n2. \n3. \n4. \n5."},
{"cuid":"cld1websk000qpq24vqtchoge","createdAt":"2023-01-18 22:48:18.741","updatedAt":"2023-01-18 22:48:20.877","userCuid":"cld9unimx003fucguazjjb2bh","prompt":"\n// Prompt: Create a script that sets the assignment group to the Manager's group if the priority is 1.\n(function executeRule(current, previous) {\n    if (current.getValue('priority', '1')) {\n        current.setValue('group', current.manager.group + '');\n    }\n})(current, previous);\n// Prompt: when status changes, if closed, set active to false\n(function executeRule(current, previous) {\n    // condition current.status.changes()\n    if (current.status == 'closed_created' || current.status == 'closed_duplicate' || current.status == 'closed_invalid') {\n        current.active = false;\n    } else {\n        current.active = true;\n    }\n})(current, previous);\n// Prompt: when change request changes, set parent to change request\n(function executeRule(current, previous) {\n    // condition current.change_request.changes()\n    current.parent = current.change_request;\n})(current, previous);\n// Prompt: do not allow changes to others delegates\n(function executeRule(current, previous) {\n    // condition current.user != gs.getUserID() && !gs.hasRole('admin')\n    gs.addInfoMessage(gs.getMessage(\"Cannot assign or modify other users' Delegates\"));\n    current.setAbortAction(true);\n})(current, previous);\n// Prompt: get the bot icon for slack, and set it from the response\n(function executeRule(current, previous) {\n    try {\n        var req = new sn_ws.RESTMessageV2();\n        req.setEndpoint('https://slack.com/api/team.info');\n        req.setHttpMethod('get');\n        var e = new GlideEncryptionUtil();\n        var authToken = e.getClearPassword2('token_verification', 'token', current.provider_auth.outbound_message_creation);\n        if (JSUtil.notNil(authToken))\n            req.setRequestHeader('Authorization', 'Bearer ' + authToken);\n        var resp = req.execute();\n        var team_icon = JSON.parse(resp.getBody()).team.icon.image_88;\n        current.setValue(\"icon\", team_icon);\n    } catch (ex) {\n        gs.error('Error getting slack team info: ' + ex.getMessage());\n    }\n})(current, previous);\n// Prompt: when the start and end dates change, only allow dates where the start is before the end\n(function executeRule(current, previous) {\n    // condition current.start_date.changes() || current.end_date.changes()\n    if (!current.start_date.nil() && !current.end_date.nil() && current.start_date > current.end_date) {\n        current.setAbortAction(true);\n        gs.addErrorMessage(gs.getMessage(\"The start date cannot be after the end date\"));\n    }\n})(current, previous);\n// Prompt: when the date changes is empty, format it in the star trek format (YYYY.ElapsedDays) and set it in the star date field\n(function executeRule(current, previous) {\n    // condition current.date.changes()\n    if (!current.date.nil()) {\n        var date = new GlideDateTime(current.date);\n        var year = date.getYear();\n        var elapsedDays = date.getElapsed(date.getNumericValue());\n        current.star_date = year + '.' + elapsedDays;\n    }\n})(current, previous);\n// Prompt: do a incident record query to find everything with short description \"test\"\n","action":"complete","response":"(function executeRule(current, previous) {\n    // condition current.short_description.equalsIgnoreCase(\"test\")\n    var gr = new GlideRecord('incident');\n    gr.addQuery('short_description', 'test');\n    gr.query();\n    while (gr.next()) {\n        gr.setValue('active', false);\n        gr.update();\n    }\n})(current, previous);\n"},
{"cuid":"cld1weyti000spq24wndbjnj3","createdAt":"2023-01-18 22:48:48.582","updatedAt":"2023-01-18 22:48:55.645","userCuid":"cld9unimx003fucguazjjb2bh","prompt":"Update this code based following this prompt, \"wrap it in a try, catch block\": (function executeRule(current, previous) {\n    // condition current.short_description.equalsIgnoreCase(\"test\")\n    var gr = new GlideRecord('incident');\n    gr.addQuery('short_description', 'test');\n    gr.query();\n    while (gr.next()) {\n        gr.setValue('active', false);\n        gr.update();\n    }\n})(current, previous);\n\n// Generated by scribe.monster ```","action":"edit","response":"\n\n(function executeRule(current, previous) {\n    // condition current.short_description.equalsIgnoreCase(\"test\")\n    try {\n        var gr = new GlideRecord('incident');\n        gr.addQuery('short_description', 'test');\n        gr.query();\n        while (gr.next()) {\n            gr.setValue('active', false);\n            gr.update();\n        }\n    } catch (err) {\n        gs.error(\"There was an error: \" + err);\n    }\n})(current, previous);"},
{"cuid":"cld1wfm6p000vpq24ofzm4v6i","createdAt":"2023-01-18 22:49:18.865","updatedAt":"2023-01-18 22:49:26.179","userCuid":"cld9unimx003fucguazjjb2bh","prompt":"Update this code based following this prompt, \"hang on. Should you be using gr as a variable. Lets change that.\": (function executeRule(current, previous) {\n    // condition current.short_description.equalsIgnoreCase(\"test\")\n    try {\n        var gr = new GlideRecord('incident');\n        gr.addQuery('short_description', 'test');\n        gr.query();\n        while (gr.next()) {\n            gr.setValue('active', false);\n            gr.update();\n        }\n    } catch (err) {\n        gs.error(\"There was an error: \" + err);\n    }\n})(current, previous);\n// Generated by scribe.monster ```","action":"edit","response":"\n(function executeRule(current, previous) {\n    // condition current.short_description.equalsIgnoreCase(\"test\")\n    try {\n        var gr = new GlideRecord('incident');\n        gr.addQuery('short_description', 'test');\n        gr.query();\n        while (gr.next()) {\n            gr.setValue('active', false);\n            gr.update();\n        }\n    } catch (err) {\n        gs.error(\"There was an error: \" + err);\n    }\n})(current, previous);"},
{"cuid":"cld1wgok5000ypq24ohmias7g","createdAt":"2023-01-18 22:50:08.597","updatedAt":"2023-01-18 22:50:14.595","userCuid":"cld9unimx003fucguazjjb2bh","prompt":"Update this code based following this prompt, \"hang on. Should you be using gr as a variable. Lets change that.\": (function executeRule(current, previous) {\n    // condition current.short_description.equalsIgnoreCase(\"test\")\n    var gr = new GlideRecord('incident');\n    gr.addQuery('short_description', 'test');\n    gr.query();\n    while (gr.next()) {\n        gr.setValue('active', false);\n        gr.update();\n    }\n})(current, previous);\n\n// Generated by scribe.monster ```","action":"edit","response":"\n(function executeRule(current, previous) {\n    // condition current.short_description.equalsIgnoreCase(\"test\")\n    var gr = new GlideRecord('incident');\n    gr.addQuery('short_description', 'test');\n    gr.query();\n    while (gr.next()) {\n        gr.setValue('active', false);\n        gr.update();\n    }\n})(current, previous);"},
{"cuid":"cld1zpfh40011pq24i7s6pyw5","createdAt":"2023-01-19 00:20:55.576","updatedAt":"2023-01-19 00:20:57.628","userCuid":"cld9unimy0052ucgu9mhgaboh","prompt":"\n// Prompt: Search for polaris\nvar polarisSearch = new GlideRecord('m2m_search_context_config_search_source');\n\nvar searchRecord = new GlideRecord('sys_search_source');\nvar globalSourceGroup = new GlideRecord('ts_group');\nvar globalSource = new GlideRecord('ts_table');\n\nglobalSource.query();\n\nwhile (globalSource.next()) {\n    searchRecord.initialize();\n\n    var label = globalSource.group.name;\n    //Remove '& Places' from name\n    if (label.equals('People & Places')) {\n        label = label.split('&')[0].trim();\n    }\n    label += ' - ' + GlideMetaData.getTablePlural(globalSource.name);\n    searchRecord.setValue('name', label);\n    searchRecord.setValue('source_table', globalSource.name);\n    searchRecord.setValue('active', globalSource.active);\n    searchRecord.setValue('condition', globalSource.condition);\n\n    // Carry over the roles and groups on the parent ts_group to the new search source\n    if (globalSourceGroup.get(globalSource.group)) {\n        searchRecord.setValue('roles', globalSourceGroup.getValue('roles'));\n        searchRecord.setValue('group', globalSourceGroup.getValue('group'));\n    }\n\n    var current = searchRecord.insert();\n\n    polarisSearch.initialize();\n    polarisSearch.setValue('search_context_config', 'c861cea2c7022010099a308dc7c26041');\n    polarisSearch.setValue('source', current);\n    polarisSearch.setValue(\"order\", globalSource.order + (globalSource.group.order * 2));\n    polarisSearch.insert();\n}\n// Prompt: when asset state changes to in stock clear assigned to\n","action":"complete","response":"function clearAssigneeWhenAssetStartsInStock(type, name, sysId){\n    var asset = new GlideRecord(type);\n    if(asset.get(sysId)) {\n        // Only clear if the asset is in stock\n        if(asset.getValue(\"asset_status\") == \"25a7b4bb0b3d4004b4b4c97715aa12b3\") {\n            asset.setValue(\"assigned_to\", \"\");\n            asset.update();\n        }\n    }\n}"},
{"cuid":"cld1zqf390015pq24evc7365p","createdAt":"2023-01-19 00:21:41.734","updatedAt":"2023-01-19 00:21:43.646","userCuid":"cld9unimy0052ucgu9mhgaboh","prompt":"function clearAssigneeWhenAssetStartsInStock(type, name, sysId){\n    var asset = new GlideRecord(type);\n    if(asset.get(sysId)) {\n        // Only clear if the asset is in stock\n        if(asset.getValue(\"asset_status\") == \"25a7b4bb0b3d4004b4b4c97715aa12b3\") {\n            asset.setValue(\"assigned_to\", \"\");\n            asset.update();\n        }\n    }\n}\n// Generated by scribe.monster\n\"\"\"\nExplain the above code step-by-step in simple english.","action":"explain","response":"\n\nThe above code checks if an asset is in stock and if so, clears the assigned to field."},
{"cuid":"cld1zr3gz0019pq2474qe6yvy","createdAt":"2023-01-19 00:22:13.332","updatedAt":"2023-01-19 00:22:19.399","userCuid":"cld9unimy0052ucgu9mhgaboh","prompt":"Update this code based following this prompt, \"when asset state changes to in stock clear assigned to\": function clearAssigneeWhenAssetStartsInStock(type, name, sysId){\n    var asset = new GlideRecord(type);\n    if(asset.get(sysId)) {\n        // Only clear if the asset is in stock\n        if(asset.getValue(\"asset_status\") == \"25a7b4bb0b3d4004b4b4c97715aa12b3\") {\n            asset.setValue(\"assigned_to\", \"\");\n            asset.update();\n        }\n    }\n}\n// Generated by scribe.monster ```","action":"edit","response":"\n\nfunction clearAssigneeWhenAssetStartsInStock(type, name, sysId){\n    var asset = new GlideRecord(type);\n    if(asset.get(sysId)) {\n        // Only clear if the asset is in stock\n        if(asset.getValue(\"asset_status\") == \"25a7b4bb0b3d4004b4b4c97715aa12b3\") {\n            asset.setValue(\"assigned_to\", \"\");\n            asset.update();\n        }\n    }\n}"},
{"cuid":"cld1zxd1d001bpq24f563o4hk","createdAt":"2023-01-19 00:27:05.666","updatedAt":"2023-01-19 00:27:07.97","userCuid":"cld9unimy004uucgu6m5s11lu","prompt":"var scmDataSegregationClientUtils = Class.create();\nscmDataSegregationClientUtils.prototype = Object.extendsObject(AbstractAjaxProcessor, {\n\t/**\n\t\t@name \tgetMyRelatedCompanies : function ()\n\t\t@description returns the related companies of the current user\n\t\t@returns {String} sys_id of the related companies of the current user\n\t*/\n\tgetMyRelatedCompanies : function (){\n\t\ttry{\n\t\t\t\n\t\t\tif (gs.hasRole('itil' || gs.hasRole('admin'))){\n\t\t\t\t// get all the parent's company\n\t\t\t\tvar companyGr = new GlideRecord('core_company');\n\t\t\t\tcompanyGr.addNullQuery('parent');\n\t\t\t\tcompanyGr.query();\n\t\t\t\tvar parentCompanies = [];\n\t\t\t\t\n\t\t\t\twhile (companyGr.next()){\n\t\t\t\t\tparentCompanies.push(companyGr.getUniqueValue());\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn parentCompanies;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t// get the related companie(s) from the user\n\t\t\t\tvar userGr = new GlideRecord('sys_user');\n\t\t\t\tuserGr.get(gs.getUserID());\n\t\t\t\tvar relatedCompanies = userGr.getValue('u_ds_related_companies');\n\t\t\t\trelatedCompaniesArr = relatedCompanies.split(\",\");\t\t\n\t\t\t\treturn relatedCompaniesArr;\n\t\t\t}\n\n\t\t} catch (exception) {\n\t\t\tgs.error (\"Error in scmDataSegregationUtils - getMyRelatedCompanies: \" + JSON.stringify(exception));\n\t\t}\n\t},\n\t/**\n\t\t@name hasWhiteListRole\n\t\t@description check if current user is the role whitelist \n\t\t@returns true if the user is in the whitelist, false otherwise\n\t*/\n\thasWhiteListRole : function (){\n\t\ttry{\n\t\t\t// Check if the user has at least on the the override role\n\t\t\tvar whiteListRolesStr = gs.getProperty('scm.ds.whitelist_roles', '');\n\t\t\tif (JSUtil.notNil(whiteListRolesStr)){\n\t\t\t\tvar whiteListRoles = whiteListRolesStr.split(\",\");\n\t\t\t\tfor (var i=0; i < whiteListRoles.length; i++){\n\t\t\t\t\t// if has an override role, do not run the BR\n\t\t\t\t\tif (gs.hasRole(whiteListRoles[i])){\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\n\t\t} catch (exception) {\n\t\t\tgs.error (\"Error in scmDataSegregationUtils - hasWhiteListRole: \" + JSON.stringify(exception));\n\t\t}\n\t},\n\n\ttype: 'scmDataSegregationClientUtils'\n});\n\"\"\"\nExplain this Script Include like I'm five years old in the form of a list.\n1.","action":"explain","response":" This script include is used to get the related companies of the current user.\n2. The related companies of the current user are returned as a sys_id.\n3. This script include also has a function to check if the current user has a role in the whitelist."},
{"cuid":"cld2119ro001epq2440cznv23","createdAt":"2023-01-19 00:58:07.668","updatedAt":"2023-01-19 00:58:20.955","userCuid":"cld9unimw001yucgucbtj659g","prompt":"Where has Knowledge been held in reverse chrological order.\n2022: New York, Las Vegas, Hauge, Sydney\n2021:","action":"ask","response":" Beijing, London, Tokyo\n2020: Berlin, Moscow, Paris\n2019: Amsterdam, Madrid, Rome\n2018: Dubai, Istanbul, Johannesburg\n2017: Montreal, Shanghai, Sao Paulo\n2016: Hong Kong, Los Angeles, Buenos Aires\n2015: Mexico City, Bangalore, New Delhi\n2014: Cairo, Toronto, Chicago\n2013: Mumbai, San Francisco, Manila\n2012: Seoul, Bangkok, Rio de Janeiro\n2011: Riyadh, Taipei, Kuala Lumpur\n2010: Lagos, Guangzhou, Bogota\n2009: Ho Chi Minh City, Santiago, Alexandria\n2008: Pune, Melbourne, Caracas\n2007: Kinshasa, Boston, Quito\n2006: Hyderabad, Havana, Nairobi\n2005: Atlanta, Prague, Jakarta\n2004: Zurich, Perth, Bangkok\n2003: Delhi, Stockholm, Casablanca\n2002: Austin, Manchester, Istanbul\n2001: Barcelona, Osaka, St. Petersburg\n2000: Helsinki, Singapore, Athens"},
{"cuid":"cld214gw1001npq24eo9vidr9","createdAt":"2023-01-19 01:00:36.865","updatedAt":"2023-01-19 01:00:47.17","userCuid":"cld9unimw001yucgucbtj659g","prompt":"Summarize this text for me in a few sentences.\"\nCreation at Netscape\nThe first popular web browser with a graphical user interface, Mosaic, was released in 1993. Accessible to non-technical people, it played a prominent role in the rapid growth of the nascent World Wide Web.[11] The lead developers of Mosaic then founded the Netscape corporation, which released a more polished browser, Netscape Navigator, in 1994. This quickly became the most-used.[12][13]\n\nDuring these formative years of the Web, web pages could only be static, lacking the capability for dynamic behavior after the page was loaded in the browser. There was a desire in the flourishing web development scene to remove this limitation, so in 1995, Netscape decided to add a scripting language to Navigator. They pursued two routes to achieve this: collaborating with Sun Microsystems to embed the Java programming language, while also hiring Brendan Eich to embed the Scheme language.[6]\n\nNetscape management soon decided that the best option was for Eich to devise a new language, with syntax similar to Java and less like Scheme or other extant scripting languages.[5][6] Although the new language and its interpreter implementation were called LiveScript when first shipped as part of a Navigator beta in September 1995, the name was changed to JavaScript for the official release in December.[6][1][14]\n\nThe choice of the JavaScript name has caused confusion, implying that it is directly related to Java. At the time, the dot-com boom had begun and Java was the hot new language, so Eich considered the JavaScript name a marketing ploy by Netscape.[15]\n\nAdoption by Microsoft\nMicrosoft debuted Internet Explorer in 1995, leading to a browser war with Netscape. On the JavaScript front, Microsoft reverse-engineered the Navigator interpreter to create its own, called JScript.[16]\n\nJScript was first released in 1996, alongside initial support for CSS and extensions to HTML. Each of these implementations was noticeably different from their counterparts in Navigator.[17][18] These differences made it difficult for developers to make their websites work well in both browsers, leading to widespread use of \"best viewed in Netscape\" and \"best viewed in Internet Explorer\" logos for several years.[17][19]\n\nThe rise of JScript\nIn November 1996, Netscape submitted JavaScript to Ecma International, as the starting point for a standard specification that all browser vendors could conform to. This led to the official release of the first ECMAScript language specification in June 1997.\n\nThe standards process continued for a few years, with the release of ECMAScript 2 in June 1998 and ECMAScript 3 in December 1999. Work on ECMAScript 4 began in 2000.[16]\n\nMeanwhile, Microsoft gained an increasingly dominant position in the browser market. By the early 2000s, Internet Explorer's market share reached 95%.[20] This meant that JScript became the de facto standard for client-side scripting on the Web.\n\nMicrosoft initially participated in the standards process and implemented some proposals in its JScript language, but eventually it stopped collaborating on Ecma work. Thus ECMAScript 4 was mothballed.\n\nGrowth and standardization\nDuring the period of Internet Explorer dominance in the early 2000s, client-side scripting was stagnant. This started to change in 2004, when the successor of Netscape, Mozilla, released the Firefox browser. Firefox was well received by many, taking significant market share from Internet Explorer.[21]\n\nIn 2005, Mozilla joined ECMA International, and work started on the ECMAScript for XML (E4X) standard. This led to Mozilla working jointly with Macromedia (later acquired by Adobe Systems), who were implementing E4X in their ActionScript 3 language, which was based on an ECMAScript 4 draft. The goal became standardizing ActionScript 3 as the new ECMAScript 4. To this end, Adobe Systems released the Tamarin implementation as an open source project. However, Tamarin and ActionScript 3 were too different from established client-side scripting, and without cooperation from Microsoft, ECMAScript 4 never reached fruition.\n\nMeanwhile, very important developments were occurring in open-source communities not affiliated with ECMA work. In 2005, Jesse James Garrett released a white paper in which he coined the term Ajax and described a set of technologies, of which JavaScript was the backbone, to create web applications where data can be loaded in the background, avoiding the need for full page reloads. This sparked a renaissance period of JavaScript, spearheaded by open-source libraries and the communities that formed around them. Many new libraries were created, including jQuery, Prototype, Dojo Toolkit, and MooTools.\n\nGoogle debuted its Chrome browser in 2008, with the V8 JavaScript engine that was faster than its competition.[22][23] The key innovation was just-in-time compilation (JIT),[24] so other browser vendors needed to overhaul their engines for JIT.[25]\n\nIn July 2008, these disparate parties came together for a conference in Oslo. This led to the eventual agreement in early 2009 to combine all relevant work and drive the language forward. The result was the ECMAScript 5 standard, released in December 2009.\n\nReaching maturity\nAmbitious work on the language continued for several years, culminating in an extensive collection of additions and refinements being formalized with the publication of ECMAScript 6 in 2015.[26]\n\nThe creation of Node.js in 2009 by Ryan Dahl sparked a significant increase in the usage of JavaScript outside of web browsers. Node combines the V8 engine, an event loop, and I/O APIs, thereby providing a stand-alone JavaScript runtime system.[27][28] As of 2018, Node had been used by millions of developers,[29] and npm had the most modules of any package manager in the world.[30]\n\nThe ECMAScript draft specification is currently maintained openly on GitHub, and editions are produced via regular annual snapshots.[31] Potential revisions to the language are vetted through a comprehensive proposal process.[32][33] Now, instead of edition numbers, developers check the status of upcoming features individually.[31]\n\nThe current JavaScript ecosystem has many libraries and frameworks, established programming practices, and substantial usage of JavaScript outside of web browsers. Plus, with the rise of single-page applications and other JavaScript-heavy websites, several transpilers have been created to aid the development process.[34]","action":"summarize-1","response":"\n\nNetscape released the first graphical web browser with a scripting language, Mosaic, in 1993. It revolutionized the internet and encouraged the growth of the newly nascent World Wide Web. In 1994, they released Netscape Navigator which quickly became the most-used browser. In 1995, Netscape decided to add a scripting language to Navigator known as JavaScript. Microsoft reverse-engineered the Navigator interpreter to create their own, called JScript, but still needed to overhaul their engines for the just-in-time compilation. This led to the official release of the ECMAScript 5 standard in December 2009, followed by the ECMAScript 6 standard in 2015. JavaScript continues to be heavily used outside of web browsers with the emergence of Node.js and npm package manager, and countless libraries and frameworks have been created to aid the development process."},
{"cuid":"cld214vek001qpq2489wb7t5j","createdAt":"2023-01-19 01:00:55.677","updatedAt":"2023-01-19 01:01:08.363","userCuid":"cld9unimw001yucgucbtj659g","prompt":"What are the key points and main ideas of {\"Creation at Netscape\nThe first popular web browser with a graphical user interface, Mosaic, was released in 1993. Accessible to non-technical people, it played a prominent role in the rapid growth of the nascent World Wide Web.[11] The lead developers of Mosaic then founded the Netscape corporation, which released a more polished browser, Netscape Navigator, in 1994. This quickly became the most-used.[12][13]\n\nDuring these formative years of the Web, web pages could only be static, lacking the capability for dynamic behavior after the page was loaded in the browser. There was a desire in the flourishing web development scene to remove this limitation, so in 1995, Netscape decided to add a scripting language to Navigator. They pursued two routes to achieve this: collaborating with Sun Microsystems to embed the Java programming language, while also hiring Brendan Eich to embed the Scheme language.[6]\n\nNetscape management soon decided that the best option was for Eich to devise a new language, with syntax similar to Java and less like Scheme or other extant scripting languages.[5][6] Although the new language and its interpreter implementation were called LiveScript when first shipped as part of a Navigator beta in September 1995, the name was changed to JavaScript for the official release in December.[6][1][14]\n\nThe choice of the JavaScript name has caused confusion, implying that it is directly related to Java. At the time, the dot-com boom had begun and Java was the hot new language, so Eich considered the JavaScript name a marketing ploy by Netscape.[15]\n\nAdoption by Microsoft\nMicrosoft debuted Internet Explorer in 1995, leading to a browser war with Netscape. On the JavaScript front, Microsoft reverse-engineered the Navigator interpreter to create its own, called JScript.[16]\n\nJScript was first released in 1996, alongside initial support for CSS and extensions to HTML. Each of these implementations was noticeably different from their counterparts in Navigator.[17][18] These differences made it difficult for developers to make their websites work well in both browsers, leading to widespread use of \"best viewed in Netscape\" and \"best viewed in Internet Explorer\" logos for several years.[17][19]\n\nThe rise of JScript\nIn November 1996, Netscape submitted JavaScript to Ecma International, as the starting point for a standard specification that all browser vendors could conform to. This led to the official release of the first ECMAScript language specification in June 1997.\n\nThe standards process continued for a few years, with the release of ECMAScript 2 in June 1998 and ECMAScript 3 in December 1999. Work on ECMAScript 4 began in 2000.[16]\n\nMeanwhile, Microsoft gained an increasingly dominant position in the browser market. By the early 2000s, Internet Explorer's market share reached 95%.[20] This meant that JScript became the de facto standard for client-side scripting on the Web.\n\nMicrosoft initially participated in the standards process and implemented some proposals in its JScript language, but eventually it stopped collaborating on Ecma work. Thus ECMAScript 4 was mothballed.\n\nGrowth and standardization\nDuring the period of Internet Explorer dominance in the early 2000s, client-side scripting was stagnant. This started to change in 2004, when the successor of Netscape, Mozilla, released the Firefox browser. Firefox was well received by many, taking significant market share from Internet Explorer.[21]\n\nIn 2005, Mozilla joined ECMA International, and work started on the ECMAScript for XML (E4X) standard. This led to Mozilla working jointly with Macromedia (later acquired by Adobe Systems), who were implementing E4X in their ActionScript 3 language, which was based on an ECMAScript 4 draft. The goal became standardizing ActionScript 3 as the new ECMAScript 4. To this end, Adobe Systems released the Tamarin implementation as an open source project. However, Tamarin and ActionScript 3 were too different from established client-side scripting, and without cooperation from Microsoft, ECMAScript 4 never reached fruition.\n\nMeanwhile, very important developments were occurring in open-source communities not affiliated with ECMA work. In 2005, Jesse James Garrett released a white paper in which he coined the term Ajax and described a set of technologies, of which JavaScript was the backbone, to create web applications where data can be loaded in the background, avoiding the need for full page reloads. This sparked a renaissance period of JavaScript, spearheaded by open-source libraries and the communities that formed around them. Many new libraries were created, including jQuery, Prototype, Dojo Toolkit, and MooTools.\n\nGoogle debuted its Chrome browser in 2008, with the V8 JavaScript engine that was faster than its competition.[22][23] The key innovation was just-in-time compilation (JIT),[24] so other browser vendors needed to overhaul their engines for JIT.[25]\n\nIn July 2008, these disparate parties came together for a conference in Oslo. This led to the eventual agreement in early 2009 to combine all relevant work and drive the language forward. The result was the ECMAScript 5 standard, released in December 2009.\n\nReaching maturity\nAmbitious work on the language continued for several years, culminating in an extensive collection of additions and refinements being formalized with the publication of ECMAScript 6 in 2015.[26]\n\nThe creation of Node.js in 2009 by Ryan Dahl sparked a significant increase in the usage of JavaScript outside of web browsers. Node combines the V8 engine, an event loop, and I/O APIs, thereby providing a stand-alone JavaScript runtime system.[27][28] As of 2018, Node had been used by millions of developers,[29] and npm had the most modules of any package manager in the world.[30]\n\nThe ECMAScript draft specification is currently maintained openly on GitHub, and editions are produced via regular annual snapshots.[31] Potential revisions to the language are vetted through a comprehensive proposal process.[32][33] Now, instead of edition numbers, developers check the status of upcoming features individually.[31]\n\nThe current JavaScript ecosystem has many libraries and frameworks, established programming practices, and substantial usage of JavaScript outside of web browsers. Plus, with the rise of single-page applications and other JavaScript-heavy websites, several transpilers have been created to aid the development process.[34]\"}","action":"summarize-2","response":"\n\nKey points and main ideas of \"Creation at Netscape\":\n1. The first popular web browser with a graphical user interface, Mosaic, was released in 1993 and played an important role in the development of the World Wide Web. \n2. In 1995, Netscape decided to add a scripting language to Navigator, conspiring with Sun Microsystems to embed the Java programming language and also hiring Brendan Eich to embed the Scheme language. \n3. Eventually, a new language was devised by Eich, named JavaScript, and was released in December 1995.\n4. Microsoft released Internet Explorer in 1995, reverse-engineering the Navigator interpreter and creating its own, JScript. \n5. Around this time, the browser wars between Netscape and Internet Explorer began and the differences between the two made it difficult for developers to make their websites work well in both browsers. \n6. Netscape submitted JavaScript to Ecma International in 1996 to create a standard specification, and ECMAScript 1 was released in June 1997. \n7. ECMAScript 2 was released in June 1998 and ECMAScript 3in December 1999. Work on ECMAScript 4 began in 2000, but was mothballed when Microsoft stopped collaborating on the Ecma standard. \n8. The browser market was dominated by Microsoft in the early 2000s, and JScript became the de facto standard for client-side scripting on the Web. \n9. The rise of Firefox in 2004 revived the JavaScript scene, alongside the rise of Ajax.\n10. The ECMAScript 5standard was released in December 2009, followed by the release of ECMAScript 6 in 2015. \n11. Node.js was created in 2009, combining the V8 engine, an event loop, and I/O APIs and sparking an increase in the usage of JavaScript outside of the web browsers. \n12. The current JavaScript ecosystem has many libraries and frameworks, established programming practices, and usage of JavaScript outside of the web browsers."},
{"cuid":"cld215z5t001tpq24fsip9ctn","createdAt":"2023-01-19 01:01:47.201","updatedAt":"2023-01-19 01:02:15.154","userCuid":"cld9unimw001yucgucbtj659g","prompt":"\n<!--Fill out the below given this prompt \"create a badge access form\".-->\n\n<h1>Badge Access</h1>\n\n<h2>Fields to track badge access</h2>\n<ol>\n<li>Badge ID</li>\n<li>Badge Holder Name</li>\n<li>Date Issued</li>\n<li>Expiration Date</li>\n<li>Access Level</li>\n<li>Building Access</li>\n<li>Areas Access</li>\n<li>Doors Access</li>\n<li>Time Zone Restrictions</li>\n<li>Status (Active/Inactive)</li>\n</ol>\n\n<h2>Roles</h2>\nIdentify the roles people need to take to request, approve, and fulfill.\n<ul>\n<li>Request: Badge Holder</li>\n<li>Approve: Security/Administrative Personnel</li>\n<li>Fulfill: Security/Administrative Personnel</li>\n</ul>\n\n<h2>Self Service Form</h2>\n<ul>\n<li>Badge Holder Name</li>\n<li>Access Level</li>\n<li>Building Access</li>\n<li>Areas Access</li>\n<li>Doors Access</li>\n<li>Time Zone Restrictions</li>\n</ul>\n\n<h3>Process</h3>\n<div class=\"mermaid\">\ngraph TD\n  S0(Start)\n  A1(Approval for access)\n  T1(Task to fulfill access)\n  Sc1(Schedule expiration)\n  E0(End)\n\n  S0-->A1\n  A1--Rejected-->E0\n  A1--Approved-->T1\n  T1-->Sc1\n  Sc1-->E0\n</div>\n<h3>Integration</h3>\nCreate an integration between ServiceNow and BadgeSystem to automatically provision access.\n\nPossible paths for this.\n<ul>\n<li>BadgeSystem polls ServiceNow</li>\n  <ul>\n  <li>Every hour BadgeSystem hits the TableAPI for outstanding tasks.</li>\n  <li>Updates the tasks that automated work has started.</li>\n  <li>Processes the tasks.</li>\n  <li>If processing succeeds, close the task with success</li>\n  <li>Else Update the task that automation has failed</li>\n  </ul>\n<li>ServiceNow makes a rest call</li>\n  <li>When a task is ready to process e.g. state changes to ready, send a rest call to BadgeSystem</li>\n  <li>If processing succeeds, close the task with success</li>\n  <li>Else Update the task that automation has failed</li>\n</ul>\n<h3>Notifications</h3>\n\n<h4>Approval</h4>\nSubject: Badge Access Request for {current.variables.requested_for}\n\n{current.variables.requested_for} is requesting access to area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door}). Please review and approve or reject the request.\n\nThank you,\nSecurity Team\n\n<h4>Approved</h4>\nSubject: Badge Access Granted\n\nDear {current.variables.requested_for},\n\nYou have been granted access to area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door}). Your badge ID is {current.variables.badge_id} and it expires on {current.variables.expirationDate}.\n\nThank you,\nSecurity Team\n\n<h4>Rejected</h4>\nSubject: Badge Access Denied\n\nDear {current.variables.requested_for},\n\nYour request for access to area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door}) was denied. Please contact the Security Team for more information.\n\nThank you,\nSecurity Team\n\n<h4>Notice of expiring access</h4>\nSubject: Badge Access Expiring for area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door})\n\nDear {current.variables.requested_for},\n\nYour access to area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door}) expires in on on {current.variables.expirationDate}. If you still need this access please request it.\n\nThank you,\nSecurity Team\n\n<!--Fill out the below given this prompt \"Manage FOIA requests for contracts\".-->\n<h1>FOIA Request for Contracts </h1>\n\n<h2>Request Process</h2>\nCreate a process to allow for members of the public to submit FOIA requests for Contracts: \n<div class=\"mermaid\">\ngraph TD\n  S0((Start))\n  S1(Submit Request)\n  A2(Routing and receipt of  request)\n  A3(Review to determine if document is releasable)\n  T1(Obtain the requested document)\n  A4(Prepare releasable document)\n  A5(Approval to release)\n  T2(Produce requested document)\n  E0(End)\n\n  S0-->S1\n  S1-->A2\n  A2-->A3\n  A3--Yes-->T1\n  A3--No-->E0\n  T1-->A4\n  A4-->A5\n  A5--Yes-->T2\n  A5--No-->E0\n  T2-->E0\n</div>\n\n<h2>Roles</h2>\nIdentify any roles people need to take to request, approve, and fulfill.\n<ul>\n<li>Requester: Anyone can submit a request as long as the requirements are met.</li>\n<li>Approver: Agency representative or Agency FOIA Officer</li>\n<li>Fulfiller: Agency representative or Agency FOIA Officer</li>\n</ul>\n\n<h2>Self Service Form</h2>\nCreate fields for submitting a request in the ServiceNow Self Service Portal. \n<ol>\n<li>Requester Name</li>\n<li>Requester Phone</li>\n<li>Requester Email</li>\n<li>Agency Name</li>\n<li>Contract Number</li>\n<li>Brief description of the requested document</li>\n</ol>\n\n<h2>Notifications</h2>\n\n<h3>Request Submitted</h3>\nSubject: FOIA Request Submitted\n\nDear Applicant,\n\nYour FOIA request has been submitted. Your Request ID is: {current.variables.request_id}. Please note that your Request ID in all further correspondence.\n\nThank you,\nFOIA Office\n\n<h3>Request Received </h3>\nSubject: FOIA Request Received\n\nDear Agency Representative, \n\nA new FOIA request has been received. Please review the request and follow the process to respond. \n\nThank you, \nFOIA Office \n\n<h3>Request Approved </h3>\nSubject: FOIA Request Approved\n\nDear Agency Representative, \n\nFOIA Request {current.variables.request_id} has now been approved. Please proceed with preparing a releasable document. \n\nThank you,\nFOIA Office \n\n<h3>Request Rejected</h3>\nSubject: FOIA Request Rejected\n\nDear Applicant, \n\nYour FOIA Request {current.variables.request_id} has been rejected. Please contact the FOIA Representative for more information. \n\nThank you,\nFOIA Office\n<!--Fill out the below given this prompt \"managing book rentals\"-->","action":"docs-process-maker","response":"\n<h1>Book Rentals</h1>\n\n<h2>Request Process</h2>\nCreate a process to allow for book rentals.\n<div class=\"mermaid\">\ngraph TD\n  S0(Start)\n  S2(Submit Request)\n  A3(Approval to rent)\n  T1(Rent book)\n  S4(Submit receipt)\n  A5(Approval of receipt)\n  T2(Process payment)\n  E0(End)\n\n  S0-->S2\n  S2-->A3\n  A3--Yes-->T1\n  A3--No-->E0\n  T1-->S4\n  S4-->A5\n  A5--Yes-->T2\n  A5--No-->E0\n  T2-->E0\n</div>\n\n<h2>Roles</h2>\nIdentify any roles people need to take to request, approve, and fulfill.\n<ul>\n<li>Request: Anyone</li>\n<li>Approve: Librarian</li>\n<li>Fulfiller: Librarian</li>\n</ul>\n\n<h2>Self Service Form</h2>\nCreate fields for submitting a request in the ServiceNow Self Service Portal.\n<ol>\n<li>Renter Name</li>\n<li>Renter Phone Number</li>\n<li>Renter Email Address</li>\n<li>Book Title</li>\n<li>Book Author</li>\n<li>Book Genre</li>\n<li>Book Publisher</li>\n<li>Book ISBN</li>\n<li>Rental Duration</li>\n<li>Rental Rate</li>\n</ol>\n\n<h2>Notifications</h2>\n\n<h3>Request</h3>\nSubject: Book Rental Request Submitted\n\nDear {current.variables.renter_name},\n\nYour Book Rental Request for {current.variables.book_title} by {current.variables.book_author} has been submitted. Your Request ID is: {current.variables.request_id}. Please note that your Request ID in all further correspondence.\n\nThank you,\nLibrary\n\n<h3>Approval</h3>\nSubject: Book Rental Request Approved\n\nDear {current.variables.renter_name}, \n\nYour Book Rental Request for {current.variables.book_title} by {current.variables.book_author} has been approved. The total cost to rent this book for {current.variables.duration} is {current.variables.rental_rate}. Please proceed to the Library to pick up your book.\n\nThank you,\nLibrary\n\n<h3>Receipt</h3>\nSubject: Book Rental Receipt Submitted\n\nDear {current.variables.renter_name}, \n\nYour Book Rental Receipt for {current.variables.book_title} has been submitted. Your Request ID is: {current.variables.request_id}. Please note that your Request ID in all further correspondence. \n\nThank you,\nLibrary\n\n<h3>Payment</h3>\nSubject: Book Rental Payment Processed\n\nDear {current.variables.renter_name}, \n\nYour Book Rental Payment for {current.variables.book_title} has been processed. You can now rent another book.\n\nThank you,\nLibrary\n\n<h3>Rejected</h3>\nSubject: Book Rental Request Rejected\n\nDear {current.variables.renter_name}, \n\nYour Book Rental Request for {current.variables.book_title} by {current.variables.book_author} has been rejected. Please contact the Library for more information.\n\nThank you,\nLibrary\n \n \n"},
{"cuid":"cld217t2k001xpq24bohinkg0","createdAt":"2023-01-19 01:03:12.621","updatedAt":"2023-01-19 01:03:18.148","userCuid":"cld9unimw001yucgucbtj659g","prompt":"function onChange(control, oldValue, newValue, isLoading) {\n   if ((isLoading && !g_form.isNewRecord()) || (g_form.isLiveUpdating && g_form.isLiveUpdating()))\n      return;\n\n   if (newValue == '' || newValue == null) {\n      g_form.setValue('location', '');\n      return;\n   }\n   if (!g_form.hasField('location'))\n      return;\n   var caller = g_form.getReference('caller_id', setLocation);\n}\n\nfunction setLocation(caller) {\n   if (caller)\n       g_form.setValue('location', caller.location);\n}\n\"\"\"\nThe onChange function runs on the form.\nExplain it like I'm five years old in the form of a list.\n1.","action":"explain","response":" If the form is loading or if the form is being updated, then return.\n2. If the new value is blank or null, then set the value of 'location' to be blank and return.\n3. If there is no 'location' field on the form, then return.\n4. Get the caller information and pass it to the setLocation function.\n\nThe setLocation function sets the value of the 'location' field on the form.\n\n1. If there is caller information, then set the value of 'location' to be the caller's location."},
{"cuid":"cld2191pz0020pq24q55ahm4r","createdAt":"2023-01-19 01:04:10.488","updatedAt":"2023-01-19 01:04:12.141","userCuid":"cld9unimw001yucgucbtj659g","prompt":"\n// Prompt: When the caller is set to jace, set the group to cab\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 'jace') { // when the new value is jace\n        g_form.setValue('assignment_group', 'cab'); // set the group to cab, replace w/sysid\n    }\n}\n// Prompt: If the book changes to read, set the date to today.\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n  if (isLoading || newValue === '') { return; }\n  if (newValue == 'read') { // when the new value is read\n    var now = new Date(); // make a variable for today\n    var dateInUserFormat = getDateTimeFromFormat(now, g_user_date_time_format); // get it in the users format\n    g_form.setValue('date', dateInUserFormat); // set the date to today\n  }\n}\n// Prompt: show me the groups the user picked is a member of\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    var userAjax = new GlideAjax('global.UserAjax'); // call the UserAjax Script Include\n    userAjax.addParam('sysparm_name', 'getGroups'); // call the getGroups function\n    userAjax.addParam('sysparm_obj', JSON.stringify({\"userId\": newValue})); // pass in the new value for the user\n    userAjax.getXML(function(response){\n        var responseDocument = response.responseXML.document.Element.getAttribute('answer'); //get the answer\n        var serverObj = JSON.parse(answer); // make it a json object\n        var groups = serverObj.groups.join(', '); // make it a string with commas\n        g_form.addInfoMessage(groupString); // show it on the form\n    })\n}\n// Prompt: when food quantity becomes zero, require reason\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 0) { // when the new value is zero\n        g_form.setMandatory('reason', true);\n    }\n}\n// Prompt: when assigned to is jace, set assignment group to acme inc.\n    ","action":"complete","response":"function onChange(control, oldValue, newValue, isLoading, isTemplate) {\n        if (isLoading || newValue === '') { return; }\n        if (newValue == 'jace') { // when the new value is jace\n            g_form.setValue('assignment_group', 'acme inc.'); // set the group to acme inc., replace w/sysid\n        }\n    }\n"},
{"cuid":"cld21a6er0024pq2458mszqss","createdAt":"2023-01-19 01:05:03.22","updatedAt":"2023-01-19 01:05:07.768","userCuid":"cld9unimw001yucgucbtj659g","prompt":"Update this code based following this prompt, \"instead of jace, use george washington\": function onChange(control, oldValue, newValue, isLoading, isTemplate) {\n        if (isLoading || newValue === '') { return; }\n        if (newValue == 'jace') { // when the new value is jace\n            g_form.setValue('assignment_group', 'acme inc.'); // set the group to acme inc., replace w/sysid\n        }\n    }\n\n// Generated by scribe.monster ```","action":"edit","response":"\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 'george washington') { // when the new value is george washington\n        g_form.setValue('assignment_group', 'acme inc.'); // set the group to acme inc., replace w/sysid\n    }\n}"},
{"cuid":"cld21c1ql0026pq2496pu4b5i","createdAt":"2023-01-19 01:06:30.477","updatedAt":"2023-01-19 01:06:35.827","userCuid":"cld9unimw001yucgucbtj659g","prompt":"\n// Prompt: Show a watchlist\n<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <h1>Watchlist</h1>\n            <p>\n                <button class=\"btn btn-primary\" ng-click=\"c.addMe()\">Add Me</button>\n                <button class=\"btn btn-primary\" ng-click=\"c.removeMe()\">Remove Me</button>\n            </p>\n            <p>\n                <span ng-repeat=\"watcher in c.watchlist\">\n                    {{watcher.name}}\n                </span>\n            </p>\n        </div>\n    </div>\n</div>\n// Prompt: Create a week calendar for current week\n","action":"complete","response":"<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <h1>Calendar</h1>\n            <p>\n                <button class=\"btn btn-primary\" ng-click=\"c.createCalendar()\">Create Calendar</button>\n            </p>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <table class=\"table table-bordered table-striped\" ng-if=\"c.calendar\">\n                <thead>\n                    <tr>\n                        <td class=\"calendar-day-header\" ng-repeat=\"day in c.calendar.days\">{{day}}</td>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr ng-repeat=\"week in c.calendar.weeks\">\n                        <td class=\"calendar-day\" ng-repeat=\"day in week.days\">\n                            <span ng-if=\"day.day\">{{day.day}}</span>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n    `\n})\n\nexport class HomeComponent {\n    private calendar: Calendar;\n    private isLoggedIn: boolean;\n    private watchlist: Customer[];\n\n    constructor(private $http: ng.IHttpService,\n        private $rootScope: ng.IRootScopeService,\n        private $location: ng.ILocationService) {\n        $rootScope.title = \"Home\";\n        $rootScope.isLoggedIn = false;\n    }\n\n    addMe() {\n        var request = {\n            method: 'POST',\n            url: \"/api/customer/\",\n            data: {\n                name: \"Bob\"\n            }\n        };\n        this.$http(request).then(x => {\n            this.getWatchlist();\n        });\n    }\n\n    removeMe() {\n        var request = {\n            method: 'DELETE',\n            url: \"/api/custom"},
{"cuid":"cld21e0fo0029pq24kv51lnoa","createdAt":"2023-01-19 01:08:02.1","updatedAt":"2023-01-19 01:08:04.239","userCuid":"cld9unimw001yucgucbtj659g","prompt":"\n// Prompt: add an addme and removeme method to set watchlist\napi.controller=function(){\n    var c = this;\n    c.watchlist = [];\n    c.addMe = function(){\n        c.watchlist.push({name:g_user.name});\n    };\n    c.removeMe = function(){\n        c.watchlist = c.watchlist.filter(function(watcher){\n            return watcher.name != g_user.name;\n        });\n    };\n};\n// Prompt: Show relevant articles\nfunction($rootScope , snAnalytics) {\n  /* widget controller */\n  var c = this;\n\t\n\t\n\tif(!(c.data.response) || c.data.response.length ==0) {\n\t$rootScope.$emit(\"NO_ARTICLE\");\n\t}\n\t\n\tc.articleOpened = function(title){\n\t\tvar payload= {};\n\t\tpayload.name = \"Relevant For You\";\n\t\tpayload.data = {};\n\t\tpayload.data[\"Article Title\"] = title;\n\t\tsnAnalytics.addEvent(payload);\n\t}\n\t\n}\n// Prompt: when c.createCalender is called, ask the server to create a calender record\n","action":"complete","response":"function($rootScope , snAnalytics) {\n  /* widget controller */\n  var c = this;\n\t\n\tif(!(c.data.response) || c.data.response.length ==0) {\n\t$rootScope.$emit(\"NO_ARTICLE\");\n\t}\n\t\n\tc.articleOpened = function(title){\n\t\tvar payload= {};\n\t\tpayload.name = \"Relevant For You\";\n\t\tpayload.data = {};\n\t\tpayload.data[\"Article Title\"] = title;\n\t\tsnAnalytics.addEvent(payload);\n\t}\n\t\n}\n"},
{"cuid":"cld21gdjg002bpq24asednzqp","createdAt":"2023-01-19 01:09:52.396","updatedAt":"2023-01-19 01:09:55.414","userCuid":"cld9unimw001yucgucbtj659g","prompt":"How to write a business rule.\n1.","action":"ask","response":"Identify the goal or purpose of the rule.\n2.Define the conditions or criteria that must be met for the rule to be triggered.\n3.Specify the actions or outcomes that result from triggering the rule.\n4.Test the rule to ensure it works as expected.\n5.Document the rule in a formal, clear, and concise manner."},
{"cuid":"cld21itdr002epq24ac3syh8n","createdAt":"2023-01-19 01:11:46.24","updatedAt":"2023-01-19 01:11:48.147","userCuid":"cld9unimw001yucgucbtj659g","prompt":"Create a business rule to show an error when the related list \"affected ci\" has no records.\n(function(current, previous){","action":"ask","response":" \n  if(current.affected_ci.lenght == 0){\n    throw new Error('Affected CI must have at least one record!');\n  }\n})"},
{"cuid":"cld21jmda002hpq24q60w9jsf","createdAt":"2023-01-19 01:12:23.806","updatedAt":"2023-01-19 01:12:26.768","userCuid":"cld9unimw001yucgucbtj659g","prompt":"Create a servicenow business rule to show an error when the related list \"affected ci\"(using glide record) has no records.\n(function(current, previous){","action":"ask","response":"\n\tif(current.affected_ci.changes()){\n\t\tif (!current.affected_ci.getGlideRecord().hasNext()){\n\t\t\tgs.addErrorMessage('No affected CI record found.');\n\t\t\tcurrent.setAbortAction(true);\n\t\t}\n\t}\n})(current, previous);"},
{"cuid":"cld21lqk9002kpq24bw8e8ojl","createdAt":"2023-01-19 01:14:02.553","updatedAt":"2023-01-19 01:14:08.414","userCuid":"cld9unimw001yucgucbtj659g","prompt":"Make a list of ways to show an error message in servicenow when records are not visible on the current form.","action":"ask","response":"\n\n1. Display an error message in a banner at the top of the form.\n2. Show a popup message with an appropriate error message.\n3. Change the background color of the form to red and display an error message.\n4. Use an in-line message to show an error message when the user attempts to open the form.\n5. Display a modal window with an appropriate error message.\n6. Use a message box to display an error message.\n7. Create a custom HTML widget to show an error message.\n8. Redirect the user to an error page with an appropriate error message.\n9. Create a custom alert message with a relevant error message.\n10. Use ServiceNow’s Client Scripts to display an error message."},
{"cuid":"cld21v52s002npq24xbeme6r5","createdAt":"2023-01-19 01:21:21.269","updatedAt":"2023-01-19 01:21:36.067","userCuid":"cld9unimw001yucgucbtj659g","prompt":"<!--Prompt: Sequence between alice and john-->\n<div class=\"mermaid\">\nsequenceDiagram\n    Alice->>+John: Hello John, how are you?\n    Alice->>+John: John, can you hear me?\n    John-->>-Alice: Hi Alice, I can hear you!\n    John-->>-Alice: I feel great!\n</div>\n<!--Prompt: Flow with one task, no approvals-->\n<div class=\"mermaid\">\nflowchart\n  S0(Start)\n  T1(Task 1)\n  E0(End)\n  S0-->T1\n  T1-->E0\n</div>\n<!--Prompt: Flow with two tasks, no approvals in parellel-->\n<div class=\"mermaid\">\nflowchart\n  S0(Start)\n  T1(Task 1)\n  T2(Task 2)\n  E0(End)\n  S0-->T1\n  S0-->T2\n  T1-->E0\n  T2-->E0\n</div>\n<!--Prompt: Flow with two tasks, no approvals in serial-->\n<div class=\"mermaid\">\nflowchart\n  S0(Start)\n  T1(Task 1)\n  T2(Task 2)\n  E0(End)\n  S0-->T1\n  T1-->T2\n  T2-->E0\n</div>\n<!--Prompt: Flow with one tasks and one approval-->\n<div class=\"mermaid\">\nflowchart\n  S0(Start)\n  A1(Approval 1)\n  T1(Task 1)\n  E0(End)\n  S0-->A1\n  A1--Rejected-->E0\n  A1--Approved-->T1\n  T1-->E0\n</div>\n<!--Prompt: Flow with two tasks, and an approvals in serial-->\n<div class=\"mermaid\">\nflowchart\n  S0(Start)\n  A1(Approval 1)\n  T1(Task 1)\n  T2(Task 2)\n  E0(End)\n  S0-->A1\n  A1--Rejected-->E0\n  A1--Approved-->T1\n  T1-->T2\n  T2-->E0\n</div>\n<!--Prompt: Flow with two approvals in serial, and one task-->\n<div class=\"mermaid\">\nflowchart\n  S0(Start)\n  A1(Approval 1)\n  A2(Approval 2)\n  T1(Task 1)\n  E0(End)\n  S0-->A1\n  A1--Rejected-->E0\n  A1--Approved-->A2\n  A2--Rejected-->E0\n  A2--Approved-->T1\n  T1-->E0\n</div>\n<!--Prompt: Flow with two tasks, and two approvals in serial-->\n<div class=\"mermaid\">\nflowchart\n  S0(Start)\n  A1(Approval 1)\n  A2(Approval 2)\n  T1(Task 1)\n  T2(Task 2)\n  E0(End)\n  S0-->A1\n  A1--Rejected-->E0\n  A1--Approved-->A2\n  A2--Rejected-->E0\n  A2--Approved-->T1\n  T1-->T2\n  T2-->E0\n</div>\n<!--Prompt: pie chart of pets adopted by volunteers-->\n<div class=\"mermaid\">\npie title Pets adopted by volunteers\n  \"Dogs\" : 386\n  \"Cats\" : 85\n  \"Rats\" : 15\n</div>\n<!--Prompt: ServiceNow Certificate Integration Sequence Diagram-->\n<div class=\"mermaid\">\nsequenceDiagram\n  participant ui as User Interactions\n  participant sn as Servicenow\n  participant ms as MidServer\n  participant co as Certificate Authority\n  ui->>sn: User Requests Cert\n  sn->>ms: Run generate-csr-key.js\n  ms->>co: CSR,KEY, and Enrolls Cert\n  co->>sn: Returns Order #\n  loop Download\n  sn->>sn: Waits 2 minutes\n  sn->>ms: Run download-zip-and-upload-cert.js\n  ms->>co: Download Cert\n  co->>sn: Cert Processing\n  end\n  co->>ms: Cert Downloaded\n  ms->>ms: Generate CRT\n  ms->>ms: Generate PFX\n  ms->>ms: Zip CRT, PFX, P7B\n  ms->>sn: Send Zip to SN\n  sn->>ui: Notify user with zip file\n</div>\n<!--Prompt: Show the flow of interactions between a user and an e-commerce website when placing an order.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>E-commerce Website: Place Order\n    E-commerce Website->>Payment Gateway: Verify Payment\n    Payment Gateway->>E-commerce Website: Payment Approved\n    E-commerce Website->>Logistics Company: Prepare Shipment\n    Logistics Company->>E-commerce Website: Shipment Prepared\n    E-commerce Website->>User: Order Confirmation\n</div>\n<!-- Prompt: Illustrate the communication between a mobile app and a server during the login process.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>Mobile App: Login\n    Mobile App->>Server: Send Login Credentials\n    Server->>Authentication Service: Verify Login Credentials\n    Authentication Service->>Server: Credentials Verified\n    Server->>Mobile App: Login Successful\n</div>\n<!-- Prompt: Depict the sequence of events that occur when a user searches for a product on a search engine.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>Search Engine: Search\n    Search Engine->>Search Service: Get Results\n    Search Service->>Index: Retrieve Matches\n    Index->>Search Service: Return Matches\n    Search Service->>Search Engine: Send Results\n    Search Engine->>User: Display Results\n</div>\n<!-- Prompt: Show the interactions between different modules within a banking system during a money transfer operation.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>Banking System: Transfer Money\n    Banking System->>Account Service: Check Balance\n    Account Service->>Banking System: Return Balance\n    Banking System->>Security Service: Verify Transaction\n    Security Service->>Banking System: Transaction Verified\n    Banking System->>Account Service: Deduct Funds\n    Account Service->>Banking System: Funds Deducted\n    Banking System->>Account Service: Add Funds\n    Account Service->>Banking System: Funds Added\n    Banking System->>User: Transaction Complete\n</div>\n<!-- Prompt: Create a sequence diagram that demonstrates the process of video streaming from a server to a client.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>Video Player: Play\n    Video Player->>Server: Request Video\n    Server->>Video Service: Get Video\n    Video Service->>Server: Return Video\n    Server->>Video Player: Send Video\n    Video Player->>User: Display Video\n</div>\n<!-- Prompt: Describe the flow of interactions between a user, a website, and a payment gateway during an online transaction.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>E-commerce Website: Buy Item\n    E-commerce Website->>Payment Gateway: Verify Payment\n    Payment Gateway->>User: Payment Approval\n    User->>E-commerce Website: Confirm Purchase\n    E-commerce Website->>Payment Gateway: Payment Confirmed\n    Payment Gateway->>E-commerce Website: Payment Received\n</div>\n<!-- Prompt: Illustrate the sequence of events that occur when a user logs in to a social media platform.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>Social Media Platform: Login\n    Social Media Platform->>Authentication Service: Verify Login Credentials\n    Authentication Service->>Social Media Platform: Credentials Verified\n    Social Media Platform->>User: Login Successful\n</div>\n<!-- Prompt: Depict the communication between a client and a server during a file upload process.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>Client: Upload file\n    Client->>Server: Send File\n    Server->>File Service: Save File\n    File Service->>Server: File Saved\n    Server->>Client: File Upload Successful\n</div>\n<!-- Prompt: Create a sequence diagram that demonstrates the process of sending an email using an email client.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>Email Client: Compose email\n    Email Client->>SMTP Server: Send email\n    SMTP Server->>MTA: Transfer email\n    MTA->>MDA: Deliver email\n    MDA->>Recipients email client: Display email\n</div>\nA pie chart showing the percentage of global energy consumption by source (fossil fuels, nuclear, hydro, solar, etc.):-->\n<div class=\"mermaid\">\npie\n   \"Fossil Fuels\" : 45,\n   \"Nuclear\" : 20,\n   \"Hydro\" : 10,\n   \"Solar\" : 15,\n   \"Other\" : 10\n</div>\n<!-- Prompt: A pie chart showing the distribution of expenses in a household budget:-->\n<div class=\"mermaid\">\n  pie\n    \"Rent/Mortgage\" : 30,\n    \"Utilities\" : 10,\n    \"Food\" : 20,\n    \"Transportation\" : 15,\n    \"Entertainment\" : 10,\n    \"Savings\" : 15\n</div>\n<!-- Prompt: A pie chart showing the market share of different smartphone brands:-->\n<div class=\"mermaid\">\n  pie\n    \"Samsung\" : 30,\n    \"Apple\" : 20,\n    \"Huawei\" : 15,\n    \"Xiaomi\" : 10,\n    \"Other\" : 25\n</div>\n<!-- Prompt: A pie chart showing the proportion of students in a school by grade level:-->\n<div class=\"mermaid\">\n  pie\n    \"Kindergarten\" : 10,\n    \"Elementary\" : 25,\n    \"Middle School\" : 20,\n    \"High School\" : 30,\n    \"Other\" : 15\n</div>\n<!-- Prompt: A pie chart showing the percentage of website traffic by source (direct, search, referral, social):-->\n<div class=\"mermaid\">\n  pie\n    \"Direct\" : 40,\n    \"Search\" : 25,\n    \"Referral\" : 20,\n    \"Social\" : 15\n</div>\n<!-- Prompt: flow of two manager approvals and then servicenow task to provision access-->","action":"docs-diagram","response":"\n<div class=\"mermaid\">\nflowchart\n  S0(Start)\n  A1(Manager Approval 1)\n  A2(Manager Approval 2)\n  T1(Task 1)\n  E0(End)\n  S0-->A1\n  A1--Rejected-->E0\n  A1--Approved-->A2\n  A2--Rejected-->E0\n  A2--Approved-->T1\n  T1-->E0\n</div>\n"},
{"cuid":"cld21xdl7002qpq240h4zx0yf","createdAt":"2023-01-19 01:23:05.611","updatedAt":"2023-01-19 01:23:07.404","userCuid":"cld9unimw001yucgucbtj659g","prompt":"create a servicenow encoded query to find all catalog items not requested in the last 6 months.\nhttps://service-now.com/sc_req_item_list.do?sysparm_query=","action":"ask","response":"request_item=EMPTY^ORDERBYDESCsys_created_on^sys_updated_onRELATIVELE^ago6m@javascript:gs.beginningOfLast6Months()"},
{"cuid":"cld22sw1y002tpq24d5yej62d","createdAt":"2023-01-19 01:47:35.878","updatedAt":"2023-01-19 01:47:39.824","userCuid":"cld9unimx003tucgu1gxk45hk","prompt":"(function executeRule(current, previous /* null when async */) {\n\tgs.eventQueue('sn_hamp.loaner_order_deploy.notification', current);\n}(current, previous));\n\"\"\"\ncurrent is tied to the sys_script record.\nExplain it like I'm five years old in the form of a list.\n1.","action":"explain","response":"\tWhen a Loaner Order Deployment record is created or updated, the eventQueue() function is called.\n2.\tThe eventQueue() function calls the 'sn_hamp.loaner_order_deploy.notification' function.\n3.\tThe 'sn_hamp.loaner_order_deploy.notification' function creates a notification."},
{"cuid":"cld2nnuy3002xpq24283zyt18","createdAt":"2023-01-19 11:31:33.1","updatedAt":"2023-01-19 11:31:35.16","userCuid":"cld9unimw001yucgucbtj659g","prompt":"create a curl call using the x-userToken for auth and bypass csrf when calling service-now.com","action":"ask","response":"\n\ncurl -H 'x-userToken: <Your_Token_Here>' -H 'X-CSRF-Token: bypass' https://service-now.com"},
{"cuid":"cld2pm3yz003cpq24zrvc6xq2","createdAt":"2023-01-19 12:26:10.715","updatedAt":"2023-01-19 12:26:15.65","userCuid":"cld9unimw001yucgucbtj659g","prompt":"Write me a description for a Youtube video.  Make the words dramatic and base it on the following transcript and title.\nTitle: U-Block Origin: A Better Way to Browse\nTranscript: hey everybody let's talk about making\nwebsites better\nwhen you can't do anything but views\nextensions\nrecently service now released a new\ncommunity let me show you it's right\nhere\nyou can see there's a lot of stuff here\nthat\nI mean it's a lot of things\nfor good or bad it is what it is\nyou can't really control what's up there\nbut if you want to like get to the post\nyou gotta pick one of these places and\nthen you have one like hero section of\ncontent with a search\nfour more options of places to go\nrecommended thing is to check out\nentitlements and then you finally get to\nwhat you really came here for which is\nwhere to ask a question or where to\nanswer questions so let's make this\nbetter\nthe extension I like to use to handle\nthis is uh view block origin and I don't\nhave it added here so let's add it to\nChrome and you can add this to any\nChrome based browser so Microsoft Edge\nChrome\nwhat have you\nonce you have once you're on the website\nyou want to get rid of these elements on\nit's actually too difficult so first I'm\ngoing to pin the u-block origin\nextension\nand then I'm going to use this picker\nto tell it to get rid of certain\nelements so I want to keep this search\nso I'm going to get rid of this image by\nclicking just outside of it it's going\nto add this hero right content\nI'm going to do this a few more times to\nget rid of\nsome extra text and copy that I don't\nwant on the page\nbecause it's just extra stuff I don't\nwant to see\nand like this big section is all of that\nperfect\nmuch better\nand now if I go to any of the products\nit's going to apply that to any of them\nif you ever need to see those things\nagain you can just turn it off with this\nbig power button and press that refresh\nand if you wanna make them gone just\npress it again\nthat's all I wanted to show you I hope\nyou found this helpful\n\nDescription:","action":"ask","response":" Are you tired of dealing with the endless clutter of websites? Do you feel like you spend more time scrolling through ads, pop-ups, and unneccesary text than actually viewing the content you're looking for?  Well, have no fear! U-Block Origin is here to save the day! Using this extension for Chrome-based browsers, you can easily and quickly customize your browsing experience. With the click of a button, you can get rid of ads, pop-ups, and extra text to get straight to the content you're looking for. Don't let websites bog you down - let U-Block Origin make them easier to manage!"},
{"cuid":"cld91xprh00egpq24hq6njuff","createdAt":"2023-01-23 22:57:44.621","updatedAt":"2023-01-23 22:57:46.996","userCuid":"cld9unimw000wucguenaahfdy","prompt":"Update this code based following this prompt, \"set configuration item to parent incident configuration item\": 1. If the \"dispatch\" checkbox is checked:\n2. If the \"assignment_group\" value is empty:\n3. Set the \"assignment_group\" value to \"f3e1717c8771f010fc0321f6cebb3533\".\n// Generated by scribe.monster ```","action":"edit","response":"\n\n1. If the \"dispatch\" checkbox is checked:\n2. Set the \"assignment_group\" value to \"f3e1717c8771f010fc0321f6cebb3533\"."},
{"cuid":"cld2p9hrt002zpq24jcaocekx","createdAt":"2023-01-19 12:16:22.073","updatedAt":"2023-01-19 12:16:30.52","userCuid":"cld9unimw001yucgucbtj659g","prompt":"Write me 20 different titles for a Youtube video under 50 characters.  Make the words dramatic and base it on the following transcript.\n\nhey welcome back let's check out scribe\nmonster\nscribe.monster is an extension on the\nChrome Store to check out\nhow\nAI works you can access right in your\nbrowser so to install it just go to the\nChrome web store search for scrap\nmonster go ahead and add it it can\naccess content on servicenow.com and\nservicenowservices.com this is to allow\nit to edit create and explain code that\nyou tell it to\nI would recommend clicking into the\npuzzle icon and then pinning it to your\naddress bar once you've opened the\nextension from the address bar you'll\nneed to authenticate if you don't have\nan account go to scribe.monster and make one it's not hard this is the website go ahead and click on sign up once you've signed up click on profile show your key and copy that into your clipboard\n\n1.","action":"ask","response":" \"Unlock AI Powers with Scribe.Monster!\" \n2. \"Transform Your Browser: Scribe.Monster!\"\n3. \"AI-ify Your Browser: Scribe.Monster!\"\n4. \"Unlock the Mysteries of AI: Scribe.Monster!\"\n5. \"Install Scribe.Monster: Unlock AI Powers!\" \n6. \"Discover the Power of AI: Scribe.Monster!\"\n7. \"Experience AI Powers with Scribe.Monster!\"\n8. \"Unlock AI with Scribe.Monster!\"\n9. \"Install Scribe.Monster: Unlock the AI!\"\n10. \"Discover AI Powers with Scribe.Monster!\"\n11. \"Get Started with Scribe.Monster!\"\n12. \"Access the AI World with Scribe.Monster!\"\n13. \"Sign Up & Unlock AI: Scribe.Monster!\"\n14. \"Harness the Power of AI: Scribe.Monster!\"\n15. \"Explore AI with Scribe.Monster!\"\n16. \"Achieve More with AI: Scribe.Monster!\" \n17. \"Code Like an AI Pro: Scribe.Monster!\"\n18. \"Pin AI to Your Address Bar: Scribe.Monster!\"\n19. \"Get the Most Out of AI: Scribe.Monster!\"\n20. \"Transform Your Coding: Scribe.Monster!\""},
{"cuid":"cld2pbwn20031pq24tgdq7d9y","createdAt":"2023-01-19 12:18:14.654","updatedAt":"2023-01-19 12:18:20.813","userCuid":"cld9unimw001yucgucbtj659g","prompt":"Write me a description for a Youtube video.  Make the words dramatic and base it on the following transcript and title.\nTitle: Discover the Power of AI: Scribe.Monster!\nTranscript: hey welcome back let's check out scribe\nmonster\nscribe.monster is an extension on the\nChrome Store to check out\nhow\nAI works you can access right in your\nbrowser so to install it just go to the\nChrome web store search for scrap\nmonster go ahead and add it it can\naccess content on servicenow.com and\nservicenowservices.com this is to allow\nit to edit create and explain code that\nyou tell it to\nI would recommend clicking into the\npuzzle icon and then pinning it to your\naddress bar once you've opened the\nextension from the address bar you'll\nneed to authenticate if you don't have\nan account go to scribe.monster and make one it's not hard this is the website go ahead and click on sign up once you've signed up click on profile show your key and copy that into your clipboard\n\nDescription:","action":"ask","response":" Are you ready to unlock the power of Artificial Intelligence? Then check out Scribe.Monster! This amazing Chrome extension allows you to explore AI right from your browser! Install it from the Chrome Web Store, authenticate, and get ready to experience the incredible power of AI. Create, edit, and explain code with Scribe.Monster! Don't wait, sign up now and be a part of the future!"},
{"cuid":"cld2pe6n30033pq246lmo9y7c","createdAt":"2023-01-19 12:20:00.927","updatedAt":"2023-01-19 12:20:10.341","userCuid":"cld9unimw001yucgucbtj659g","prompt":"Write me 20 different titles for a Youtube video under 50 characters.  Make the words dramatic and base it on the following transcript.\nTranscript: if you haven't heard about it open AIS\ncrazy the chat GPT is nuts\nwith that being said I wanted to see if\nI could bring it into servicenow so let\nme show you what I did and\nif you're interested as soon as it gets\nreleased on on the Chrome Store I will\nshoot you an email\nlet's jump into it\nso scribe.monster is what I'm calling\nthis thing in this character here I'm\ngonna I'm named I've named this Stu I I\ndon't know I\nI had stable diffusion generate this\nheart for me and I thought it looked\nadorable\nlet's do take a stab at the scripts you\nwant to change client scripts business\nrules script includes you know maybe\ncode reviews and design work eventually\nbut\nif you sign up here you can put in these\ndetails\nI will shoot you a message as soon as\nthe extension gets approved for the\nChrome Store\nso let's show you what it does here on a\nbunch of script fields in servicenow\nI've told this extension to add this\nelement\ndown here to the left there's this\nGlobal business rule called delete all\nrecords let's say we want to change this\nbut maybe we don't know how or we don't\nwant to write it ourselves\nand we want to only delete records if\nactive is false\nso let's give it a go\nand it's gonna I don't have an indicator\nright now showing that it's chugging\naway on the API but\nit should come back in a couple seconds\nhere\nand what it do it added a query add\nCIS active is false\nyou know maybe this is all the change\nyou needed\nLet's uh let's give it another try here\nwith a client script\nso maybe on the client side of a problem\ninstead of making the work notes\nmandatory when\nthe priority changes let's make work\nnotes and comments mandatory\nright\num\nwhen priority\nchanges yes\nmake both\nwork notes\nand comments","action":"ask","response":"\nmandatory\n\n1. \"Unlock the Power of AIS: Crazy GPT in ServiceNow\"\n2. \"AIS & ServiceNow: Unleashing a Revolution\" \n3. \"AIS GPT Magic: ServiceNow Integration\"\n4. \"AIS GPT: Automating ServiceNow\"\n5. \"GPT & ServiceNow: Unlock the Power\"\n6. \"Servicenow Transformation with AIS GPT\"\n7. \"AIS GPT: Changing ServiceNow Forever\"\n8. \"AIS GPT: Automate ServiceNow Now!\"\n9. \"AIS GPT & ServiceNow: Transformation!\"\n10. \"AIS GPT: Revolutionizing ServiceNow\"\n11. \"AIS GPT: Unleash Your ServiceNow\"\n12. \"ServiceNow Meets AIS GPT: Magic!\"\n13. \"AIS GPT: ServiceNow Automation\"\n14. \"AIS GPT: ServiceNow Automation Unleashed\"\n15. \"AIS GPT: Automate ServiceNow Easily\"\n16. \"AIS GPT: Automate ServiceNow in Seconds\"\n17. \"AIS GPT: Automate ServiceNow Now\"\n18. \"AIS GPT: ServiceNow Automation Revolution\"\n19. \"AIS GPT: Automating ServiceNow Now\"\n20. \"AIS GPT: Automate ServiceNow Now!\""},
{"cuid":"cld2pg78c0037pq24kosvfmyu","createdAt":"2023-01-19 12:21:35.005","updatedAt":"2023-01-19 12:21:38.984","userCuid":"cld9unimw001yucgucbtj659g","prompt":"Write me a description for a Youtube video.  Make the words dramatic and base it on the following transcript and title.\nTitle: Unlock the Power of AIS: Crazy GPT in ServiceNow\nTranscript: if you haven't heard about it open AIS\ncrazy the chat GPT is nuts\nwith that being said I wanted to see if\nI could bring it into servicenow so let\nme show you what I did and\nif you're interested as soon as it gets\nreleased on on the Chrome Store I will\nshoot you an email\nlet's jump into it\nso scribe.monster is what I'm calling\nthis thing in this character here I'm\ngonna I'm named I've named this Stu I I\ndon't know I\nI had stable diffusion generate this\nheart for me and I thought it looked\nadorable\nlet's do take a stab at the scripts you\nwant to change client scripts business\nrules script includes you know maybe\ncode reviews and design work eventually\nbut\nif you sign up here you can put in these\ndetails\nI will shoot you a message as soon as\nthe extension gets approved for the\nChrome Store\nso let's show you what it does here on a\nbunch of script fields in servicenow\nI've told this extension to add this\nelement\ndown here to the left there's this\nGlobal business rule called delete all\nrecords let's say we want to change this\nbut maybe we don't know how or we don't\nwant to write it ourselves\nand we want to only delete records if\nactive is false\nso let's give it a go\nand it's gonna I don't have an indicator\nright now showing that it's chugging\naway on the API but\nit should come back in a couple seconds\nhere\nand what it do it added a query add\nCIS active is false\nyou know maybe this is all the change\nyou needed\nLet's uh let's give it another try here\nwith a client script\nso maybe on the client side of a problem\ninstead of making the work notes\nmandatory when\nthe priority changes let's make work\nnotes and comments mandatory\nright\num\nwhen priority\nchanges yes\nmake both\nwork notes\nand comments\n\nDescription:","action":"ask","response":" Are you looking for a way to make your ServiceNow tasks easier? Unlock the power of AIS with the Crazy GPT extension! In this video, Stu shows you what he did to bring the extension into ServiceNow. Watch as he demonstrates how to make simple changes to script fields, business rules, script includes, and more. When you sign up here, you'll be notified as soon as the extension is released on the Chrome Store. See for yourself how quickly and easily the extension adds query conditions and makes work notes and comments mandatory when the priority changes. Don't wait, unlock the power of AIS and make your ServiceNow tasks simpler today!"},
{"cuid":"cld2plie00039pq24c4rwkoj4","createdAt":"2023-01-19 12:25:42.745","updatedAt":"2023-01-19 12:25:50.918","userCuid":"cld9unimw001yucgucbtj659g","prompt":"Write me 20 different titles for a Youtube video under 50 characters. Make the words dramatic and base it on the following transcript and title.\nTranscript: hey everybody let's talk about making\nwebsites better\nwhen you can't do anything but views\nextensions\nrecently service now released a new\ncommunity let me show you it's right\nhere\nyou can see there's a lot of stuff here\nthat\nI mean it's a lot of things\nfor good or bad it is what it is\nyou can't really control what's up there\nbut if you want to like get to the post\nyou gotta pick one of these places and\nthen you have one like hero section of\ncontent with a search\nfour more options of places to go\nrecommended thing is to check out\nentitlements and then you finally get to\nwhat you really came here for which is\nwhere to ask a question or where to\nanswer questions so let's make this\nbetter\nthe extension I like to use to handle\nthis is uh view block origin and I don't\nhave it added here so let's add it to\nChrome and you can add this to any\nChrome based browser so Microsoft Edge\nChrome\nwhat have you\nonce you have once you're on the website\nyou want to get rid of these elements on\nit's actually too difficult so first I'm\ngoing to pin the u-block origin\nextension\nand then I'm going to use this picker\nto tell it to get rid of certain\nelements so I want to keep this search\nso I'm going to get rid of this image by\nclicking just outside of it it's going\nto add this hero right content\nI'm going to do this a few more times to\nget rid of\nsome extra text and copy that I don't\nwant on the page\nbecause it's just extra stuff I don't\nwant to see\nand like this big section is all of that\nperfect\nmuch better\nand now if I go to any of the products\nit's going to apply that to any of them\nif you ever need to see those things\nagain you can just turn it off with this\nbig power button and press that refresh\nand if you wanna make them gone just\npress it again\nthat's all I wanted to show you I hope\nyou found this helpful\n\n1.","action":"ask","response":" \"A Better Way To Make Websites!\"\n2. \"Making Websites Easier: View Extensions\"\n3. \"Making Websites More Dynamic\"\n4. \"View Extensions: Streamlining Websites\"\n5. \"Websites Reimagined: View Extensions\"\n6. \"View Extensions: Taming Websites\"\n7. \"Websites Redefined: View Extensions\"\n8. \"View Extensions: A Revolution for Websites\"\n9. \"Say Goodbye To Cluttered Websites\"\n10. \"Web Design Evolved: View Extensions\"\n11. \"Making Websites Easier: U-Block Origin\"\n12. \"U-Block Origin: Unlocking Websites\"\n13. \"U-Block Origin: A Better Way to Browse\"\n14. \"Making Websites Better: U-Block Origin\"\n15. \"U-Block Origin: Customizing Your Web Experience\"\n16. \"U-Block Origin: Unleash Your Web Potential\"\n17. \"U-Block Origin: Easier Website Access\"\n18. \"U-Block Origin: Quicker Website Browsing\"\n19. \"U-Block Origin: Streamlining Web Access\"\n20. \"U-Block Origin: Making Websites Easier\""},
{"cuid":"cld33weg4005lpq24lo4x33gr","createdAt":"2023-01-19 19:06:05.476","updatedAt":"2023-01-19 19:06:06.565","userCuid":"cld9unimx004cucgudurz9li3","prompt":"Update this code based following this prompt, \"\":  ```","action":"edit","response":"\n\nThere is no prompt given."},
{"cuid":"cld2pnvaj003fpq24j0eceoae","createdAt":"2023-01-19 12:27:32.779","updatedAt":"2023-01-19 12:27:40.716","userCuid":"cld9unimw001yucgucbtj659g","prompt":"Write me 20 different titles for a Youtube video under 50 characters. Make the words dramatic and base it on the following transcript and title.\nTranscript: welcome to the news everybody I'm going to jump right into it this week of October 3rd I've got a couple things to go over we got code creative service networks Community relaunch for Content Oktoberfest get to the point theories the developer group if you're dropping bombs at LinkedIn and the key to servicenow\n\nfirst up code creative Travis Tolson and his wife Sarah have been well they did another live stream about public forums and they are a who to follow so if you're not currently followed please go check them out on YouTube and keep an eye further about that um Travis is always talking about public forums and all they're difficult to do and they are so I'm enjoying watching those guys go about it next up we got Kyle Carson asking on LinkedIn where do you get merch for the stuff you work on and in the comments I had no idea desserts existed um we had a few folks respond with these two truths you can get on Amazon I'll have the links below if you guys want those additionally there's some official shirts you pumped like doing contests they recently when I say they the service then uh developer advocates at um a contest to get a shirt for the app engine Studio stuff and there's other swag you can get like that so if you have a contact out there get a pretty good job service now as well maybe they can hook you up the community relaunch just uh happened this today I was checking it out there's a lot of new things out there\n\nfeel free to check it out also everybody has open messaging so if you want to test something more I said something feel free to shoot me a message but for look for Jace bedside and if you're an RSS advocate there's Marissa's feet you met at the inspect HTML you can find those feeds that you want but it's there\n\ncreate economy 2023 call for Content has been announced if you want to present at knowledge start baking your content now I don't know if it'll be in person or remote but whatever it is if you want to participate in it they're looking for your details\n\nit's October and that means it's October 1st if you're not familiar with what Oktoberfest is um well digitalocean and GitHub I've been doing this for a long time they've got 40 000 t-shirts to give away for folks that meet the requirements that they have on approved repositories service now is opening up a few of their repositories for this purpose so if you want to try to earn one of those things as a challenge to yourself or to get better with kids or share some of love I know that I'm going to be looking at the instant scan repo very extensively over this next month but if you want to earn a shirt and last year they did some tree planting thing this is the time to do it\n\nget to the point there's a new video series that I watched earlier today where they take a question they try to break it down and answer it like three or four minutes and this question is kind of complicated trying to style a service in that field under specific conditions they did a great job and the video was entertaining I don't know what else you can ask for\n\nRobert Fedora gets dropping knowledge of LinkedIn he posted a post and read it in 15 different resources to help get people to learn service now so if you're looking to learn service now and you want some quick resources the bookmark to check out later check that post album\n\nand I don't know where this came from but I guess servicenow gives out the key to servicenow to people Michael Lombardo aka the mayor got it so I guess that kind of makes sense right the mayor's supposed to get the key to the kingdom or key to the city so good job on you Mike\n\nthat's it if you have any content you want me to feature reach out through your message on Queen on Twitter or LinkedIn or the service now Community I guess because that's a thing see you guys next time\n\n1.","action":"ask","response":" Creative Content for Code Creators \n2. Unleashing the Power of Oktoberfest \n3. Get to the Point: Styling ServiceNow \n4. Rob Fedora: ServiceNow Guru \n5. The Key to ServiceNow: What is it? \n6. Become an Expert with ServiceNow \n7. Creative Content on Code Creators \n8. Oktoberfest: The Ultimate Challenge \n9. The Point of ServiceNow Styling \n10. R. Fedora: Master of ServiceNow \n11. ServiceNow: Unlocking the Key \n12. Get Creative for Code Creators \n13. Oktoberfest: Take the Challenge \n14. ServiceNow Styling: Get to the Point \n15. Rob Fedora Drops ServiceNow Knowledge \n16. The Key to ServiceNow: Get It Now \n17. Knowledge is Power: ServiceNow Experts \n18. Creative Content: Code Creators Unite \n19. October Challenge: Oktoberfest \n20. Get Styling with ServiceNow: Point it Out"},
{"cuid":"cld2pog9r003ipq24x0sukcrr","createdAt":"2023-01-19 12:27:59.968","updatedAt":"2023-01-19 12:28:03.281","userCuid":"cld9unimw001yucgucbtj659g","prompt":"Write me 20 different titles for a Youtube video under 60 characters. Make the words dramatic and base it on the following transcript and title.\nTranscript: welcome to the news everybody I'm going to jump right into it this week of October 3rd I've got a couple things to go over we got code creative service networks Community relaunch for Content Oktoberfest get to the point theories the developer group if you're dropping bombs at LinkedIn and the key to servicenow\n\nfirst up code creative Travis Tolson and his wife Sarah have been well they did another live stream about public forums and they are a who to follow so if you're not currently followed please go check them out on YouTube and keep an eye further about that um Travis is always talking about public forums and all they're difficult to do and they are so I'm enjoying watching those guys go about it next up we got Kyle Carson asking on LinkedIn where do you get merch for the stuff you work on and in the comments I had no idea desserts existed um we had a few folks respond with these two truths you can get on Amazon I'll have the links below if you guys want those additionally there's some official shirts you pumped like doing contests they recently when I say they the service then uh developer advocates at um a contest to get a shirt for the app engine Studio stuff and there's other swag you can get like that so if you have a contact out there get a pretty good job service now as well maybe they can hook you up the community relaunch just uh happened this today I was checking it out there's a lot of new things out there\n\nfeel free to check it out also everybody has open messaging so if you want to test something more I said something feel free to shoot me a message but for look for Jace bedside and if you're an RSS advocate there's Marissa's feet you met at the inspect HTML you can find those feeds that you want but it's there\n\ncreate economy 2023 call for Content has been announced if you want to present at knowledge start baking your content now I don't know if it'll be in person or remote but whatever it is if you want to participate in it they're looking for your details\n\nit's October and that means it's October 1st if you're not familiar with what Oktoberfest is um well digitalocean and GitHub I've been doing this for a long time they've got 40 000 t-shirts to give away for folks that meet the requirements that they have on approved repositories service now is opening up a few of their repositories for this purpose so if you want to try to earn one of those things as a challenge to yourself or to get better with kids or share some of love I know that I'm going to be looking at the instant scan repo very extensively over this next month but if you want to earn a shirt and last year they did some tree planting thing this is the time to do it\n\nget to the point there's a new video series that I watched earlier today where they take a question they try to break it down and answer it like three or four minutes and this question is kind of complicated trying to style a service in that field under specific conditions they did a great job and the video was entertaining I don't know what else you can ask for\n\nRobert Fedora gets dropping knowledge of LinkedIn he posted a post and read it in 15 different resources to help get people to learn service now so if you're looking to learn service now and you want some quick resources the bookmark to check out later check that post album\n\nand I don't know where this came from but I guess servicenow gives out the key to servicenow to people Michael Lombardo aka the mayor got it so I guess that kind of makes sense right the mayor's supposed to get the key to the kingdom or key to the city so good job on you Mike\n\nthat's it if you have any content you want me to feature reach out through your message on Queen on Twitter or LinkedIn or the service now Community I guess because that's a thing see you guys next time\n\n1.","action":"ask","response":" \"Code Creative: A Live Stream\"\n2. \"Oktoberfest Swag: T-shirts Galore!\"\n3. \"Create Economy 2023: Submit Now!\"\n4. \"The Point: Style ServiceNow in 4min\"\n5. \"Robert Fedora: 15 ServiceNow Resources\"\n6. \"Mayor Michael: Key to ServiceNow\""},
{"cuid":"cld2pplrx003mpq24z9j5yqsw","createdAt":"2023-01-19 12:28:53.757","updatedAt":"2023-01-19 12:29:02.692","userCuid":"cld9unimw001yucgucbtj659g","prompt":"Write me 20 different titles for a Youtube video under 100 characters. Make the words dramatic and base it on the following transcript and title.\nTranscript: welcome to the news everybody I'm going to jump right into it this week of October 3rd I've got a couple things to go over we got code creative service networks Community relaunch for Content Oktoberfest get to the point theories the developer group if you're dropping bombs at LinkedIn and the key to servicenow\n\nfirst up code creative Travis Tolson and his wife Sarah have been well they did another live stream about public forums and they are a who to follow so if you're not currently followed please go check them out on YouTube and keep an eye further about that um Travis is always talking about public forums and all they're difficult to do and they are so I'm enjoying watching those guys go about it next up we got Kyle Carson asking on LinkedIn where do you get merch for the stuff you work on and in the comments I had no idea desserts existed um we had a few folks respond with these two truths you can get on Amazon I'll have the links below if you guys want those additionally there's some official shirts you pumped like doing contests they recently when I say they the service then uh developer advocates at um a contest to get a shirt for the app engine Studio stuff and there's other swag you can get like that so if you have a contact out there get a pretty good job service now as well maybe they can hook you up the community relaunch just uh happened this today I was checking it out there's a lot of new things out there\n\nfeel free to check it out also everybody has open messaging so if you want to test something more I said something feel free to shoot me a message but for look for Jace bedside and if you're an RSS advocate there's Marissa's feet you met at the inspect HTML you can find those feeds that you want but it's there\n\ncreate economy 2023 call for Content has been announced if you want to present at knowledge start baking your content now I don't know if it'll be in person or remote but whatever it is if you want to participate in it they're looking for your details\n\nit's October and that means it's October 1st if you're not familiar with what Oktoberfest is um well digitalocean and GitHub I've been doing this for a long time they've got 40 000 t-shirts to give away for folks that meet the requirements that they have on approved repositories service now is opening up a few of their repositories for this purpose so if you want to try to earn one of those things as a challenge to yourself or to get better with kids or share some of love I know that I'm going to be looking at the instant scan repo very extensively over this next month but if you want to earn a shirt and last year they did some tree planting thing this is the time to do it\n\nget to the point there's a new video series that I watched earlier today where they take a question they try to break it down and answer it like three or four minutes and this question is kind of complicated trying to style a service in that field under specific conditions they did a great job and the video was entertaining I don't know what else you can ask for\n\nRobert Fedora gets dropping knowledge of LinkedIn he posted a post and read it in 15 different resources to help get people to learn service now so if you're looking to learn service now and you want some quick resources the bookmark to check out later check that post album\n\nand I don't know where this came from but I guess servicenow gives out the key to servicenow to people Michael Lombardo aka the mayor got it so I guess that kind of makes sense right the mayor's supposed to get the key to the kingdom or key to the city so good job on you Mike\n\nthat's it if you have any content you want me to feature reach out through your message on Queen on Twitter or LinkedIn or the service now Community I guess because that's a thing see you guys next time\n\n1.","action":"ask","response":" \"Exploring the Creativity of Code Creative\" \n2. \"Content Oktoberfest: Get Ready to Celebrate!\" \n3. \"Diving Into Developer Group Dynamics\" \n4. \"LinkedIn's Knowledge Dropping: Robert Fedora\" \n5. \"Mayor Of ServiceNow: Unlocking the Key\" \n6. \"Code Creative: Making Public Forums Easier\" \n7. \"Crowd-Sourcing Merch: Kyle Carson\" \n8. \"ServiceNow Community Relaunch: Explore!\" \n9. \"Knowledge2023: Are You Ready to Present?\" \n10. \"T-Shirts For App Engine Studio: A Contest\" \n11. \"Swag For ServiceNow: Get Hooked Up\" \n12. \"Instant Scan Repo: October Challenge\" \n13. \"Get To The Point: A Video Series\" \n14. \"Style ServiceNow: Under Specific Conditions\" \n15. \"15 Resources: Learn ServiceNow Quickly\" \n16. \"Content Feature Request: Reach Out!\" \n17. \"October: DigitalOcean & GitHub T-Shirts\" \n18. \"Tree Planting Challenge: Earn a Shirt!\" \n19. \"Welcome To The News: Let's Jump In!\" \n20. \"Who To Follow: Travis & Sarah Tolson\""},
{"cuid":"cld2pvgs4003qpq24jrrm6i88","createdAt":"2023-01-19 12:33:27.22","updatedAt":"2023-01-19 12:33:35.865","userCuid":"cld9unimw001yucgucbtj659g","prompt":"Write me 20 different titles for a Youtube video under 50 characters. Make the words dramatic and base it on the following transcript and title.\nTranscript: welcome back to the news it's been a few weeks let's jump into it I'm gonna go back to September 12th in my news.js.pro site uh while I'm going back I guess we can talk about the community on the 2nd of October a new communities can be launched and anything posted since I think it was the 22nd until the second um all that stuff will disappear because they don't have a plan to migrate stuff in that 10-day period so hopefully everything in LA in those 10 days aren't important because it's not going to be captured we're just going to start with the things I have voted that I I noted here so there's this browser extensions for servicenow developer productivity boost YouTube video by Martin Ivanov who talks about servicenow utils and two other Firefox extensions for identifying the environment you're in and other productivity stuff they're all Firefox extensions must be a Firefox um user totally fine Firefox is a great browser I appreciate this kind of content video content is hard I get that I make it sometimes when I have time\n\nthank you Martin Rob fedoric posted this using flow designer to close a parent record when all the child tasks are complete you know this kind of stuff is how you teach folks to do things so that's great stuff and he does it quickly and he's to the point and I appreciate that work\n\nyep that's all I really have to say about that friends oh I do want to note cancel my transactions.2 so you can use cancel my transaction singular or cancel my transactions plural that do I don't know why you use one or the other but they both do the same thing they cancel the current session transaction\n\nwhich is useful when you load a list you don't mean to Dylan Lindgren posts about um from service portal widgets to next experience components it's quite a long post with some graphics showing how much work goes into making a competent service portal widget and a like service um our next experience widget I appreciate it that that that shows like the way the frame these kind of changes going forward not a lot of customers are not life As Time progress more people are going to be using next experience and are going to have to become familiar with those components when they need to do custom stuff foreign has a new video well on the 14th he posted a video about the Navigator filter shortcuts the thing I took from this in addition to the dot list.form dot config is that you can do it in every single text field for favorites all and experiences or workspaces I didn't realize that so that's great\n\num servicenow has an action program they've been pumping that up and being excited about that and it's a great program there's a couple things in here about it we have this podcast on the 14th and then we have this video on the 14th as well but really companies should consider hiring these next-gen folks\n\nand in addition to that there's other boot camps that have folks too getting somebody who's new isn't a bad thing it just means they haven't built the experience but they'll get there so give them a chance\n\nAshley Center posts a list of UI Builder videos who doesn't like an index or table of contents I love that kind of stuff Mahesh writes about the New Tokyo feature on updating and deleting bulk records without scripting which is a you know that is so helpful the docs sometimes they'll say like this is a feature here's all the fields for the form and you may or may not set these but like an actual use case on how to use it that's where the community stuff comes into play now it seems and Mahesh did a wonderful job writing that up I read that a couple times now Justin Meadows made some video on lucidchart which is a great tool for diagramming you know it's like a Vizio alternative Jeff Pierce made a comic on the HR violation and it made me laugh out loud because it reminded me of the time that I worked in Ohio for this well anyways I appreciate that comic thank you Jeff for that I that brought me back a while servicenows and rearranging some of their content I believe for the move to the new community so there's a whole bunch of these a three-letter acronyms now on Now product architecture reference architectures scoping guides process guides with a link to a bunch of other stuff which is great um but I guess we'll see how it looks in the new community on the 2nd of October ah so uh Corey Wesley and Robert for dork have a podcast called CJ and the Duke and not this episode but the one before it is about how to get help and that is a great a great video I'll link to it below um uh if you need help or one like try to make sure you're getting the help you need like follow their advice because that is fantastic I've written on the topic I know with Tim Woodruff has written on the topic before but you know when you're posting and you need help it isn't like you're looking at a gecko you're just like help me I have a problem\n\nah the developer Advocates they do an actual highlight reel of the build with the es hashtag challenge that they had that went through September 19th I haven't had a chance to look at this highlight reel but I've been meaning to as I've been following that challenge I would love to see these folks anybody who made this bill AES things try to build the same thing with another tool I mean take your pick you got Microsoft forms you got booty base you got retool you got AWS amplify like how easy or difficult is it in these other tools it'd be kind of interesting to see right I mean who knows maybe there's something in those other spaces that are just as easy or maybe it'll highlight how much more difficult it is\n\nI do it but I just haven't time and I think that brings us pretty current for the stuff that I wanted to highlight\n\nthe other day I posted on LinkedIn when folks ask you how do you get in the tech what do you do every time I tried this it seems to have problems so I asked the folks on LinkedIn what do you do I got a bunch of responses and some of them are really great I personally really appreciate the you cannot teach or train a cure for this every novice must exercise their own agency they will this will never be a failure of your efforts you must never let this negativity affect your mindset when you don't show up or when they don't show up it's because they do not care they care less about their progress than you do and who are you to pay their deficit\n\nthe shorter version of that is you can lead a horse to water but you can't make a drink thanks Rob I really appreciate that there's a load of other great comments here from other people and I love it thanks everybody for being part of this conversation\n\nmap Iran if you don't know who he is he used to be equate the voice in the service desk space now he's working on another product but he's been asking questions about like is it time that we remove servicenow from the itsm category when it comes to like the garden reports and this and that he has some points to make and I don't necessarily disagree like servicenow is a platform to build solutions for all sorts of things itsm was just their initial go at how to get into those companies he reached out to he uh tagged me and Corey Wesley and Robert on this as well I would love to see some more engagement on here if you have it it's been really interesting to read\n\nbut please let your opinion be known I would love to see what comes at this conversation\n\nupcoming events we got three meetups coming up we have the Kitchener meetup on October 6th the Kitchener is east of Detroit west of New York and Canada\n\nwe've got Oklahoma City on October 13th and we got Colorado Denver on October 27th there's a whole bunch of I.T events so if you are looking about wanting to learn about predictive intelligence or virtual agent or Microsoft teams in the chat for performance analytics they have events for you over the next month and that should bring us up to about Halloween\n\nI will see you next time make sure to like And subscribe and ring the bell if you want to get notifications as soon as these things get posted\n\nsee ya\n\n1.","action":"ask","response":" \"Unlock Servicenow Developer Productivity\" \n2. \"Navigator Filter Shortcuts: Tips & Tricks\"\n3. \"Service Portal 2.0: Updating Widgets\" \n4. \"Rearranging Servicenow Content\"\n5. \"UI Builder: A Comprehensive Guide\"\n6. \"Bulk Update & Delete Records w/o Scripting\" \n7. \"Lucidchart: Diagramming Tool\"\n8. \"HR Violation Comic: A Laugh Out Loud Moment\"\n9. \"Action Program: Hiring Next Gen Folks\"\n10. \"CJ & Duke: How to Get Help\"\n11. \"Build With the #Es Hashtag Challenge\"\n12. \"Product Architecture: A 3 Letter Acronym\"\n13. \"Process Guides: A Link to Success\"\n14. \"Leading a Horse to Water\"\n15. \"Teaching & Training: A Novice's Agency\"\n16. \"Comparing Tools: Easy or Difficult?\"\n17. \"Highlights of the #Es Challenge\"\n18. \"Getting Help: Tim Woodruff's Advice\"\n19. \"Developer Advocates: A Highlight Reel\"\n20. \"Removing Servicenow from ITMS? Debate!\""},
{"cuid":"cld2px4fa003spq24a0z9ge17","createdAt":"2023-01-19 12:34:44.518","updatedAt":"2023-01-19 12:34:59.05","userCuid":"cld9unimw001yucgucbtj659g","prompt":"Write me 20 different titles for a Youtube video under 50 characters about the following news. Make the words dramatic and base it on the following transcript and title.\nTranscript: welcome back to the news it's been a few weeks let's jump into it I'm gonna go back to September 12th in my news.js.pro site uh while I'm going back I guess we can talk about the community on the 2nd of October a new communities can be launched and anything posted since I think it was the 22nd until the second um all that stuff will disappear because they don't have a plan to migrate stuff in that 10-day period so hopefully everything in LA in those 10 days aren't important because it's not going to be captured we're just going to start with the things I have voted that I I noted here so there's this browser extensions for servicenow developer productivity boost YouTube video by Martin Ivanov who talks about servicenow utils and two other Firefox extensions for identifying the environment you're in and other productivity stuff they're all Firefox extensions must be a Firefox um user totally fine Firefox is a great browser I appreciate this kind of content video content is hard I get that I make it sometimes when I have time\n\nthank you Martin Rob fedoric posted this using flow designer to close a parent record when all the child tasks are complete you know this kind of stuff is how you teach folks to do things so that's great stuff and he does it quickly and he's to the point and I appreciate that work\n\nyep that's all I really have to say about that friends oh I do want to note cancel my transactions.2 so you can use cancel my transaction singular or cancel my transactions plural that do I don't know why you use one or the other but they both do the same thing they cancel the current session transaction\n\nwhich is useful when you load a list you don't mean to Dylan Lindgren posts about um from service portal widgets to next experience components it's quite a long post with some graphics showing how much work goes into making a competent service portal widget and a like service um our next experience widget I appreciate it that that that shows like the way the frame these kind of changes going forward not a lot of customers are not life As Time progress more people are going to be using next experience and are going to have to become familiar with those components when they need to do custom stuff foreign has a new video well on the 14th he posted a video about the Navigator filter shortcuts the thing I took from this in addition to the dot list.form dot config is that you can do it in every single text field for favorites all and experiences or workspaces I didn't realize that so that's great\n\num servicenow has an action program they've been pumping that up and being excited about that and it's a great program there's a couple things in here about it we have this podcast on the 14th and then we have this video on the 14th as well but really companies should consider hiring these next-gen folks\n\nand in addition to that there's other boot camps that have folks too getting somebody who's new isn't a bad thing it just means they haven't built the experience but they'll get there so give them a chance\n\nAshley Center posts a list of UI Builder videos who doesn't like an index or table of contents I love that kind of stuff Mahesh writes about the New Tokyo feature on updating and deleting bulk records without scripting which is a you know that is so helpful the docs sometimes they'll say like this is a feature here's all the fields for the form and you may or may not set these but like an actual use case on how to use it that's where the community stuff comes into play now it seems and Mahesh did a wonderful job writing that up I read that a couple times now Justin Meadows made some video on lucidchart which is a great tool for diagramming you know it's like a Vizio alternative Jeff Pierce made a comic on the HR violation and it made me laugh out loud because it reminded me of the time that I worked in Ohio for this well anyways I appreciate that comic thank you Jeff for that I that brought me back a while servicenows and rearranging some of their content I believe for the move to the new community so there's a whole bunch of these a three-letter acronyms now on Now product architecture reference architectures scoping guides process guides with a link to a bunch of other stuff which is great um but I guess we'll see how it looks in the new community on the 2nd of October ah so uh Corey Wesley and Robert for dork have a podcast called CJ and the Duke and not this episode but the one before it is about how to get help and that is a great a great video I'll link to it below um uh if you need help or one like try to make sure you're getting the help you need like follow their advice because that is fantastic I've written on the topic I know with Tim Woodruff has written on the topic before but you know when you're posting and you need help it isn't like you're looking at a gecko you're just like help me I have a problem\n\nah the developer Advocates they do an actual highlight reel of the build with the es hashtag challenge that they had that went through September 19th I haven't had a chance to look at this highlight reel but I've been meaning to as I've been following that challenge I would love to see these folks anybody who made this bill AES things try to build the same thing with another tool I mean take your pick you got Microsoft forms you got booty base you got retool you got AWS amplify like how easy or difficult is it in these other tools it'd be kind of interesting to see right I mean who knows maybe there's something in those other spaces that are just as easy or maybe it'll highlight how much more difficult it is\n\nI do it but I just haven't time and I think that brings us pretty current for the stuff that I wanted to highlight\n\nthe other day I posted on LinkedIn when folks ask you how do you get in the tech what do you do every time I tried this it seems to have problems so I asked the folks on LinkedIn what do you do I got a bunch of responses and some of them are really great I personally really appreciate the you cannot teach or train a cure for this every novice must exercise their own agency they will this will never be a failure of your efforts you must never let this negativity affect your mindset when you don't show up or when they don't show up it's because they do not care they care less about their progress than you do and who are you to pay their deficit\n\nthe shorter version of that is you can lead a horse to water but you can't make a drink thanks Rob I really appreciate that there's a load of other great comments here from other people and I love it thanks everybody for being part of this conversation\n\nmap Iran if you don't know who he is he used to be equate the voice in the service desk space now he's working on another product but he's been asking questions about like is it time that we remove servicenow from the itsm category when it comes to like the garden reports and this and that he has some points to make and I don't necessarily disagree like servicenow is a platform to build solutions for all sorts of things itsm was just their initial go at how to get into those companies he reached out to he uh tagged me and Corey Wesley and Robert on this as well I would love to see some more engagement on here if you have it it's been really interesting to read\n\nbut please let your opinion be known I would love to see what comes at this conversation\n\nupcoming events we got three meetups coming up we have the Kitchener meetup on October 6th the Kitchener is east of Detroit west of New York and Canada\n\nwe've got Oklahoma City on October 13th and we got Colorado Denver on October 27th there's a whole bunch of I.T events so if you are looking about wanting to learn about predictive intelligence or virtual agent or Microsoft teams in the chat for performance analytics they have events for you over the next month and that should bring us up to about Halloween\n\nI will see you next time make sure to like And subscribe and ring the bell if you want to get notifications as soon as these things get posted\n\nsee ya\n\n1.","action":"ask","response":" \"Uncovering the ServiceNow Revolution: Martin Ivanov\"\n2. \"Make the Most of ServiceNow Flow Designer\"\n3. \"UI Builder Videos: A Must-Have Index\"\n4. \"Bulk Editing Made Easy: Tokyo Feature\"\n5. \"Lucidchart: Making Diagrams Simple\"\n6. \"HR Violation: A Comic Relief\"\n7. \"Action Program: Airing the Next-Gen Folks\"\n8. \"Navigator Filter Shortcuts: Fedoric's Findings\"\n9. \"Service Portal to Next Experience: Mahesh Explains\"\n10. \"CJ & The Duke: Getting Help Right\"\n11. \"Highlight Reel: #BuildwithAES Challenge\"\n12. \"Product Architecture: ServiceNow's Restructuring\"\n13. \"LinkedIn's Advice: Never Give Up\"\n14. \"Lead a Horse to Water: Rob's Tips\"\n15. \"ITSM Category: Is it Time to Remove ServiceNow?\"\n16. \"Predictive Intelligence: IT Events Ahead\"\n17. \"Virtual Agents: A Guide to Performance Analytics\"\n18. \"Microsoft Teams: Get Ahead of the Chat\"\n19. \"Kitchener Meetup: October 6th\"\n20. \"Oklahoma City & Denver: October Events\""},
{"cuid":"cld2q24xq003vpq240my8f1ve","createdAt":"2023-01-19 12:38:38.463","updatedAt":"2023-01-19 12:38:46.967","userCuid":"cld9unimw001yucgucbtj659g","prompt":"Write me 20 different titles for a Youtube video under 50 characters about the following news. Make the words dramatic and base it on the following transcript and title.\nTranscript: hey everybody this uh news is gonna be a little bit different i don't have anything prepped so i'm just gonna walk through what i look at and see what stands out let's take a look at\n\nthe news.js pro to get an idea of what might be there all right so we got some short form content here with mark scott sas of servicenow released the data filtration video i haven't watched it yet but i i like this feature i can't wait to see how they change it to make it better\n\nasync validation and on submit catalog client script let's take a look muhammad khan writes although it's not recommended to perform validations in a non-submit client script but let's say you have a business requirement performance validation on a submission of a catalog item okay yeah i totally get this that happened that happens to me okay so he's come up with some other solution to do this it's out it reads like i haven't tried this at all interesting well that's that's nice to see um inside the barrel has a video about merging and exporting records across instances i if i'm ever seen right now properly on linkedin that was something to do with like merging xml records like records in their xml files\n\noh and justin meadows talking about this presentation mode in microsoft teams i know some folks really hate on microsoft teams and i get it but a lot of organizations use it so if you like how this looks you can do this in teams in like a single button click so i would check out this uh i'm guessing\n\nthis link here from justin meadows\n\nspeaking of events where do i get those i generally go to jstop pro resources and spread link a bunch of stuff and down here i have a column of links that are more community driven so there's meetups upcoming events and i.t events so i'd go to like it event see what's there it looks like today they have some performance analytics discussions and i guess tomorrow there's some shift left through devops i'm not sure about that i'm not sure what they're gonna be going over specifically there best practices when deploying an adoption of servicenow for microsoft teams okay um activating creative intelligence a whole bunch of stuff coming up but\n\nnothing that i thought was useful for me there is this upcoming events which has the meetups as well we got the meetups i brought up last week\n\nand then um that's pretty much it i was told though by someone some lawrence tim lawrence t from glidefast that they're releasing glide fast plus which is uh an on-demand training platform dedicated to delivering servicenow courses um i don't know much about this other than that it's being released today\n\nand i think video tutorials and video content like this could be really amazing i kind of just produced the servicenow essentials see what it's about looks like it's 100 bucks of course\n\nand this goes through the itsm stuff and you can see down here like it shows there are these videos on these parts of it\n\nand that's all i have to say about it\n\ni hope there's some thing that ties it into some way to like certify you've done it or like make sure that you understand the content but that's a that's a tricky as a tricky task as i think everybody sees with the servicenow certifications and how much value they add or don't add to someone\n\nwell that's all i got have a great week everybody talk to you later\n\n1.","action":"ask","response":" \"Unlock Servicenow Pro w/ Data Filtration Video\"\n2. \"Secrets of Async Validation & On Submit\"\n3. \"Merge & Export Records Across Instances\"\n4. \"The Power of Presentation Mode in Microsoft Teams\"\n5. \"Discover IT Events on JSTOP Pro\"\n6. \"Activating Creative Intelligence & More\"\n7. \"Introducing Glidefast Plus: On-Demand Training\"\n8. \"Unlock Servicenow Essentials in Minutes\"\n9. \"Video Tutorials to Master Servicenow\"\n10. \"Certify Your Knowledge of Servicenow\"\n11. \"Data Filtration Video: Unlock Servicenow Pro\"\n12. \"Async Validation & On Submit: Unveiled\"\n13. \"Merge & Export Across Instances: Easily\"\n14. \"Microsoft Teams: Unlock the Presentation Mode\"\n15. \"JSTOP Pro: Discover IT Events\"\n16. \"Activating Creative Intelligence: Now!\"\n17. \"Glidefast Plus: On-Demand Training Platform\"\n18. \"Master Servicenow in Minutes: Essentials\"\n19. \"Certify Your Knowledge of Servicenow Today\"\n20. \"Discover the Power of Servicenow Pro\""},
{"cuid":"cld2q5ehh003xpq24v3zyue75","createdAt":"2023-01-19 12:41:10.806","updatedAt":"2023-01-19 12:41:18.779","userCuid":"cld9unimw001yucgucbtj659g","prompt":"Write me 20 different titles for a Youtube video under 50 characters about the following news. Make the words dramatic and base it on the following transcript and title.\nTranscript: welcome to the news for uh the week of september 6. let's get into it\n\nfirst thing i want to call out is mark scott and alan andreas somehow coincidentally both released some short videos on what request management is and i found them both amazing and entertaining and entertaining i wish i could get work to just pay for sushi to talk about topics that'd be cool um so good job mark and i i like how you broke that down alan if you guys are curious about what this is if you don't already if you don't already know i'll have links below eventually\n\npage shared on uh slack the other day that in studio if you hold command shift f while in studio it'll immediately bring up the code search and you don't have to pick a scope which is fantastic i know it was one of the first things i was looking for when i found the global code search and service now so thanks for sharing i didn't know about that either\n\ni've been looking forward to seeing the pictures and the other things that came out of the glide fasts glide fest event um it's it looks like a mini a knowledge or something like way more fun because it's outdoors and not nearly as professional or just more entertaining i appreciate i appreciate you guys all sharing the fun you guys had out there at big sky\n\nand then i wanted to call out the events coming up this month there's a whole bunch of them we got september 8th there's something with chuck tomasi for a walk through tokyo which is an online vent but also may have some in-person thing in melbourne australia we got a meet up in a couple meetups in india in kokata chennai and mumbai at different times this month and then there's one more in madrid spain so if you're looking to get together it looks like in-person events are back on schedule and that's fantastic\n\nthat's all i have for the week have a good\n1.","action":"ask","response":" \"Mark & Alan: The Request Management Duo\" \n2. \"Command+Shift+F: The Studio Shortcut\" \n3. \"Glide Fest: Fun in the Sun\" \n4. \"September Events: Tokyo, India, & Madrid\" \n5. \"Mark & Alan's Request Management Masterclass\" \n6. \"Studio Shortcut: Command+Shift+F\" \n7. \"Global Adventures: Glide Fest\" \n8. \"September Extravaganza: Tokyo, India, Madrid\" \n9. \"Request Management: Mark & Alan's Tips\" \n10. \"Studio Search: Command+Shift+F\" \n11. \"Glide Fest: An Outdoor Adventure\" \n12. \"September Travel: Tokyo, India, Madrid\" \n13. \"Mark & Alan's Request Management Explained\"\n14. \"The Studio Shortcut: Command+Shift+F\"\n15. \"Outdoor Fun: Glide Fest\"\n16. \"Mark & Alan: The Request Management Pros\"\n17. \"September Events: Exploring the Globe\"\n18. \"Command+Shift+F: The Studio Hack\"\n19. \"Glide Fest: Adventure Awaits\"\n20. \"Mark & Alan: Request Management Pros\""},
{"cuid":"cld33x80i005ppq24evjaiff9","createdAt":"2023-01-19 19:06:43.795","updatedAt":"2023-01-19 19:06:45.717","userCuid":"cld9unimx004cucgudurz9li3","prompt":"Update this code based following this prompt, \"\": (function executeRule(current, previous /*null when async*/) {\n\n\t// Add your code here\n\n})(current, previous); ```","action":"edit","response":"\n\n(function executeRule(current, previous /*null when async*/) {\n\n\t// Add your code here\n\n})(current, previous);"},
{"cuid":"cld2q71ir003zpq24uon9yc2s","createdAt":"2023-01-19 12:42:27.316","updatedAt":"2023-01-19 12:42:40.406","userCuid":"cld9unimw001yucgucbtj659g","prompt":"Write me 20 different titles for a Youtube video under 50 characters about the following news. Make the words dramatic and base it on the following transcript and title.\nTranscript: welcome to the service on news for the week of august 29th let's uh let's see what i picked out\n\nso last week i came across this post by scott trumbull him and i used to work together at fruition partners and so i always like to highlight folks that i i know and recognize and syntax macros are always something that i uh i forget about but as he puts it in his words with a couple keystrokes you can auto automatically build common code or header blocks just type in the keyword followed out uh with a tab you can try this out with uh var gr and scott's writes if you want to like have some common code practices for how you write certain things like i don't know glide ajax or maybe you don't folks use glad records and you want them to use a template to use glide queries this would be a great way to like start to try to help folks make better or make code you all agree on thanks scott\n\nrecently i've been working with uh instant scans more than i've been before i'd like to set some up to follow like to enforce snake casing and that kind of stuff but the easiest way to do that would be with regex but that's not the way you should do these things you should do with an abstract syntax tree and then comparing the values of those named elements\n\nthis fellow does really good job on writing up how to use the app set abstract syntax tree to make these checks happen thanks bluepender [Music]\n\nashley snyder is writing like alexander hamilton i appreciate all the content actually even though i haven't had time to make my notes from it yet i'll have links to those below with everything else i've discussed so far\n\nwhen i started working with discovery i was told to follow doug scholes i have and it's been great he doesn't put a lot of stuff out there often but when he does it's worth the read every time he just wrote a post about converting computers to personal computers if that sounds like you could use that i'd recommend reading it or look at anything else he's posted [Music]\n\nso certified system administrator fundamentals has been extended the the free fundamentals that is from when it was supposed to end which was i think september 1st or august 31st to now end on october 30th so for all of you procrastinators you have another month or two for everybody else i guess good job getting done early i'll have a link to the learning below [Music]\n\ntina singh shared that there was some work around the known air portal i used to uh follow this with a bot that i wrote whenever something got added to it but the format of a change and i couldn't do it programmatically but i checked out the new known air portal and it looks really nice i wish i could subscribe to it in a way that was meaningful but it looks great and i wanted to share that if you didn't know about this this is a whole thing it's probably something really good to check out before you move to a certain version\n\nservicenow has been pushing this build with aes program and i found that mia's too long didn't read very refreshing i also wish that there was a version of servicenow for hobby developers or small businesses they did used to have an offering like that but it only lasted about a year there were loads of problems with it and that restrict restricted the amount of scripting that could be done so i struggled to advocate for something like build with aes when it's hard to articulate what the cost value is for having application engine studio\n\nthat being said i really like the idea that mia nia had made with tracking submissions to publications for writers so thanks for sharing that nia\n\nlast week i went to an itam meetup and i was talking about the changes to the personal developer instances regarding the emails and how they no longer allow sending or receiving them with uh blake m from minnesota here and he told me about a change that happened a while ago back in october 2021 there was a post on the instance help saying that uh the developer program is no longer monitoring this community for for issues to help folks out and this is really concerning because they in that pose they say they use the feedback button on the developer site but that also wasn't visible at least not anymore um so i don't know where folks go if they have problem with their problems with their personal developer instance i know that there is a now learning thing that has a guide on how to troubleshoot your instance for the personal developer instances but i would think that there would be some more resources behind this\n\ni mean maybe this is just one way to keep putting back on the resources required to maintain the personal developer instances but it's not clear\n\nhow this program will continue to be without some sort of support regardless if you have any thoughts on it please feel free to comment below\n\num the last thing i posted an idea on the idea portal and generally i don't put a lot of stock into like this kind of becoming a thing but i figured i'd share it here working more with flows and subflows i i find i'm finding it more important to be able to see all the things that changed and right now the only way to do that is to click into each element in the flow it's not very efficient and it's kind of painful just like understand what's changed especially when there's a whole bunch of extra records put in the update sets\n\nso i i put an idea that have them make it so you can simply compare one flow to a previous flows version like you could a script include or a business rule now you can do that but it's complicated with the complex objects that get pushed into the update set if this seems like something that you'd find useful please go and upload the idea and i would suggest even talking to anybody you know who works at servicenow about it to tell them to upload it to or push it along that being said that's all i have have a great week and i'll see you guys next week\n1.","action":"ask","response":" \"Transforming Code with Macros\"\n2. \"Unlocking the AST\"\n3. \"The Art of Alexander Hamilton\"\n4. \"Earning a CSM Certification\"\n5. \"Exploring the Known Air Portal\"\n6. \"Following Doug Scholes\"\n7. \"Building with AES\"\n8. \"Tracking Submissions with Nia\"\n9. \"The ITAM Meetup\"\n10. \"A New World of Dev Instances\"\n11. \"Troubleshooting Personal Dev Instances\"\n12. \"A Look at the Developer Program\"\n13. \"The Future of Personal Developer Instances\"\n14. \"The Idea Portal: A New Hope\"\n15. \"Flows & Subflows: Checking for Changes\"\n16. \"Comparing Scripts & Business Rules\"\n17. \"Getting the Most from Flows\"\n18. \"Unlocking the Power of the AST\"\n19. \"Making Code Agreeable with Macros\"\n20. \"Discovering Doug Scholes' Wisdom\""},
{"cuid":"cld2q8xx80043pq24z0xf4tqa","createdAt":"2023-01-19 12:43:55.965","updatedAt":"2023-01-19 12:44:03.83","userCuid":"cld9unimw001yucgucbtj659g","prompt":"Write me 20 different titles for a Youtube video under 50 characters about the following news. Make the words dramatic and base it on the following transcript and title.\nTranscript: welcome to service Town news for the week of August 15th\n\nfirst up I want to talk about data filtration I know it's a feature in Tokyo I've been excited to talk about and I can't wait to see how folks start to use it I'm so glad that drove and ashitosh uh spoke about this in a YouTube video that I have linked below where they go through it and I think it really adds a new tool to our ability to control who can see what records it works differently than access controls and drove and as you just go over it some but I just wanna at a high level kind of say my understanding of it so imagine you have a group called the HR Group and tickets assigned to the HR Group need not be visible to anybody but people in that group the way that I think that data filtration Works whether I saw the SQL debugging and the other session debugging was if you're logged in and you don't meet the subject condition which is like the logged in person's session or IP address recruit memberships or role memberships then your SQL query is modified at that level to restrict those records from your list\n\nso if you have a bunch of data filtration records your query will seem really long but because it's omitting them before the results are returned it should be really quick the result that is should be faster\n\nif you want to hear more about it uh check out their video below and there's another talk on tuesday on the Creator toolbox from the servicenow developer group I think\n\nnext up Kieran Anson wrote this awesome post about templates and how to measure their usage which spawned from a conversation on slack if you're innocentdevs.com and request an invite but ultimately if you're not familiar with templates it's you know you go to a record you can click on the the Ellipsis or the three dots to show the templates toolbar and then you can apply a template to a record or you can create one for your personal use or you can create one to share with your group or the administrators of your tool can create one and share it or where they need to share it and you can have it like pre-film like this issue is missing this critical information to help us help you or this issue has been resolved if you have any questions feel free to reach back out to me in your own way it's a great feature but you can schedule templates so you can give some teams some level of automation outside of Flow Design or workflow for those that don't want to get into those things but also one thing he touched on at the very end of his post was whether or not doing this was worth it configuration versus customization and how that's the wrong question but it should rather be is this work worth the time and worth the maintenance going forward\n\nuh go ahead and give kieran's post uh this was helpful if you found this um if you found this post useful\n\nTracy O'Brien has some automation at servicenow to post in every group of the service and user groups and they're starting a new thing called The Snug meetups it looks like it runs a lot like the developer Meetup program I used to run the Minneapolis developer Meetup program and it was great um but it was work you had to find a venue and figure out topics and pay for it on your own and then ask for reimbursement and this program seems very similar to that one I'm actually not sure what the differences are so how would you think it's different in general like I'd love to hear about in the comments of like if you would attend this it looks like they have some limitations on like who can attend and who can attend which I always find kind of weird and gray and hardwood Force but I'd love to hear it uh you folks have to say about these events and if you're interested I guess Reach Out Below to Tracy\n\nyesterday I went through the the stuff in my list of things to check out before Monday and the lady coding happy hour was on Friday I guess with mg opw uh ebony page and Sharon they did a great job walking through the app engine studio and how some of these New Tokyo features are in app engine Studio so I'm really grateful to see this stuff if you want to hear about some of their origin stories and some other fun banter that they had with uh the interns I'd highly recommend watching that video\n\nfinishing it out this week um Robert fedoric has been making a bunch of videos on Tokyo he talks about the the language translations he talks about the zipping and unzipping attachments in the admin Center specifically if any of those um if any of those are things that interest you go check out the links below he also posted a video nothing to do with Tokyo about flow designer so if you want more about that too go check it out if there's something I didn't talk about but I should have leave a comment below about it I I'll check it out or maybe someone else will see it I'd I'd recommend you and you to engage with the audience here have a great day and I'll see you guys next week\n1.","action":"ask","response":" \"Unlock Tokyo: Data Filtration\" \n2. \"The Power of Templates - Measure Usage\" \n3. \"The Snug Meetups: Who Can Attend?\" \n4. \"Ladies Code Happy Hour - App Engine Studio\" \n5. \"Tokyo Translations: Robert Fedoric's Tips\" \n6. \"Zipping & Unzipping Attachments: Admin Center\"\n7. \"Demystifying Data Filtration\" \n8. \"Win With Templates - Measure Usage\" \n9. \"Who's Invited to Snug Meetups?\" \n10. \"Women Coding: App Engine Studio\"\n11. \"A Guide To Tokyo Translations\" \n12. \"Unzipping Attachments: Admin Center\"\n13. \"Taming Data Filtration\"\n14. \"Maximise Templates Usage\" \n15. \"Who Gets Snug Meetups Invites?\" \n16. \"Ladies' App Engine Studio Tutorial\" \n17. \"Tokyo Translations: Robert Fedoric\" \n18. \"Unzip Files in Admin Center\" \n19. \"Data Filtration: Expert Guide\" \n20. \"Maximizing Template Usage: Tips\""},
{"cuid":"cld2qai4f0046pq2429bi42tt","createdAt":"2023-01-19 12:45:08.799","updatedAt":"2023-01-19 12:45:24.191","userCuid":"cld9unimw001yucgucbtj659g","prompt":"Write me 20 different titles for a Youtube video under 50 characters about the following news. Make the words dramatic and base it on the following transcript and title.\nTranscript: i'm gonna make this a quick one you guys so this week in news i'm recording on friday night it's been a busy week i just got back from atlanta and i'm so glad i did\n\nty roach made this compelling article about how one of his customers is able to was able to save a bunch of capital using his product to let them take care of other bills related to the service now if you would like to realize more value out of your service now set up i'd highly check it out this is not a paid bit by tai roach or by tiger consulting i just think it's a fantastic story and stories like this should be elevated and shared and praised because\n\nservicenow is expensive there's a lot of value to it but if you're going to use it you should get the most value for that dollar\n\nthanks tai for sharing\n\neveryone is talking about tokyo the cask did a great pre-tokyo release overview with the dhruv and ashitosh and they covered a lot of topics about the features that they're looking forward to and then we had two different videos the tech now with chuck tomasi and jeremy and then we had the let's code happy hour with mg pow and earl and andrew barnes and a whole bunch of other people uh i want to call out earl decay as a way of going through the new uh javascript features on the server side was fantastic great job with the lightning round of how different features work that are javascripty for folks that may not have seen that before those are some complicated topics and i'm glad you went through them i'm a little sad that those features don't exist for global yet and i really hope that that idea on the idea portal doesn't get closed and if it does it should be reopened for global\n\nbut it's progress i'm really happy to see it's come along as far as it has\n\nchristopher c wrote this post on linkedin about moving code with update sets via a task board i thought it was really compelling and an interesting way to move stuff\n\nhe doesn't share exactly the code how he does it but he talks through the process of how it works so someone could recreate the methods he has there if you have questions i would highly recommend going to the article below and adding a comment or reaching out to chris directly\n\nlast but not least alan andreas made a course on now learning cult project roles and responsibilities it's 30 minutes i haven't taken it but if it's like any of the rest of his content he's been making it's gonna be fantastic it's more for like i said business analysts but the fact that he was able to make content on the now learning platform is interesting i don't know how one goes about that but if alan if you're watching you know can you put a comment below to direct people in that general direction\n\nand that's all that i have for the news this week i i do want to make a shout out to um fedork for saying thanks to john doll for helping him out with stuff on the community and\n\nyeah that's where we're going to end it short and sweet\n1.","action":"ask","response":" \"Atlanta to Tokyo: 10 Value-Adding Tips\"\n2. \"Realize More Value: Tai Roach's Story\"\n3. \"Cask's Pre-Tokyo Release: All You Need to Know\"\n4. \"Chuck & Jeremy's Tech Now: What You Need to Know\"\n5. \"Lightning Round: JavaScript Features for Global\"\n6. \"Christopher C's Code-Moving Task Board\"\n7. \"Alan Andreas: Project Roles & Responsibility Course\"\n8. \"Thanks John Doll: Fedork's Story\"\n9. \"Atlanta to Tokyo: Value-Adding Tips\"\n10. \"Realize Value: Tai Roach’s Story Explained\"\n11. \"Cask's Pre-Tokyo Release: DHruv & Ashitosh\"\n12. \"Tech Now w/ Chuck & Jeremy: What You Need to Know\"\n13. \"Lightning Round: JavaScript Features for Global Explained\"\n14. \"Christopher C's Code-Moving Task Board Explored\"\n15. \"Alan Andreas: Project Roles & Responsibilities Course\"\n16. \"Thanks John Doll: Fedork's Story Unveiled\"\n17. \"Atlanta to Tokyo: 10 Tips to Unlock Value\"\n18. \"Realizing Value: Tai Roach's Insightful Story\"\n19. \"Cask's Pre-Tokyo Release: DHruv & Ashitosh's Overview\"\n20. \"Tech Now w/ Chuck & Jeremy: JavaScript Features for Global\""},
{"cuid":"cld2qcq8q0049pq24zyf7oiw3","createdAt":"2023-01-19 12:46:52.635","updatedAt":"2023-01-19 12:47:07.156","userCuid":"cld9unimw001yucgucbtj659g","prompt":"Write me 20 different titles for a Youtube video under 50 characters about the following news. Make the words dramatic and base it on the following transcript and title.\nTranscript: welcome back thanks for joining me for the news on servicenow for the week august 1st 2022. let's get into it\n\nfirst i gotta say working with the folks at the g lady has been fantastic luke johnson and verdict are great individuals they're all about the business out of g lady health and that company is doing great things for their customers krista and elizabeth are fantastic product owners who really know what their customers want if anybody here gets a chance to work with these individuals i consider you lucky\n\ni'm really glad i had the chance to work with the four of you and the rest of the team for that matter troy jason peter and everybody else you guys are fantastic\n\ntokyo is coming out if you didn't know last week i talked about it this week i'm going to talk about it august 4th you should be able to turn it on in your personal developer instance with that you should be able to activate most the things that are core platform like uh list filtration and there's some phone down stuff not sure that's gonna work with the pd with the personal developer instances but it'll be cool to see um what will be available there if you find anything you should share below in the comments because i'm super curious what people get to before they all talk about it chuck wrote about this in the developer blog which is where i got the date from august 5th chuck earl and lauren are going to be on a live coding happy hour where they're talking about the server-side scripting available in tokyo so it'll have the new um ecmascript stuff available there i think that stuff is fantastic and i wish it was available for global\n\naugust 9th there'll be a walkthrough by adam stout and shamil aldossary you'll have to register for it i'll have a link below for that but if you want all the tokyo stuff like these are the things that i'm looking forward to checking out\n\nish and shore ended up in my feed twice once for latin repratton and another time for break point in the same week good job on coordinating that chuck and dhruva and ashitash uh it's a lot of ish on shore um he presented knowledge he's a developer mvp mvp i think he's worth listening to and seeing what he has to say if you haven't listened to them i'll have links below\n\nalan andreas released another video on his youtube with some amazing a forest background where he talks about client scripts when to use some things to avoid and what to do with them i agree with every point he makes and he even pointed out some stuff about catalog lookup definitions that i haven't used as often as i should have so good job alan keep up the good content\n\nnow with troy relaunches he hasn't posted in a while um i haven't asked him why but it's now apparent he was leaving the dare to join servicenow proper i watched his most recent video and at seven minutes 30 seconds he talks about how he's going to be working with the impact product to help customers realize value for that offering if you have any questions for troy i would definitely recommend commenting on his video or if you want me to reach out to him and talk to him about it i have no problem doing that too so leave a comment below one any questions you have about the impact product and how that could or couldn't help your business\n\nbuild with aes the challenge for the shirt i tell my wife every time that a shirt challenge comes up that we're all idiots trying to get the shirt so if you'd like to spend some time working for a shirt you can make some content to talk about application engine studio p paul morris phil swann and avinash d have all created stuff already the way you do it is you make a one to two minute video or a 300 plus word post about application engine studio and then you share that content socially somewhere you copy that link and bring it to a community blog which i'll have linked below and you put that link there i'm guessing somebody ad servicenow is watching that post to follow up with folks who have uh shared these things but that's how you get it\n\ni did a search on youtube for videos on ground service now this last week and there's some people i had recognized and some people i don't on the top left i'm not sure who this is but i'll have links to his videos below but he does a great job walking through understanding the loops in flow designer detecting languages and emails justin meadows killing it with his videos that he's sharing posting them like a machine i still understand how we post as much as he does so we've got tech xavier who sounds amazing also is reminding us something of something really important which is you can still currently get the free servicenow certified system administrator certification by taking the foundations course which is free until august 31st so if you don't have that you should totally take advantage of it and then chuck tomasi posted a list filter shortcuts video talking about all the different ways you can filter a list and even i learned something in that video with percent with percent symbols\n\nnow learning put up a bunch of videos on youtube that also exists in this welcome the service now learning set which covers the basics this can be really useful for sending to somebody who doesn't know what they can do in servicenow but they should i haven't gone through all of it but it looks pretty comprehensive and something anybody should be able to pick up\n\ni tried to follow all the new folks but there are so many of you\n\nwe've got the skill bridge folks we got the next gen folks we got at least one my tech best friend pictured here i know a lot of you met with brian wyckoff jim t and allison shirley from crossviews and somewhere else about working on servicenow and i just find it so inspiring the stories you guys are sharing on linkedin i just want to say i'm excited to have you and you guys posting this stuff is inspiring to me thank you so much\n\nbut not least i found this servicenow early careers page where they're posting events for people who are early in their career to expand their career\n\nthere are so many great events coming up that this group this thing is posting about i highly recommend checking it out let me just read a few of the named events that are coming up that are in person and virtual one of them is called non-tech opportunities another is called career vision boarding portfolio glow up overcoming imposter syndrome acing your interview build your personal brand and give your linkedin a makeover and how to stand out at career fairs and conferences i would have killed for this kind of stuff before i got into tech i'm in tech now but um william knew how to share a post about this i'll have a link below that's all i got thanks for watching uh if you enjoyed this please like and subscribe and if there's anything i missed please feel free to mention me or say it on linkedin or twitter or wherever if you'd like to contribute in some way um i don't know how that'll work but i'm all ears for it have a great day\n1.","action":"ask","response":" \"Unlock Tokyo: ServiceNow News Aug 1st 2022\"\n2. \"The G Lady: ServiceNow Highlights Aug 1st 2022\"\n3. \"Servicenow: Tokyo Launch Date Revealed Aug 4th\"\n4. \"Servicenow Tokyo: Aug 4th Unveiled\"\n5. \"Servicenow: Aug 5th Live Coding Happy Hour\"\n6. \"Servicenow Tokyo: Aug 9th Walkthrough\"\n7. \"Ish & Shore: Servicenow News Aug 1st 2022\"\n8. \"Servicenow Client Scripts: Alan Andreas\"\n9. \"Servicenow: Troy's Impact Product Aug 1st\"\n10. \"Servicenow Shirt Challenge: Build With AES\"\n11. \"Servicenow: Justin Meadows YouTube Videos\"\n12. \"Servicenow Certifications: Still Free Until Aug 31st\"\n13. \"Servicenow: Chuck Tomasi's List Filter Shortcuts\"\n14. \"Servicenow Learning Set: YouTube Videos\"\n15. \"Servicenow Early Careers: Events Update Aug 1st\"\n16. \"Servicenow: My Tech Best Friends Aug 1st\"\n17. \"Servicenow: Crossviews & Beyond Aug 1st\"\n18. \"Servicenow: Brian Wyckoff & Jim T Aug 1st\"\n19. \"Servicenow: Career Vision Boarding Aug 1st\"\n20. \"Servicenow: Stand Out at Conferences Aug 1st\""},
{"cuid":"cld2qf48y004cpq2442fykz8i","createdAt":"2023-01-19 12:48:44.099","updatedAt":"2023-01-19 12:49:00.767","userCuid":"cld9unimw001yucgucbtj659g","prompt":"Write me 20 different titles for a Youtube video under 50 characters about the following news. Make the words dramatic and base it on the following transcript and title.\nTranscript: hey thanks coming back welcome to servicenow news with jace i'm going to go over what i thought was interesting this last week first up we have brad tilton presenting add a button to the list component on the new next experience he was inspired by a video that arnold coy had created so i recommend checking that out\n\nuh last week the let's code happy hour started up again with drew pronoff earl and chuck they're building some elgo stock trading app i don't know if that's a web 3 thing or something else i haven't watched it but i've been meaning to get to it um generally it's good content go check it out\n\ntokyo is coming out and the folks on the developer relation team made a post about all these features that they're excited to talk about and show i'm excited about some of them too but i think they missed a few and so i added this slide of data the demo data i can't wait to see what's in there the builder updates are going to be fantastic and the anonymized stuff for subproduction could be a really big thing for keeping pii data out of sub productions can't wait to see more and i hope to hear about it before it comes out\n\nspeaking of tokyo there's some events i want to highlight on august 4th we got early access day on august 5th the let's code happy hour we'll be going over the ecmascript updates which only works in scopes but you know progress is progress so that's fantastic ben forest from one of the training teams at servicenow has been has been having office hours on linkedin at 6 pm central so if you're looking for something to do tuesday evenings pop on there for a couple hours\n\njeff pierce posted a comic and i always think they're great to highlight uh this one's called heatwave and talks about some sort of anyways just go look at it\n\nservicenow has made a new offering called impact what is it it sounds like it's a tiered support um thing that you can purchase on top of your current licensing agreement uh what do you get it sounds like you get some sort of team of experts to help ensure you're getting the most value for your product is it worth it i don't know you tell me if you are a customer of it i'd love to hear about your results sounds like it's been in beta for a while and there's 300 customers currently\n\npranav uh i think this may be the same pronoun that was on the last let's code happy hour modified this code penny found making this really cool login screen which\n\ndid something kind of like the login for the servicenow community site which is kind of cool um there's a video about how we did it and i found very insightful\n\nryan glitzy of glad fast made this video in under five minutes going over how app engine studio works and anything cut down to less than five minutes i think is a nice bite size bit of content i watched the double speed because i don't got time for five minutes maybe you guys do but check it out\n\nand then uh louis luca bellis posted a video about how to set up a delegate and service now if you need to convey this to somebody this is a great video to share because it just walks through how to create a delegate how to delete a delegate and that's fantastic to help people help themselves\n\nlast but not least um tim woodruff shared this commit strip comic from like a year like two years ago about the no code dream and it talks about how there's some limitations on the no code and low code solutions there's a great thread on linkedin where there's some discussion back and forth if you haven't chimed in there i would highly encourage you to because that's where the conversation's happening so if you'd like to see more of these subscribe down below and i'll see you guys next week\n1.","action":"ask","response":" \"Heatwave: Unveiling Jeff Pierce's Comic\"\n2. \"Tokyo: Uncovering the Mystery\"\n3. \"Impact: Unlocking the Power of Servicenow\"\n4. \"Next Experience: Adding a Button to the List\"\n5. \"ECMAScript: Unlocking the Scope of Progress\"\n6. \"Let's Code: Trading App Adventures\"\n7. \"Demo Data: Unpacking Tokyo\"\n8. \"Builder Updates: What's New in Tokyo\"\n9. \"Anonymization: Protecting PII in Sub-Productions\"\n10. \"Early Access Day: Unveiling Tokyo\"\n11. \"Happy Hour: Exploring ECMAScript Updates\"\n12. \"Office Hours: Learning with Ben Forest\"\n13. \"Login Screen: Pranav's Code Modifications\"\n14. \"App Engine Studio: Ryan Glitzy's 5-Minute Video\"\n15. \"Delegate: Louis Luca Bellis' Tutorial\"\n16. \"No Code Dream: Tim Woodruff's Comic\"\n17. \"Brad Tilton: Inspired by Arnold Coy's Video\"\n18. \"Let's Code Happy Hour: Drew, Earl & Chuck\"\n19. \"Servicenow News: Jace's Weekly Roundup\"\n20. \"Data: Unpacking the Tokyo Demo\""},
{"cuid":"cld2qh4nd004fpq24qvsq8ati","createdAt":"2023-01-19 12:50:17.929","updatedAt":"2023-01-19 12:50:25.367","userCuid":"cld9unimw001yucgucbtj659g","prompt":"Write me 20 different titles for a Youtube video under 50 characters about the following news. Make the words dramatic and base it on the following transcript and title.\nTranscript: welcome to the news on july 18th let's get into it\n\ntokyo release testing preview is out you should go check it out every six months this happens and tokyo has a lot of really interesting features i went through all of the notes that are there right now and i am there's a couple things that stand out to me which i will share on another video\n\nbut that doesn't stop other people people from talking about them es12 scripts are available in scopes only shared by anders and there was a lot of comments here frustration is the feeling that comes in my mind it's a step in the right direction i wish that it would be available for global this is adding all those like new es6 features and other features to the server side of the servicenow platform but a step in the right direction is still a step in the right direction\n\nlawrence tyndall from gladfast reminds us if you need to view all the values from a record show xml that is a way to do that and as much as i think everybody should know this i bet there's somebody that doesn't so if you're not aware of it right click on a record setter and show xml to see all those details\n\nnew cohort slash boot camp time there are all these new people that are being sharing their their journey you got well it it you have families on the on linkedin coming from the skill bridge you got emily and jeremy and finger and andre and nathan and michaela and john and christopher and jordan and all those folks and then on twitter you have all these my tech best friend folks this lovely liana zana baby and gregory badgett and glowy days so many of them if you want to be inspired and follow them feel free to reach out there are so many more all of links to how i look for them when i look to those platforms in the link below\n\nnathan firth had niche and he had to make something so he built snjobs.com it aggregates a whole bunch of jobs from different places into one place and i think it looks really nice and it's just the service now kinds of jobs so if you're looking for a job um speaking of cohorts that just finished if you haven't found one feel free to use that or or reach out to folks that that are social and they'll try to help i'm sure\n\nbreakpoint had a new episode about what you need to know about the next experience it's about using ui macros pages about their roadmap and where things are going and then they talk specifically about when to use service portal instead of ui builder because there's some cases that ui builder just doesn't handle well yet so i want to highlight that there brad had said if you need a catalog enterprise-wide portal public portal or responsive portal you probably should still use the service portal and i really appreciate that call up brad because that tells me as a customer and other people when we should be building certain things and how long those things will be good for\n\nsal costa a long time ago wrote a book about jelly and as much as folks hate on jelly it's not going away if you want a resource that's well worth it i have a link below for it he recently reduced the price to pay what you want so that includes zero you can get it for free if you'd like or you could toss them a few bucks but um it saved me in a in a couple situations so i i think it's well worth it thank you sal for creating that book\n\ncj and the duke go into why they do what they do\n\nand i always enjoy their episodes it's great but i learned some stuff like specifically how they need to get back and they want to meet with the new folks and other kinds of stuff like that so give it a listen\n\ni missed this video the developer game that i mentioned last week but thankfully they posted on youtube so i can watch it on replay so i'm sharing that it's out there and you can too\n\nandreas posted one more video on his channel and it is very timely and i think it very relative to all those new folks about what you can expect as a certified system administrator it's a great video good job alan\n\njustin meadows he's posting so much stuff i can't highlight any specific piece he has 18 new videos since last week do you sleep man come on he also built a website to post these things which is justin.house so if you're looking to have more justin in your life i guess you can just go to those places and with that that's the news if i missed something or if you want to bring up something please add a comment below and i'll see you next week\n1.","action":"ask","response":" Tokyo Testing Preview: What You Should Know\n2. ES12 Scripts: A Step in the Right Direction\n3. Show XML: Revealing Record Values\n4. Boot Camp Booty: New Cohort Inspiration\n5. Snjobs.com: A ServiceNow Job Aggregator\n6. Next Experience: UI Macros & Service Portal\n7. Jelly Book: Worth the Read\n8. CJ & The Duke: What They Do & Why\n9. The Developer Game: Play & Replay\n10. Alan's Advice: Certified Sys Admin Expectations\n11. Justin Meadows Unplugged: 18 Videos & Counting\n12. Tokyo Testing: The Latest & Greatest\n13. ES12: Should You Use It?\n14. Show XML: Uncover the Data\n15. Boot Campers: Follow & Be Inspired\n16. Snjobs.com: Find Your ServiceNow Job\n17. Next Experience: UI Macros & Beyond\n18. Jelly Book: Pay What You Want\n19. CJ & The Duke: What's Their Story?\n20. Justin Meadows Madness: 18 Videos & Website"},
{"cuid":"cld2qimye004ipq24ul7r8zn8","createdAt":"2023-01-19 12:51:28.311","updatedAt":"2023-01-19 12:51:36.466","userCuid":"cld9unimw001yucgucbtj659g","prompt":"Write me 20 different titles for a Youtube video under 50 characters about the following news. Make the words dramatic and base it on the following transcript and title.\nTranscript: welcome to the news first up we got servicenow rising stars cast your vote sergey shared this on community i think this is a great program there's three programs like this now you have the servicenow developer mvp you have the servicenow community mvp you know the service now rising stars i've been members of two of these and you get some pretty awesome perks like a coat or backpack there's some perks i can't talk about because i agreed i wouldn't talk about them but trust me they're worth getting so you should nominate your friends or the people you enjoy on the community who are rising stars cast that vote\n\ndavid durling of finite partners shared this before queer rules post they wrote about understanding why they're important like why you get those messages of like number of rows restricted explain how do before query rules help and then expressing caution because like anything you can take it too far highly recommend reading it\n\nthen i learned about this person named amanda johnson who was on the customer connection podcast talking about now learning and how important the training and certificates are outer structure and design training and then when is training effective i sometimes struggle with uh with finding the value in certificates but when they're free they're awesome and when they're not free it still opens the door for a lot of opportunity so they're probably still worth it even if i think projects are a better or a better use of your time it doesn't hurt to have both and you can do both without actually getting hired anywhere yet\n\nspeaking of free certificates and training there is the free search certified system administrator fundamentals until 8 31 and jan sperling here posted on the community that ben forrest was going to be doing office hours on tuesdays 4-6 p.m until that ends so i have a link in the description or i have a link on the post in the description below if you are curious i would definitely recommend checking that out then today i saw that jordan stein of maven next posted something about more certified assistant administrator questions and answers and it was written like a developer game i'm not sure exactly what this is but i'm curious and i hope you might be too if so maybe i'll see you there\n\njeff pierce came out with another timely print of his snowballs game of portals this reminds me of back in the day when jeff and i worked at fruition partners at the same time there was this thing called the cms garage where it had pretty much a portfolio of all the different content management systems that you could set up in servicenow which is now deprecated but it's a great segue into glidefast's glide hits it's a portal portfolio where they have a whole bunch of different examples of different portals they've set up for themselves or for others or just to to start with if you um are interested in setting up a portal this i recommend looking at because they're gonna have the layouts of how these things are and you can be like oh i like that or i don't like that if you have stakeholders and you guys are looking at are we implementing your portal this is a a must see and then uh ryan galipsi posted on twitter that he is looking for some feedback if he was gonna start some content of like what type of stuff you'd like them to cover so definitely reply to that tweet and then last but not least posh programmer aka lauren mcmanaman i hope they said that right joins the developer advocate team and servicenow after five years on sales and i just want to say i am glad to have you and i can't wait to see how you change the team up that's it have a great day\n1.","action":"ask","response":" \"Rising Star: Cast Your Vote!\"\n2. \"Before Query Rules: What You Need to Know\"\n3. \"Amanda Johnson on Now Learning\"\n4. \"Certificates: Are They Worth It?\"\n5. \"Free SysAdmin Fundamentals!\"\n6. \"Ben Forrest Office Hours!\"\n7. \"CMA Game: Ready to Play?\"\n8. \"Snowballs Game: Jeff Pierce's Portal\"\n9. \"GlideHits: Portal Portfolio\"\n10. \"Ryan Galipsi: What Content to Cover?\"\n11. \"Posh Programmer: Lauren Joins Dev Advocates\"\n12. \"Rising Stars: Get Amazing Perks!\"\n13. \"Before Query Rules: Understanding Why\"\n14. \"Amanda Johnson: Training & Certificates\"\n15. \"Certificates: Projects or Perks?\"\n16. \"Free SysAdmin Fundamentals: 8/31!\"\n17. \"Ben Forrest: Office Hours 4-6pm!\"\n18. \"CMA Game: Ready to Compete?\"\n19. \"Snowballs Game: Portal Perfection!\"\n20. \"GlideHits: Portal Previews!\""},
{"cuid":"cld2qleo9004lpq240v2dvdja","createdAt":"2023-01-19 12:53:37.546","updatedAt":"2023-01-19 12:53:46.965","userCuid":"cld9unimw001yucgucbtj659g","prompt":"Write me 20 different titles for a Youtube video under 50 characters about the following news. Make the words dramatic and base it on the following transcript and title.\nTranscript: Welcome to news with Jace for the week of April 25th (2022)\nUpcoming Events, yes please.\nFirst up we have Inside the Barrel with Dorian and Jon Merchant from Cask\nThey have that on Wednesday during the day.\nAround the same time, Now with Troy from Thirdera does his thing.\nThat's also on YouTube go check it out.\nLater in the week we have Lady Coding Happy Hour\nI'm not sure what guests will be on it this week, but I'm looking forward to seeing whose there.\nIn the evening we have the fourth installment of\nMark Scott's PHXDev show\nIt's been great, on LinkedIn lots of engagement.\nHope to see you there.\nMakes for a busy week, that's for sure.\nI recoded some teasers with Paul Morris and Ishaan Shoor\non the content their presenting at knowledge 22 virtual\nand in person at the Australian location.\nIf you weren't aware, Knowledge22 is right around the corner.\nAnd if you haven't been to a conference in a while, or anywhere in a while\nand you're going to be on your feet a bunch.\nYou may want to do somethings to make sure you take care of yourself.\nOn slack (sndevs.com) there was a great discussion to do just that.\nPack some COVID tests, you never know.\nMasks just in case.\nShoes, if you haven't broken in your shoes already\ndon't buy new one's now, cause it might be too late.\nbut if you need to\nyou can always take a hair dryer to a new one to make it mold better to your feet.\nAlso sleep is super important.\nIf you don't sleep in a city\nI've never slept in New York.\nI hear that ear plugs and a mask can do great.\nThanks everyone listed here for the comments on slack that inspired me to make this section\nProbably my favorite section, New Folks and content.\nI'm still following along with POD 3.\nThanks to the updates from Robert Waltz\nAnd DeAnn Boudreaux\nI really appreciate you guys tagging everybody and making these notes public.\nIt's fantastic to follow along with yous guys's progress.\nAdrian Ford also shared\nthe progress they made.\nand it's great to see all these different folks coming through the ranks.\nI can't wait to see what comes up next.\nLet's get some other content in this mix.\nBrad\nthanks so much for sharing all the content you've made over the years.\nI can't wait to see how your Next adventure works\nWorking on the Next part of ServiceNow\nServiceNow has been featuring some of these ServiceNow Heros\nSarah Toulson is the second one.\nI saw the video and thought it was great. I hope you all get a chance to look at it.\nI saw Julie shared the other day, as of April 19th 2022\nAll the NowLearning instructor led courses are now available on demand.\nSo take them at your own pace.\nThey might not be free, and you might not get everything you need from them.\nBut you can do them at your own pace which is a huge plus to anybody\nWho may be working another job, or doing things when you don't have to commit.\nSo that is fantastic.\nGreat job NowLearning team.\nSpeaking of career stuff\nRobert Fedoruk spoke on BreakPoint with Chuck Tomasi\nI haven't listened to this podcast yet but I've heard from multiple people that it is fantastic.\nand pairs great with last week's PHXDev's show on resumes.\nI finally found the link for how folks can apply to be a NextGen member of the ServiceNow ecosystem.\nYou goto apply.servicenow.com\nThere's a lot of great resources out there.\nBut I think this is a really great program.\nI can't wait to see who keeps coming through it.\nSee ya next time.\nI almost forgot.\nThanks Carleen Carter for making those amazing cutouts for the news section\nThanks Mr.Robot for this awesome background that I'm enjoying\nAnd Robert Fedoruk I appreciate the input on the mic.\n1.","action":"ask","response":" \"Inside the Barrel: Dorian & Jon Merchant\"\n2. \"Now with Troy: Thirdera on YouTube\"\n3. \"Lady Coding Happy Hour: Who's the Guest?\"\n4. \"Mark Scott's PHXDev Show: 4th Installment\"\n5. \"Knowledge22: Teasers with Paul & Ishaan\"\n6. \"Take Care of Yourself: COVID Tests, Mask, Shoes & Sleep\"\n7. \"New Folks & Content: POD 3 & Robert Waltz\"\n8. \"ServiceNow Heros: Sarah Toulson\"\n9. \"NowLearning Courses: On Demand & Affordable\"\n10. \"BreakPoint with Chuck Tomasi & Robert Fedoruk\"\n11. \"NextGen Members: Apply at apply.servicenow.com\"\n12. \"Barrels, Thirdera & PHXDev: Jace's Busy Week\"\n13. \"Happy Hour & Knowledge22: Jace's Roundup\"\n14. \"Caring for Yourself at Conferences: Jace's Advice\"\n15. \"New Folks & Content: Jace's Roundup\"\n16. \"ServiceNow Heros: Sarah Toulson's Feature\"\n17. \"NowLearning Courses: Jace's Take\"\n18. \"BreakPoint with Chuck Tomasi: Jace's Review\"\n19. \"NextGen Membership: Jace's Guide\"\n20. \"Carleen & Mr.Robot: Jace's Appreciation\""},
{"cuid":"cld2qnz69004opq24p4yao3cj","createdAt":"2023-01-19 12:55:37.425","updatedAt":"2023-01-19 12:55:52.571","userCuid":"cld9unimw001yucgucbtj659g","prompt":"Write me 20 different titles for a Youtube video under 50 characters about the following news. Make the words dramatic and base it on the following transcript and title.\nTranscript: welcome to news with jace this is for the week of may 23rd 2022.\n\nthis is my site news.js.pro and it has a link to everything i want in service now except linkedin stuff because linkedin has weird policies but i added a bunch of links to the knowledge videos that exist that are out there in public so if you want to check those out feel free all right who here likes comics me who here likes me i do of course i made it just on snowballs wanna check it out snowballs.rocks jeff i'm flattered that you made a picture of me covering a picture of me covering other stuff thanks\n\nall right we're in it upcoming events first up women now is hosting in-person event in las vegas between the hours of 8 a.m and 10 a.m pacific standard time if you identify as a woman and you want to check it out rsvp in the link below\n\nglidefast is having a happy hour on may 25th just like it says right here at 10 pm check it out\n\ncask has one too\n\nsteph s from the cio initiative i'm not sure you are steph but i'm sharing your stuff she says she has the the tau place for a happy hour if you'd like to go i guess reach out to her\n\njeff pierce will also be in vegas he's great if you want to see something look awesome reach out to jeff if you want a comic i guess also reach out to jeff because he's giving some away in vegas\n\nhaving a high authority that these companies invited a bunch of folks happy hours but they're not listed anywhere so if you have a wrap at one of these companies you want to go to happy hour in sydney australia i'd recommend reaching out and asking about it for the rest of us mark scott's still doing his weekly show on friday and you folks in vegas and sydney australia fearfully jump in and say that you're watching from the conference that'd be really cool too this week it's all about burnout\n\nhere's the content that stood out to me this week alberto here shares his knowledge experience from the hague in the netherlands i really enjoyed reading it thanks for sharing it alberto\n\nlast week mark scott held a show with five people on it and it was fantastic all about consulting i would recommend checking it out if you have an hour\n\ni've been trying to get a list together of all the different groups doing skills bridge boot camps internships i found this video on youtube by doing a search where herb thompson covers the skills bridge program from servicenow it's almost an hour long but it's great it's a great watch go check it out\n\nonly thing i don't like about this article is they describe servicenow as a workflow software that grouped mighty that's false according to mike slobodnik hey mike long time no see anyways the register covered bill mcdermott and c in servicenow if you want to read some actual article writing about servicenow i'll have a link below to mike's post which will link to the other stuff i made a poll to make a point it's who isn't hiring in the servicenow space\n\ni made a second poll on linkedin see who's training people instead of hiring people with experience or in addition to the experience and it looks like there's a lot of you i'm really interested in these programs if you have one and you want to share it with me i would love to hear about it please reach out to me at jspensen gmail.com\n\nthis week's news was kind of rushed so i didn't get a whole lot of new people's stuff coming up here um so i just called this people because i want to highlight one person\n\nthis is take two i called joseph jared the first time joseph here has been inspiring everybody to make content in my opinion inspiring folks to be confident and to try new things and i really love all the stuff you're making joseph keep it up\n\nthanks for checking out the news keep creating i'll see you guys next week\n1.","action":"ask","response":" \"Women Now: Vegas Event of 2022\"\n2. \"GlideFast Happening in Vegas\"\n3. \"Cask Invites You to Happy Hour\"\n4. \"Steph S: Tau Place Happy Hour\"\n5. \"Jeff Pierce in Vegas: Comics & More\"\n6. \"Happy Hours Secretly Invited\"\n7. \"Mark Scott Weekly Show: Burnout\"\n8. \"Alberto's Knowledge Experience\"\n9. \"Mark Scott's 5-Person Consulting Show\"\n10. \"Skills Bridge Boot Camps 101\"\n11. \"Servicenow: Workflow or Mighty?\"\n12. \"McDermott & C at Servicenow\"\n13. \"Hiring or Training Servicenow Pros?\"\n14. \"Joseph Jared: Inspiring Confidence\"\n15. \"Vegas & Sydney: Fearfully Jump In!\"\n16. \"The Hague: Knowledge from Netherland\"\n17. \"Servicenow: Mike Slobodnik's Post\"\n18. \"Polling Who Isn't Hiring for Servicenow\"\n19. \"Training People in Servicenow: Poll\"\n20. \"Joseph Jared: Inspiring Content Creation\""},
{"cuid":"cld2qq1gf004qpq249eg6yzdx","createdAt":"2023-01-19 12:57:13.695","updatedAt":"2023-01-19 12:57:20.124","userCuid":"cld9unimy0057ucgu29vof2et","prompt":"var querystring = \"sys_created_on>javascript:gs.dateGenerate('2016-12-01','23:59:59')\";\nvar gr = new GlideRecord('sysapproval_approver');\ngr.addEncodedQuery(querystring);\ngr.addQuery('state', 'requested');\nvar qc = gr.addQuery('sysapproval.sys_class_name','sc_req_item');\n//qc.addOrCondition('sysapproval.sys_class_name','change_request');\n//gr.addQuery('sysapproval.sys_class_name', 'u_business_application_approval');\nqc.addOrCondition('sysapproval.sys_class_name','sc_task');\nqc.addOrCondition('sysapproval.sys_class_name', 'u_business_application_approval');\ngr.query();\nwhile(gr.next())\n{\n\tgs.log('bapproval;' + gr.getRowCount());\n\tvar dc = new DurationCalculator();\n\tdc.setSchedule('090eecae0a0a0b260077e1dfa71da828', 'U.S');\n\tvar seconds = dc.calcScheduleDuration(gr.sys_created_on ,gs.nowDateTime());\n\tvar time = parseInt(seconds/(3600*9));\n\tif(time> 0)\n\t{\n\t\tif(time%3 == 0)\n\t\t{\n\t\t\tgs.log('bapproval');\n\t\t\tif(gr.sysapproval.sys_class_name != 'u_business_application_approval')\n\t\t\t\tgs.eventQueue('Approval.reminder', gr , \"\",\"\");\n\t\t\telse\n\t\t\t\tgs.eventQueue('reminder_1', gr , \"\",\"\");\n\t\t}\n\t}\n}\n\"\"\"\nExplain the above code step-by-step in simple english.","action":"explain","response":"\n\nThe code above is a script that runs a query on the sysapproval_approver table to find all records that have the state of 'requested' and the sysapproval.sys_class_name of 'sc_req_item', 'change_request', or 'u_business_application_approval'. For each record returned by the query, the code calculates the duration in seconds between the sys_created_on field and the current date/time. If the duration is a multiple of 3 hours, the code adds an event to the event queue for 'Approval.reminder' or 'reminder_1', depending on the value of the sysapproval.sys_class_name field."},
{"cuid":"cld2qqdcb004spq244h9ir9uv","createdAt":"2023-01-19 12:57:29.099","updatedAt":"2023-01-19 12:57:37.728","userCuid":"cld9unimw001yucgucbtj659g","prompt":"Write me 20 different titles for a Youtube video under 50 characters about the following news. Make the words dramatic and base it on the following transcript and title.\nTranscript: the videos jessalyn carlson has been sharing on linkedin are amazing they're short and sweet and adorable you should go look at them oh really pause this and click the link in the description below glad you guys came back fedor keeps putting out this content he's got this awesome thumbnail and it's all about many dimensions and how to make them and why you might use them\n\ni was looking for other stuff to share this week and i came across this sasha's code sanity app he's got a bunch of apps out there but this one specifically caught my eye because it has a ton of incense scans and i thought mark rosa probably will have opinions about it mark if you're watching can you put a comment below on what you think of it all right well when mark gets down there and he adds a comment you guys have to let me know\n\nservicenow is doing these pop-up experiences i think of them as a kind of county fairs where they're showing off new tech the thing is i never knew they even happened they finished their first set of 10 of them they're gonna start another one sometime in the future uh it just blows mind that i miss this if any of you guys have information about this i would love to hear about it if you went to one of them and you want to share the experience i would love to have you on it's not very often that servicenow releases something on github that can be used i saw that this azimuth was shared in a slack channel by one of the other mvps and this is a utility that's supposed to help\n\nvisualize or identify problems with data sets for artificial intelligence i don't know much about that stuff but maybe it's helpful for somebody here glide fastener team released a 10-minute tutorial all about scripted rest apis script addressed apis have got to be one of the most powerful things you can use in servicenow to help other tools integrate with you that's all to say it's probably worth checking out\n\nmark scott put together a resource for people doing interviews and for interviewees if you want to look into it more it's all about the questions that are probably going to be asked for the specific roles if you haven't seen it yet i'll have a link last week there was this performance analytics event where they were showing the value of performance analytics if you missed it it's recorded and i'll have that below\n\nwhat about upcoming events you might be wondering there are almost none all right there is one about integrating microsoft teams with servicenow and i'll have that below but other than that it's the standard folks who are making content outside of servicenow which is weird just not any other official demos or webinars or any of that kind of stuff that i could find and and maybe i didn't spend the time i needed to but mark scott uh troy pisola john merchant if you guys are having your events please comment below and say something because i have no idea\n\nnext week will be a different kind of episode it won't be this news so stay tuned it'll be about metrics and i will see you guys then\n1.","action":"ask","response":" Get Ready: Visualize AI Data With Azimuth!\n2. Mind Blown: Servicenow Pop-Up Experiences!\n3. Unmissable: Scripted Rest APIs Tutorial!\n4. Don't Miss Out: Performance Analytics Event!\n5. Discover: Microsoft Teams & Servicenow Integration!\n6. Missed It? Catch Up On Metrics & More!\n7. Now Or Never: Find Your Perfect Job!\n8. Interviews Made Easy: Mark Scott's Resource!\n9. Dive In: Many Dimensions & How To Make Them!\n10. Surprising Find: Jessalyn's Adorable Linkedin Videos!\n11. Revolutionize AI: Azimuth's Data Visualization!\n12. Wow Factor: Servicenow Pop-Ups Revealed!\n13. Get Ahead: Scripted Rest APIs Explained!\n14. Uncover: Performance Analytics Event Highlights!\n15. Tech Up: Microsoft Teams & Servicenow Integration!\n16. Learn Quickly: Metrics & More!\n17. Take Charge: Job Interviews With Mark Scott!\n18. Amazing Info: Many Dimensions & How To Make Them!\n19. Check It: Jessalyn's Adorable Linkedin Videos!\n20. Innovate: Azimuth's Data Visualization Tool!"},
{"cuid":"cld2s25i3004wpq24vegfsjmy","createdAt":"2023-01-19 13:34:38.428","updatedAt":"2023-01-19 13:34:38.428","userCuid":"cld9unimy004uucgu6m5s11lu","prompt":"var scmDataSegregationUtils = Class.create();\nscmDataSegregationUtils.prototype = {\n\tinitialize: function() {\n\t\t// name of the data segregation data config in use\n\t\tthis.DS_COMPANY = \"company\";\n\t\tthis.DS_DEPARTMENT = \"department\";\n\n\t\t// array utils\n\t\tthis.ArrayUtil = new ArrayUtil();\n\n\t\t// load the data segregation data config  and the user fields config\n\t\tthis.userPath = this.getUserPath();\n\t\tthis.dsdcArr = this.getDataSegrationDataConfig();\n\t\tthis.dsUserField = this.getUserFieldsConfig();\n\t},\n\t/**\n\t\t@name getUserPath\n\t\t@description Contains the user path for data segregation data configuration (DSDC), to know how to maintain the DS data fields on the task\n\t\t@returns {Object} Object contains the data segregation data configuration path to user (DSDC)\n\t*/\n\tgetUserPath : function (){\n\t\ttry{\n\t\t\t// hold the path to the user field. Used then in the ds_value to access the company or the department information\n\t\t\tvar userPath = {\n\t\t\t\tincident:\"caller_id\",\n\t\t\t\tproblem:\"first_reported_by_task.ref_incident.caller_id\",\n\t\t\t\tsc_request:\"requested_for\",\n\t\t\t\tsc_req_item:\"request.requested_for\", \n\t\t\t\tsc_task:\"request_item.request.requested_for\",\n\t\t\t\tdmn_demand:\"submitter\", \n\t\t\t\tchange_request:\"u_business_requester\", \n\t\t\t\tchange_task:\"change_request.u_business_requester\",\n\t\t\t\tpm_project:\"demand.submitter\", \n\t\t\t\tpm_project_task:\"parent.ref_pm_project.demand.submitter\" \n\t\t\t};\n\t\t\treturn userPath;\n\n\n\t\t} catch (exception) {\n\t\t\tgs.error (\"Error in scmDataSegregationUtils - getUserPath: \" + JSON.stringify(exception));\n\t\t}\n\t},\n\t/**\n\t\t@name getDataSegrationDataConfig\n\t\t@description Contains the data segregation data configuration (DSDC), to know how to maintain the DS data fields on the task\n\t\t@returns {Object} Object contains the data segregation data configuration (DSDC)\n\t*/\n\tgetDataSegrationDataConfig : function (){\n\t\ttry{\n\t\t\tvar dsdcArr = [\n\t\t\t\t{\n\t\t\t\t\tds_name :this.DS_COMPANY, // name, can be whatever, used to reference the config\n\t\t\t\t\tds_data_field: \"u_ds_related_company\", // name of the field on the task table that hold the information about the company entitled to see the record\n\t\t\t\t\tds_user_fields: [\"company\", \"u_ds_related_companies\"], // name of the field on the user table, that contains the information that need to be matched with a value in ds_data_field (determines which companies the user can see)\n\t\t\t\t\tds_apply_function: \"getCompany\", // name of the function to apply on the value from the ds_value fields and ds_user_fields to retreive the company information. \n\t\t\t\t\tds_value: { // where the values of the ds_data_field are coming from, depending the task's classname\n\t\t\t\t\t\tincident:[this.userPath['incident'] + \".company\"],\n\t\t\t\t\t\tproblem: [this.userPath['problem'] + \".company\"],\n\t\t\t\t\t\tsc_request: [this.userPath['sc_request'] + \".company\"],\n\t\t\t\t\t\tsc_req_item: [this.userPath['sc_req_item'] + \".company\"],\n\t\t\t\t\t\tsc_task: [this.userPath['sc_task'] + \".company\"],\n\t\t\t\t\t\tdmn_demand: [this.userPath['dmn_demand'] + \".company\"],\n\t\t\t\t\t\tchange_request: [this.userPath['change_request'] + \".company\"],\n\t\t\t\t\t\tchange_task: [this.userPath['change_task'] + \".company\"],\n\t\t\t\t\t\tpm_project: [this.userPath['pm_project'] + \".company\"],\n\t\t\t\t\t\tpm_project_task: [this.userPath['pm_project_task'] + \".company\"]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t// example for adding another criteria on department\n\t\t\t\t\tds_name :this.DS_DEPARTMENT, \n\t\t\t\t\tds_data_field: \"u_ds_related_department\",\n\t\t\t\t\tds_user_fields: [\"department\"],\n\t\t\t\t\tds_apply_function: null, // name of the function to apply on the value from the fs_value fields and ds_user_fields to retrive the departement information. For the time being, no function used\n\t\t\t\t\tds_value: {\n\t\t\t\t\t\tincident:[this.userPath['incident'] + \".department\"],\n\t\t\t\t\t\tproblem: [this.userPath['problem'] + \".department\"],\n\t\t\t\t\t\tsc_request: [this.userPath['sc_request'] + \".department\"],\n\t\t\t\t\t\tsc_req_item: [this.userPath['sc_req_item'] + \".department\"],\n\t\t\t\t\t\tsc_task: [this.userPath['sc_task'] + \".department\"],\n\t\t\t\t\t\tdmn_demand: [this.userPath['dmn_demand'] + \".department\"],\n\t\t\t\t\t\tchange_request: [this.userPath['change_request'] + \".department\"],\n\t\t\t\t\t\tchange_task: [this.userPath['change_task'] + \".department\"],\n\t\t\t\t\t\tpm_project: [this.userPath['pm_project'] + \".department\"],\n\t\t\t\t\t\tpm_project_task: [this.userPath['pm_project_task'] + \".department\"]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t];\n\t\t\treturn dsdcArr;\n\n\t\t} catch (exception) {\n\t\t\tgs.error (\"Error in scmDataSegregationUtils - getDataSegrationDataConfig: \" + JSON.stringify(exception));\n\t\t}\n\t},\n\ttests: function()\t{\n\t\t// to track test records to delete\n\t\tvar taskToDelete = [];\n\n\n\t\t// holds the tests\n\t\tthis.testNum = 0;\n\t\tthis.testOK = 0;\n\t\tthis.testKO = 0;\n\n\t\t// GETCOMPANY\n\t\tthis.test(\"getcompany with Blancpain Boutique\", this.getCompany('6bd655f18756c91043e6c9140cbb3534'), '39890fb687274d100116a8290cbb35ea'/*blancpain*/);\n\t\tthis.test(\"getcompany with Blancpain\", this.getCompany('39890fb687274d100116a8290cbb35ea'), '39890fb687274d100116a8290cbb35ea'/*blancpain*/);\n\n\t\t// getRelatedFields\n\t\tvar taskGr = new GlideRecord(\"incident\");\n\t\tthis.test(\"getRelatedFields for all config\", this.getRelatedFields(taskGr), \"caller_id.company,caller_id.department\");\n\t\tthis.test(\"getRelatedFields for company\", this.getRelatedFields(taskGr, this.DS_COMPANY), \"caller_id.company\");\n\t\tthis.test(\"getRelatedFields for non existing config\", this.getRelatedFields(taskGr, \"wrongcompany\"), \"\");\n\t\ttaskGr = new GlideRecord(\"cmdb_ci\");\n\t\tthis.test(\"getRelatedFields for non configured table\", this.getRelatedFields(taskGr, this.DS_COMPANY), \"\");\n\n\t\t// getRelatedValues\n\t\tvar taskGr = new GlideRecord(\"incident\");\n\t\ttaskGr.get('81d4743c8737d590b216c8040cbb35b4'); //INC0004202 Blancpain SA\n\n\t\tthis.test(\"getRelatedValues with company Blancpain SA\", this.getRelatedValues(taskGr, this.DS_COMPANY), '39890fb687274d100116a8290cbb35ea'/*blancpain*/);\n\t\tthis.test(\"getRelatedValues with department  Ressources Humaines\", this.getRelatedValues(taskGr, this.DS_DEPARTMENT), '18e41db1871a89109b6a85d30cbb352a'/*Ressources Humaines*/);\n\n\t\tvar taskGr = new GlideRecord(\"incident\");\n\t\ttaskGr.get('14d8167b87c465506d29c8040cbb35ed'); //INC0004300 The Swatch Group Services Ltd\n\n\t\tthis.test(\"getRelatedValues with company The Swatch Group Services Ltd\", this.getRelatedValues(taskGr, this.DS_COMPANY), '15890fb687274d100116a8290cbb353d'/*swatch*/);\n\t\tthis.test(\"getRelatedValues with department Group Applications\", this.getRelatedValues(taskGr, this.DS_DEPARTMENT), '34c7769187a18d10dfe887f60cbb3507'/*Group Applications*/);\n\n\t\tvar taskGr = new GlideRecord(\"incident\");\n\t\ttaskGr.get('2c1ddb65879bd110b216c8040cbb35bf'); //INC0000413 empty\n\n\t\tthis.test(\"getRelatedValues with companyempty\", this.getRelatedValues(taskGr, this.DS_COMPANY), '');\n\t\tthis.test(\"getRelatedValues with departmentemptys\", this.getRelatedValues(taskGr, this.DS_DEPARTMENT), '');\n\n\t\t// triggerMaintainDSData\n\t\tvar taskGr = new GlideRecord(\"incident\");\n\t\ttaskGr.newRecord();\n\t\ttaskGr.setValue(\"caller_id\", gs.getUserID);\n\n\t\tthis.test(\"triggerMaintainDSData with caller id update\", this.triggerMaintainDSData(taskGr), true);\n\n\t\ttaskGr = new GlideRecord(\"incident\");\n\t\ttaskGr.newRecord();\n\t\ttaskGr.setValue(\"short_description\", gs.getUserID);\n\t\tthis.test(\"triggerMaintainDSData with other update\", this.triggerMaintainDSData(taskGr), false);\n\n\t\ttaskGr = new GlideRecord(\"incident\");\n\t\ttaskGr.newRecord();\n\t\tthis.test(\"triggerMaintainDSData with no update\", this.triggerMaintainDSData(taskGr), false);\n\n\t\ttaskGr = new GlideRecord(\"incident_task\");\n\t\ttaskGr.newRecord();\n\t\tthis.test(\"triggerMaintainDSData with a class that has no config\", this.triggerMaintainDSData(taskGr), false);\n\n\t\t// maintainDSData\n\t\t// test data\n\t\tvar taskGr = new GlideRecord(\"incident\");\n\t\ttaskGr.newRecord();\n\t\ttaskGr.setValue('caller_id', '96dda352876b55100116a8290cbb35f1'); //Benoit Petit\n\n\t\tthis.maintainDSData(taskGr);\n\t\tthis.test(\"maintainDSData check related company result\", taskGr.u_ds_related_company, '15890fb687274d100116a8290cbb353d' /*The Swatch Group Services Ltd --> Swatch */);\n\t\tthis.test(\"maintainDSData check related department result\", taskGr.u_ds_related_department, '34c7769187a18d10dfe887f60cbb3507' /*Group Application*/);\n\n\t\tvar taskGr = new GlideRecord(\"incident\");\n\t\ttaskGr.newRecord();\n\t\t//taskGr.setValue('caller_id'); //empty\n\n\t\tthis.maintainDSData(taskGr);\n\t\tthis.test(\"maintainDSData check related company result without affected user\", taskGr.u_ds_related_company, '' );\n\t\tthis.test(\"maintainDSData check related department result without affected user\", taskGr.u_ds_related_department, '');\n\n\t\t// getUserRelatedFields\n\n\t\tthis.test(\"getUserRelatedFields for all config\", this.getUserRelatedFields(), [\"company\",\"u_ds_related_companies\",\"department\"]);\n\t\tthis.test(\"getUserRelatedFields for company\", this.getUserRelatedFields(this.DS_COMPANY), [\"company\",\"u_ds_related_companies\"]);\n\t\tthis.test(\"getUserRelatedFields for department\", this.getUserRelatedFields(this.DS_DEPARTMENT), \"department\");\n\n\t\t// getUserRelatedValues\n\t\tuserId = '96dda352876b55100116a8290cbb35f1'; //Benoit Petit\n\n\t\tthis.test(\"getUserRelatedValues for company Benoit Petit\", this.getUserRelatedValues(userId, this.DS_COMPANY), '15890fb687274d100116a8290cbb353d' /*The Swatch Group Services Ltd --> Swatch */);\n\t\tthis.test(\"getUserRelatedValues for department Benoit Petit\", this.getUserRelatedValues(userId, this.DS_DEPARTMENT), '34c7769187a18d10dfe887f60cbb3507' /*Group Application*/);\n\n\t\tuserId = '8fab59fd87d6c91043e6c9140cbb3550'; //Reto Stoeckli\n\t\tthis.test(\"getUserRelatedValues for company Reto Stoeckly\", this.getUserRelatedValues(userId, this.DS_COMPANY), ['6d890fb687274d100116a8290cbb35c3','e9890fb687274d100116a8290cbb35df'] /*SG Immeuble, caisse de pension CPK*/);\n\t\tthis.test(\"getUserRelatedValues for departmen Reto Stoeckly\", this.getUserRelatedValues(userId, this.DS_DEPARTMENT), '' /*empty*/);\n\n\t\t// getCompaniesManagedByUser\n\t\tthis.test(\"getCompaniesManagedByUser for Reto Stoeckli\", this.getCompaniesManagedByUser('8fab59fd87d6c91043e6c9140cbb3550'/*Reto Stoeckli*/), [\"6d890fb687274d100116a8290cbb35c3\",\"5fa36309874fd150b216c8040cbb358a\",\"8fd551b98716c91043e6c9140cbb35a7\",\"8b55dd758716c91043e6c9140cbb35c6\"]);\n\t\tthis.test(\"getCompaniesManagedByUser for Benoit Petit\", this.getCompaniesManagedByUser('96dda352876b55100116a8290cbb35f1'/*Benoit Petit*/), \"\");\n\n\n\t\tvar userGr = new GlideRecord('sys_user');\n\t\tuserGr.get('8fab59fd87d6c91043e6c9140cbb3550'); //Reto Stoeckli\n\t\tthis.test(\"getRelatedCompaniesForUser for Reto Stoeckli\", this.getRelatedCompaniesForUser(userGr), ['6d890fb687274d100116a8290cbb35c3','e9890fb687274d100116a8290cbb35df'] /*SG Immeuble, caisse de pension CPK*/);\n\n\t\tvar userGr = new GlideRecord('sys_user');\n\t\tuserGr.get('96dda352876b55100116a8290cbb35f1'); //Benoit Petit\n\t\tthis.test(\"getRelatedCompaniesForUser for Benoit Petit\", this.getRelatedCompaniesForUser(userGr), '15890fb687274d100116a8290cbb353d' /*The Swatch Group Services Ltd --> Swatch */);\n\n\t\t// getUserFields\n\t\tvar taskGr = new GlideRecord(\"incident\");\n\t\ttaskGr.newRecord();\n\n\t\tthis.test(\"getUserFields for incident\", this.getUserFields(taskGr), ['watch_list','work_notes_list']);\n\n\t\t// getAllTaskRelatedToUser\n\t\tvar userGr= new GlideRecord('sys_user');\n\t\tuserGr.get('96dda352876b55100116a8290cbb35f1'); // benoit petit\n\n\t\tvar taskGr = new scmDataSegregationUtils().getAllTaskRelatedToUser(userGr);\n\t\tvar count = taskGr.getRowCount();\n\n\t\tvar expected = \"ref_incident.caller_id=96dda352876b55100116a8290cbb35f1^ORref_problem.first_reported_by_task.ref_incident.caller_id=96dda352876b55100116a8290cbb35f1^ORref_sc_request.requested_for=96dda352876b55100116a8290cbb35f1^ORref_sc_req_item.request.requested_for=96dda352876b55100116a8290cbb35f1^ORref_sc_task.request_item.request.requested_for=96dda352876b55100116a8290cbb35f1^ORref_dmn_demand.submitter=96dda352876b55100116a8290cbb35f1^ORref_change_request.u_business_requester=96dda352876b55100116a8290cbb35f1^ORref_change_task.change_request.u_business_requester=96dda352876b55100116a8290cbb35f1^ORref_pm_project.demand.submitter=96dda352876b55100116a8290cbb35f1^ORref_pm_project_task.parent.ref_pm_project.demand.submitter=96dda352876b55100116a8290cbb35f1\"\n\n\t\tthis.test(\"getAllTaskRelatedToUser for Benoit Petit\", taskGr.getEncodedQuery(), expected);\n\t\tthis.test(\"getAllTaskRelatedToUser for Benoit Petit count > 0\", count > 0, true);\n\n\t\tvar userGr= new GlideRecord('sys_user');\n\t\tuserGr.get('4f1a597187da89109b6a85d30cbb3509'); // Clemens Kreysa\n\n\t\tvar taskGr = new scmDataSegregationUtils().getAllTaskRelatedToUser(userGr);\n\t\tvar count = taskGr.getRowCount();\n\n\t\tvar expected = \"ref_incident.caller_id=4f1a597187da89109b6a85d30cbb3509^ORref_problem.first_reported_by_task.ref_incident.caller_id=4f1a597187da89109b6a85d30cbb3509^ORref_sc_request.requested_for=4f1a597187da89109b6a85d30cbb3509^ORref_sc_req_item.request.requested_for=4f1a597187da89109b6a85d30cbb3509^ORref_sc_task.request_item.request.requested_for=4f1a597187da89109b6a85d30cbb3509^ORref_dmn_demand.submitter=4f1a597187da89109b6a85d30cbb3509^ORref_change_request.u_business_requester=4f1a597187da89109b6a85d30cbb3509^ORref_change_task.change_request.u_business_requester=4f1a597187da89109b6a85d30cbb3509^ORref_pm_project.demand.submitter=4f1a597187da89109b6a85d30cbb3509^ORref_pm_project_task.parent.ref_pm_project.demand.submitter=4f1a597187da89109b6a85d30cbb3509\"\n\n\t\tthis.test(\"getAllTaskRelatedToUser for Clemens Kreysa\", taskGr.getEncodedQuery(), expected);\n\t\tthis.test(\"getAllTaskRelatedToUser for Clemens Kreysa count > 0 \", count > 0, true);\n\n\t\t// Summary\n\t\tgs.info(\"\\nSUMMARY\\n*******\\nGlobal: \" + (this.testKO == 0? \"All Good 😎\" : \"Has error(s) 😢\")+ \"\\nTest OK: \" + this.testOK + \"\\nTest KO: \" + this.testKO);\n\t},\n\ttest : function (text, result, expected){\n\t\tthis.testNum++;\n\t\tvar msg = \" - test \" + this.testNum + \" (\"+ text + \")\";\n\t\tvar details = \"\\nresult=\" + result + \"\\nexpect=\" + expected;\n\n\t\tvar checkResult = false;\n\n\t\tif (Array.isArray(expected)){\n\t\t\tcheckResult = expected.every(function(expectedElement){\n\t\t\t\treturn (result.indexOf(expectedElement) > -1);\n\t\t\t}, this)\n\t\t} else {\n\t\t\tcheckResult = (result == expected);\n\t\t}\n\n\t\tif (checkResult){\n\t\t\tthis.testOK++;\n\t\t\tgs.info(\"🟢 OK\" + msg );\n\t\t} else {\n\t\t\tthis.testKO++;\n\t\t\tgs.info(\"🔴 KO\" + msg + details);\n\n\t\t}\n\t},\n\n\t/**\n\t\t@name getUserFieldsConfig\n\t\t@description Contains the user's fields configuration, to know how to grant access to the user if present in those fields\n\t\t@returns {Object} Object contains the data segregation user's fields\n\t*/\n\tgetUserFieldsConfig : function (){\n\t\ttry{\n\t\t\t//hold info about fields that should contains the user sysid (watch list, caller, etc..)\n\t\t\tvar ds_user_field= {\n\t\t\t\ttask: [\"watch_list\",\"work_notes_list\"],\n\t\t\t};\n\n\t\t\treturn ds_user_field;\n\t\t} catch (exception) {\n\t\t\tgs.error (\"Error in scmDataSegregationUtils - getUserFieldsConfig: \" + JSON.stringify(exception));\n\t\t}\n\t},\n\n\t/**\n\t\t@name getCompany\n\t\t@description Get the correct company (parent's company) for the given company's sys_id\n\t\t@param {String} [companyId] - Sysid of the company \n\t\t@returns {String} Object contains the data segregation user's fields\n\t*/\n\tgetCompany : function (companyId){\n\t\ttry{\n\t\t\t// get the company GlideRecord\n\t\t\tvar companyGr = new GlideRecord('core_company');\n\t\t\tif (companyGr.get(companyId)){\n\t\t\t\tif (!companyGr.parent.nil()){\n\t\t\t\t\treturn this.getCompany(companyGr.parent);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// if there is no match or if the parent is null, return the current company\n\t\t\treturn companyId + \"\";\n\t\t} catch (exception) {\n\t\t\tgs.error (\"Error in scmDataSegregationUtils - getCompany: \" + JSON.stringify(exception));\n\t\t}\n\t},\n\t/**\n\t\t@name getDsNames\n\t\t@description Get all the DS NAME from the DSDC configuration\n\t\t@returns {Array} Array of DS NAMEs\n\t*/\n\tgetDsNames : function (){\n\t\ttry{\n\t\t\tvar dsNameArr = [];\n\t\t\tthis.dsdcArr.forEach(function(dsdc){\n\t\t\t\tdsNameArr.push(dsdc.ds_name);\n\t\t\t}, this);\n\n\t\t\treturn dsNameArr;\n\t\t} catch (exception) {\n\t\t\tgs.error (\"Error in scmDataSegregationUtils - getDsNames: \" + JSON.stringify(exception));\n\t\t}\n\t},\n\n\t/**\n\t\t@name triggerMaintainDSData\n\t\t@description Check if the BR to maintain Data Segregation data on the task should be triggered\n\t\t@param {GlideRecord(task)} [taskGr] - Task GlideRecord\n\t\t@returns {Boolean} True if the BR should trigger, false otherwise\n\t*/\n\ttriggerMaintainDSData : function (taskGr){\n\t\ttry{\n\n\t\t\t// get the related fields\n\t\t\tvar relatedFieldsArr = this.getRelatedFields(taskGr);\n\n\t\t\t// check each field to know if it was updated\n\t\t\tvar hasChanges = relatedFieldsArr.some(function(fieldPath){\n\t\t\t\t// take the \"top\" field, in case there is dot walking\n\t\t\t\tvar mainFieldName = fieldPath.split(\".\").shift();\n\n\t\t\t\t// check if the field is changed\n\t\t\t\tif (taskGr[mainFieldName].changes()){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}, this);\n\n\t\t\treturn hasChanges;\n\n\t\t} catch (exception) {\n\t\t\tgs.error (\"Error in scmDataSegregationUtils - triggerMaintainDSData: \" + JSON.stringify(exception));\n\t\t}\n\t},\n\t/**\n\t\t@name maintainDSData\n\t\t@description Perform the maintenance of the Data Segregtion fields on the given task\n\t\t@param {GlideRecord(task)} [taskGr] - Task GlideRecord\n\t*/\n\tmaintainDSData : function (taskGr){ \n\t\ttry{\n\t\t\tvar dsNames = this.getDsNames();\n\n\t\t\tdsNames.forEach(function(dsName){\n\t\t\t\tvar valueArr =  this.getRelatedValues(taskGr, dsName);\n\t\t\t\tvar dsdc = this.findInArrayOfObject(this.dsdcArr, 'ds_name', dsName).shift();\n\t\t\t\tvar datafield = dsdc.ds_data_field;\n\t\t\t\tif (valueArr.length > 0){\n\t\t\t\t\tvar value = valueArr.shift();\n\t\t\t\t\ttaskGr.setValue(datafield, value);\n\t\t\t\t} else {\n\t\t\t\t\ttaskGr.setValue(datafield, '');\n\t\t\t\t}\n\t\t\t}, this);\n\n\t\t} catch (exception) {\n\t\t\tgs.error (\"Error in scmDataSegregationUtils - maintainDSData: \" + JSON.stringify(exception));\n\t\t}\n\t},\n\n\t/**\n\t\t@name getRelatedFields\n\t\t@description get the name/path of the fields for the given ds_name and task record, using the Data Segregation Data Config (DSDC). If no ds_name is given, return all the fields from all configs. If there is not config for the record's class, lookup the config for the parent's class, until a config is found\n\t\t@example For change Request and DS Name \"company\", returns [\"requested_by.company\",\"assignment_group.company\"]\n\t\t@param {GlideRecord(task)} [taskGr] - Task GlideRecord\n\t\t@param {String} [dsName=] - data segregation config name\n\t\t@returns {Array} List of all the fields related to the Data Segregation \n\t*/\n\tgetRelatedFields : function (taskGr, dsName){\n\t\ttry{\t\t\t\n\t\t\t// Array to store the relevant config according the dsname\n\t\t\tvar relevantDsDc = [];\n\n\t\t\t// if dsName not provided, get all the dsName from the config\n\t\t\tif (global.JSUtil.nil(dsName)){\n\t\t\t\trelevantDsDc = this.dsdcArr;\n\t\t\t} else /* if a ds name is provided, get only the relevant config*/ {\n\t\t\t\trelevantDsDc = this.findInArrayOfObject(this.dsdcArr, \"ds_name\", dsName);\n\t\t\t}\n\n\t\t\t// get the table hierachy\n\t\t\tvar tableHierachyArr = j2js(new TableUtils(taskGr.getRecordClassName()).getHierarchy());\n\n\t\t\t// to store the results (related fields array)\n\t\t\tvar relatedFieldsArr = [];\n\n\t\t\t// process all relevant configs\n\t\t\trelevantDsDc.forEach(function(config){\n\t\t\t\ttableHierachyArr.some(function (tableName){\n\t\t\t\t\tif (config.ds_value.hasOwnProperty(tableName)){\n\t\t\t\t\t\t// get the related fields from config\n\t\t\t\t\t\tvar currentRelatedFieldsArr = config.ds_value[tableName];\n\n\t\t\t\t\t\t// concatenate to the main array\n\t\t\t\t\t\trelatedFieldsArr = this.ArrayUtil.concat(relatedFieldsArr, currentRelatedFieldsArr);\n\n\t\t\t\t\t\t// return true to stop iterating the table name hierachy\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\t\t\t}, this);\n\n\t\t\treturn relatedFieldsArr;\n\t\t} catch (exception) {\n\t\t\tgs.error (\"Error in scmDataSegregationUtils - getRelatedFields: \" + JSON.stringify(exception));\n\t\t}\n\t},\n\t/**\n\t\t@name triggerUpdateTasksCompany\n\t\t@description Check if the BR to maintain  tasks related companies on tasks changed on the user should be triggered\n\t\t@param {GlideRecord(user)} [userGr] - User GlideRecord\n\t\t@param {GlideRecord(user)} [previousUserGr] - previous user GlideRecord (from the BR)\n\t\t@returns {Boolean} True if the BR should trigger, false otherwise\n\t*/\n\ttriggerUpdateTasksCompany : function (userGr, previousUserGr){\n\t\ttry{\n\n\t\t\tif (userGr.company.changes()){\n\t\t\t\t// get the parent companies of both the new and previous company\n\t\t\t\tvar newParentCompany =  this.applyFunction(this.DS_COMPANY, userGr.company);\n\t\t\t\tvar previousParentCompany =  this.applyFunction(this.DS_COMPANY, previousUserGr.company);\n\n\t\t\t\t// if the parent company is different, trigger the BR\n\t\t\t\tif (newParentCompany != previousParentCompany){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// in all other case, do not trigger the BR\n\n\t\t\treturn false;\n\n\t\t} catch (exception) {\n\t\t\tgs.error (\"Error in scmDataSegregationUtils - triggerUpdateTasksCompany: \" + JSON.stringify(exception));\n\t\t}\n\t},\n\t/**\n\t\t@name getAllUserRelatedToCompany\n\t\t@description Get all the users related to the given comapny, including the manger (u_it_manager) \n\t\t@param {GlideRecord(core_company)} [companyGr] - Company GlideRecord\n\t\t@returns {GlideRecord} GlideRecord with all the users related to the given company. Needs to perform .next() to get first element !\n\t*/\n\tgetAllUserRelatedToCompany : function (companyGr){  //UGLY\n\t\ttry{\n\t\t\t// get the user id\n\t\t\tvar companyId = companyGr.getUniqueValue();\t\t\n\n\t\t\t// query the task table with the query \n\t\t\tvar userGr = new GlideRecord('sys_user');\n\t\t\tvar query = userGr.addQuery('company', companyGr.getUniqueValue());\n\t\t\tif (!companyGr.u_it_manager.nil()){\n\t\t\t\tquery.addOrCondition('sys_id', companyGr.u_it_manager); \n\t\t\t}\n\t\t\tuserGr.query();\n\n\t\t\treturn userGr;\n\t\t} catch (exception) {\n\t\t\tgs.error (\"Error in scmDataSegregationUtils - getAllUserRelatedToCompany: \" + JSON.stringify(exception));\n\t\t}\n\t},\n\t/**\n\t\t@name getAllTaskRelatedToUser\n\t\t@description Get all the tasks related to the given user, using the configuration ds_value\n\t\t@param {GlideRecord(sys_user)} [userGr] - user GlideRecord\n\t\t@returns {GlideRecord} GlideRecord with all the tasks related to the given user. Needs to perform .next() to get first element !\n\t*/\n\tgetAllTaskRelatedToUser : function (userGr){ \n\t\ttry{\n\t\t\t// get the user id\n\t\t\tvar userId = userGr.getUniqueValue();\n\n\t\t\t// build the query with each table in the userPath object\n\t\t\tvar queryElement = [];\n\t\t\tfor (var table in this.userPath){\n\t\t\t\tqueryElement.push(\"ref_\" + table +\".\" + this.userPath[table] + \"=\" + userId);\n\t\t\t};\n\n\t\t\tvar queryStr = queryElement.join(\"^OR\");\n\n\t\t\t// query the task table with the query \n\t\t\tvar taskGr = new GlideRecord('task');\n\t\t\ttaskGr.addEncodedQuery(queryStr);\n\t\t\ttaskGr.query();\n\n\t\t\treturn taskGr;\n\t\t} catch (exception) {\n\t\t\tgs.error (\"Error in scmDataSegregationUtils - getAllTaskRelatedToUser: \" + JSON.stringify(exception));\n\t\t}\n\t},\n\t/**\n\t\t@name getRelatedValues\n\t\t@description get the values of the related fields for the given ds_name and task record, using the Data Segregation Data Config (DSDC). Using getRelatedFields() to get the related fields.\n\t\t@example for Change Request: takes the values stored in requrested_by.company and in assignment_group.company on the task record.\n\t\t@param {GlideRecord(task)} [taskGr] - Task GlideRecord\n\t\t@param {String} [dsName] - data segregation config name\n\t\t@returns {Array} List of all the value from the fields related to the Data Segregation \n\t*/\n\tgetRelatedValues : function (taskGr, dsName){\n\t\ttry{\n\t\t\t// to store the results (related fields values array) \n\t\t\tvar relatedValuesArr = [];\n\n\t\t\t// make sure a dsName is provided\n\t\t\tif (global.JSUtil.notNil(dsName)){\n\t\t\t\tvar relatedFieldsArr = this.getRelatedFields(taskGr, dsName);\n\n\t\t\t\t// get the values for each field\n\t\t\t\trelatedFieldsArr.forEach(function(relatedField){\n\n\t\t\t\t\tvar fieldValue = taskGr.getElement(relatedField);\n\t\t\t\t\tif (global.JSUtil.notNil(fieldValue)){\n\t\t\t\t\t\tfieldValue = this.applyFunction(dsName, fieldValue);\n\n\t\t\t\t\t\trelatedValuesArr.push(fieldValue);\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\t\t\t}\n\n\t\t\treturn relatedValuesArr;\n\n\t\t} catch (exception) {\n\t\t\tgs.error (\"Error in scmDataSegregationUtils - getRelatedValues: \" + JSON.stringify(exception));\n\t\t}\n\t},\n\t/**\n\t\t@name getUserRelatedFields\n\t\t@description get the name/path of the fields for the given ds_name, using the Data Segregation Data Config (DSDC). If no ds_name is given, return all the fields from all configs.\n\t\t@param {String} [dsName=] - data segregation config name\n\t\t@returns {Array} List of all the fields related to the Data Segregation \n\t*/\n\tgetUserRelatedFields : function (dsName){\n\t\ttry{\n\n\t\t\t// Array to store the relevant config according the dsname\n\t\t\tvar relevantDsDc = [];\n\n\t\t\t// if dsName not provided, get all the dsName from the config\n\t\t\tif (global.JSUtil.nil(dsName)){\n\t\t\t\trelevantDsDc = this.dsdcArr;\n\t\t\t} else /* if a ds name is provided, get only the relevant config*/ {\n\t\t\t\trelevantDsDc = this.findInArrayOfObject(this.dsdcArr, \"ds_name\", dsName);\n\t\t\t}\n\n\t\t\t// to store the results (related fields array)\n\t\t\tvar userFieldsArr = [];\n\n\t\t\t// process all relevant configs\n\t\t\trelevantDsDc.forEach(function(config){\n\t\t\t\t// get the related fields from config\n\t\t\t\tvar currentUserFieldsArr = config.ds_user_fields;\n\n\t\t\t\t// concatenate to the main array\n\t\t\t\tuserFieldsArr = this.ArrayUtil.concat(userFieldsArr, currentUserFieldsArr);\n\t\t\t}, this);\n\n\t\t\treturn userFieldsArr;\n\t\t} catch (exception) {\n\t\t\tgs.error (\"Error in scmDataSegregationUtils - getUserRelatedFields: \" + JSON.stringify(exception));\n\t\t}\n\t},\n\t/**\n\t\t@name getUserRelatedValues\n\t\t@description get the values of the related fields for the given ds_name and user record, using the Data Segregation Data Config (DSDC).\n\t\t@param {GlideRecord(sys_user)} [userId] - User GlideRecord\n\t\t@param {String} [dsName] - data segregation config name\n\t\t@returns {Array} List of all the values from the fields related to the Data Segregation \n\t*/\n\tgetUserRelatedValues : function (userId, dsName){\n\t\ttry{\n\n\n\n\t\t\t// to store the results (related fields values array) \n\t\t\tvar userRelatedValuesArr = [];\n\n\t\t\t// get cached value, if any\n\t\t\tvar cacheKey = [\"userRelatedValues\", dsName, userId].join(\"_\");\n\t\t\tif (gs.getProperty('scm.ds.enable_user_data_cache', \"true\") == \"true\"){\n\t\t\t\tvar cachedData = this.getCachedVariable(cacheKey, gs.getProperty('scm.ds.user_data_cache_ttl', null));\n\t\t\t\tif (JSUtil.notNil(cachedData)){\n\t\t\t\t\tif (gs.getProperty('scm.ds.showFilterQuery', \"false\") == \"true\") {\n\t\t\t\t\t\tif (gs.hasRole('admin') || GlideImpersonate().isImpersonating()){\n\t\t\t\t\t\t\tgs.info(\"using cached filter with key \" + cacheKey + \" : \" + cachedData);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tuserRelatedValuesArr = JSON.parse(cachedData);\n\t\t\t\t\treturn userRelatedValuesArr;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// get user\n\t\t\tvar userGr = new GlideRecord('sys_user');\n\t\t\tuserGr.get(userId);\n\n\n\t\t\t// make sure a dsName is provided\n\t\t\tif (global.JSUtil.notNil(dsName)){\n\t\t\t\tvar userFieldsArr = this.getUserRelatedFields(dsName);\n\n\t\t\t\t// get the values for each field\n\t\t\t\tuserFieldsArr.forEach(function(relatedField){\n\n\t\t\t\t\t// split the value, as it may come from a List field, and process each entry separatly\n\t\t\t\t\tvar fieldValueArr = userGr.getElement(relatedField).split(\",\") ;\n\t\t\t\t\tfieldValueArr.forEach(function (value){\n\t\t\t\t\t\tif (global.JSUtil.notNil(value)){\n\t\t\t\t\t\t\tvar fieldValue = this.applyFunction(dsName, value);\n\n\t\t\t\t\t\t\tuserRelatedValuesArr.push(fieldValue);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this);\n\t\t\t\t}, this);\n\t\t\t}\n\n\t\t\t// Make sure values are uniques and return\n\t\t\tuserRelatedValuesArr = this.ArrayUtil.unique(userRelatedValuesArr);\n\n\n\t\t\tif (gs.getProperty('scm.ds.enable_user_data_cache', \"true\") == \"true\"){\n\t\t\t\tthis.setCachedVariable(cacheKey, JSON.stringify(userRelatedValuesArr));\n\t\t\t}\n\t\t\treturn userRelatedValuesArr;\n\n\t\t} catch (exception) {\n\t\t\tgs.error (\"Error in scmDataSegregationUtils - getUserRelatedValues: \" + JSON.stringify(exception));\n\t\t}\n\t},\n\t/**\n\t\t@name applyFunction\n\t\t@description get the function from the given DSDC config name and apply it to the input value\n\t\t@param {String} [dsName] - data segregation config name\n\t\t@param {String} [inputValue] - Input value on which to apply the function\n\t\t@returns {String}  output value, after applying the function\n\t*/\n\tapplyFunction : function (dsName, inputValue){\n\t\ttry{\n\t\t\t// default outpout value in the input value\n\t\t\tvar outputValue = inputValue;\n\n\t\t\t// make sure a dsName is provided\n\t\t\tif (global.JSUtil.notNil(dsName)){\n\t\t\t\t// get the config, to get the function from ds_apply_function\n\t\t\t\tvar dsdcArr = this.findInArrayOfObject(this.dsdcArr, 'ds_name', dsName);\n\t\t\t\tvar config = dsdcArr.shift();\n\t\t\t\tif (global.JSUtil.notNil(config)){\n\t\t\t\t\tvar funcName = config.ds_apply_function;\n\t\t\t\t\tif (global.JSUtil.notNil(funcName)){\n\t\t\t\t\t\toutputValue = this[funcName](inputValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn outputValue;\n\t\t} catch (exception) {\n\t\t\tgs.error (\"Error in scmDataSegregationUtils - applyFunction: \" + JSON.stringify(exception));\n\t\t}\n\t},\n\n\t/**\n\t\t@name getCompaniesManagedByUser\n\t\t@description Get all the companies manager by the given user\n\t\t@param {String} [userId] - User sys_id\n\t\t@returns {Array} List of companies the user is managing\n\t*/\n\tgetCompaniesManagedByUser : function (userId){\n\t\ttry{\n\t\t\t// array to store the company the user is manager for\n\t\t\tvar companyArr = [];\n\n\t\t\t// query all the companies where the user is manager\n\t\t\tvar companyGr = new GlideRecord('core_company');\n\t\t\tcompanyGr.addQuery('u_it_manager', 'CONTAINS', userId);\n\t\t\tcompanyGr.addNotNullQuery('u_it_manager');\n\t\t\tcompanyGr.orderBy('name');\n\t\t\tcompanyGr.query();\n\n\t\t\twhile (companyGr.next()){\n\t\t\t\tcompanyArr.push(companyGr.getUniqueValue());\n\t\t\t}\n\n\t\t\treturn companyArr;\n\n\t\t} catch (exception) {\n\t\t\tgs.error (\"Error in scmDataSegregationUtils - getCompaniesManagedByUser: \" + JSON.stringify(exception));\n\t\t}\n\t},\n\t/**\n\t\t@name getRelatedCompaniesForUser\n\t\t@description Get all the related companies for the given user (from the company field and all the companies the user is manager). Applies the function ds_apply_function on the result\n\t\t@param {GlideRecord(sys_user)} [userGr] - Task GlideRecord\n\t\t@returns {Array}  List of related companies for the given user\n\t*/\n\tgetRelatedCompaniesForUser: function (userGr){\n\t\ttry{\n\t\t\t// get the company I am manager for \n\t\t\tvar userCompaniesArr = this.getCompaniesManagedByUser(userGr.getUniqueValue());\n\n\t\t\t// add the company from the user record\n\t\t\tif (!userGr.company.nil()){\n\t\t\t\tuserCompaniesArr.push(userGr.getValue('company'));\n\t\t\t}\n\n\t\t\t// to store the parent companies\n\t\t\tvar userParentCompanies = [];\n\n\t\t\t// apply the function on all companies retrived above\n\t\t\tuserCompaniesArr.forEach(function (company){\n\t\t\t\tuserParentCompanies.push(this.applyFunction(this.DS_COMPANY, company));\n\t\t\t}, this);\n\n\t\t\t// make sure it is unique and return\n\t\t\tuserParentCompanies = this.ArrayUtil.unique(userParentCompanies);\n\n\t\t\treturn userParentCompanies;\n\n\n\t\t} catch (exception) {\n\t\t\tgs.error (\"Error in scmDataSegregationUtils - getRelatedCompaniesForUser: \" + JSON.stringify(exception));\n\t\t}\n\t},\n\t/**\n\t\t@name isTestUser\n\t\t@description check if the current user is set as a test user\n\t\t@returns true if current user is a test user, false otherwise\n\t*/\n\tisTestUser : function (Sam){\n\t\ttry{\n\t\t\tvar testUsers = gs.getProperty('scm.ds.test_users', \"\");\n\t\t\tif (testUsers.indexOf(gs.getUserID()) > -1){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t} catch (exception) {\n\t\t\tgs.error (\"Error in scmDataSegregationUtils - isTestUser: \" + JSON.stringify(exception));\n\t\t}\n\t},\t\n\t/**\n\t\t@name triggerDataSegregationFilter\n\t\t@description Check if the BR to filter the task with  Data Segregation should be triggered\n\t\t@param {GlideRecord(task)} [taskGr] - Task GlideRecord\n\t\t@returns {Boolean}  True if the BR should trigger, false otherwise\n\t*/\n\ttriggerDataSegregationFilter : function (taskGr){\n\t\ttry{\n\n\n\t\t\t// check is enabled \n\t\t\tif (gs.getProperty('scm.ds.enable_query_filter', false) == \"false\" && !this.isTestUser()){\n\t\t\t\treturn false;\n\t\t\t}\n\n\n\t\t\t/* \n\t\t\t   is not interactive session and not from a mobile, return\n\t\t\t   note: from mobile apps, isInteractive returns false, that why we need also to check isMobile. See KB0749141\n\t\t\t*/\n\t\t\tif (!gs.isInteractive() && !gs.isMobile()){\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Check if the user has at least on the the override role\n\t\t\tvar whiteListRolesStr = gs.getProperty('scm.ds.whitelist_roles', '');\n\t\t\tif (JSUtil.notNil(whiteListRolesStr) && !this.isTestUser()){\n\t\t\t\tvar whiteListRoles = whiteListRolesStr.split(\",\");\n\t\t\t\tfor (var i=0; i < whiteListRoles.length; i++){\n\t\t\t\t\t// if has an override role, do not run the BR\n\t\t\t\t\tif (gs.hasRole(whiteListRoles[i])){\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (gs.getProperty('scm.ds.approverRead_enable', \"false\") == 'true'){ \n\t\t\t\t// If from approval, do not apply Data Segragation (for backend)\n\t\t\t\tvar canApproversRead = new global.ApproverUtils().canApproversRead();\n\t\t\t\tif (canApproversRead){\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (gs.getProperty('scm.ds.whitelist_url_enable', \"false\") == 'true'){\n\t\t\t\t// if using the specific widget in portal, do not apply data segregation (\n\t\t\t\tif (gs.isInteractive()){\n\t\t\t\t\tvar currentURL = gs.action.getGlideURI().toString(); // Get current URL\n\t\t\t\t\tvar whiteListeURL = gs.getProperty('scm.ds.whitelist_url', ''); // Get whitelisted URL // \n\n\t\t\t\t\tif (JSUtil.notNil(whiteListeURL)){\n\t\t\t\t\t\t// check all whitelisted url against current url to see if it march\n\t\t\t\t\t\tvar whiteListURLArr = whiteListeURL.split(\",\");\n\n\t\t\t\t\t\tvar isWhiteListedURL = whiteListURLArr.some(function(url){\n\t\t\t\t\t\t\tif (currentURL.indexOf(url) > -1){\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},this);\n\n\t\t\t\t\t\t// if whitelisted url matched, skip data segregation\n\t\t\t\t\t\tif (isWhiteListedURL){\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// in all other cases, run the BR\n\t\t\treturn true;\n\t\t} catch (exception) {\n\t\t\tgs.error (\"Error in scmDataSegregationUtils - triggerDataSegregationFilter: \" + JSON.stringify(exception));\n\t\t}\n\t},\n\n\n\t/**\n\t\t@name setFilter\n\t\t@description Get the filter for filtering the task with the Data Segregation\n\t\t@param {GlideRecord(task)} [taskGr] - Task GlideRecord\n\t\t@param {String} [userId] - User GlideRecord\n\t\t@returns {String}  Filter string (encoded query)\n\t*/\n\tsetFilter : function (taskGr, userId){\n\t\ttry{ \n\t\t\t// save task query before building the filter (for info/debug purpose)\n\t\t\tvar taskBeforeQuery  = taskGr.getEncodedQuery();\n\t\t\tvar beforeQueryOperator = (JSUtil.nil(taskBeforeQuery)? \"\": \"^\");\n\n\t\t\t// variable that holds the complete query string\n\t\t\tvar queryString = \"\";\n\n\t\t\t// temp array to build the fitlers\n\t\t\tvar filterElements = [];\n\n\t\t\t// to store the name of all the data fields present in the configurations\n\t\t\tvar dataFields = [];\n\n\t\t\t// get and process all the configs\n\t\t\tthis.dsdcArr.forEach(function(dsdc){ \n\t\t\t\t// add values and data field to filter elements\n\t\t\t\tfilterElements.push (\n\t\t\t\t\t{\n\t\t\t\t\t\tds_data_field : dsdc.ds_data_field,\n\t\t\t\t\t\tds_values: this.getUserRelatedValues(userId, dsdc.ds_name )\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\t// store the data field name\n\t\t\t\tdataFields.push(dsdc.ds_data_field);\n\t\t\t}, this);\n\n\n\t\t\t// if enabled, allow to see record with all data fields empty\n\t\t\tif (gs.getProperty('scm.ds.show_records_with_empty_data_fields', \"true\") == \"true\"){\n\t\t\t\tvar showRecEmptyDataFieldsArr = [];\n\t\t\t\tdataFields.forEach(function(dataField){ \n\t\t\t\t\tshowRecEmptyDataFieldsArr.push(dataField + \"ISEMPTY\");\n\t\t\t\t},this);\n\t\t\t\tif (JSUtil.notNil(showRecEmptyDataFieldsArr)){\n\t\t\t\t\tqueryString += (queryString == \"\" ? \"\": \"^NQ\" ) +  showRecEmptyDataFieldsArr.join(\"^\")  + beforeQueryOperator + taskBeforeQuery;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// build the filter from the filter elements gathered\n\t\t\tvar queryFilterArr= [];\n\n\t\t\tfilterElements.forEach(function(element){\n\t\t\t\tvar valuesArr = element.ds_values;\n\t\t\t\tvaluesArr.forEach(function(val){\n\t\t\t\t\tqueryFilterArr.push(element.ds_data_field+ \"=\" + val);\n\t\t\t\t}, this);\n\t\t\t}, this);\n\n\t\t\tif (JSUtil.notNil(queryFilterArr)){\n\t\t\t\tqueryString += (queryString == \"\" ? \"\": \"^NQ\" ) +  queryFilterArr.join(\"^OR\") + beforeQueryOperator + taskBeforeQuery;\n\t\t\t}\n\n\t\t\t// add filter for the user fields, like watch list, etc.\n\t\t\tif (gs.getProperty('scm.ds.add_query_on_user_fields', \"true\") == \"true\"){\n\t\t\t\t// get the list of user fields for the record class\n\t\t\t\tvar userFieldsArr = this.getUserFields(taskGr);\n\n\t\t\t\t// build the fitlers\n\t\t\t\tvar userFilterArr = [];\n\n\t\t\t\tuserFieldsArr.forEach(function(fieldName){\n\t\t\t\t\tif (taskGr.isValidField(fieldName)){\n\t\t\t\t\t\tuserFilterArr.push(fieldName+ \"LIKE\" + gs.getUserID());\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// add filter to the query string\n\t\t\t\tif (JSUtil.notNil(userFilterArr)){\n\t\t\t\t\tqueryString += (queryString == \"\" ? \"\": \"^NQ\" )  + userFilterArr.join(\"^OR\") +  beforeQueryOperator + taskBeforeQuery;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// add query to task\n\n\t\t\ttaskGr.addEncodedQuery(queryString);\n\t\t\tvar taskAfterQuery = taskGr.getEncodedQuery();\n\n\t\t\t// show message, fs any\n\t\t\tif (gs.getProperty('scm.ds.showFilterQuery', \"false\") == \"true\") {\n\t\t\t\tif (gs.hasRole('admin') || GlideImpersonate().isImpersonating() || this.isTestUser()){\n\t\t\t\t\tvar msg = [];\n\t\t\t\t\tmsg.push(\"user=\" + gs.getUserDisplayName() + \"(\"+ gs.getUserID()+ \")\");\n\t\t\t\t\tmsg.push(\"Before=\" + taskBeforeQuery);\n\t\t\t\t\tmsg.push(\"After =\" + taskAfterQuery);\n\t\t\t\t\tmsg.push(\"Query =\" + queryString);\n\t\t\t\t\tgs.info(\"DS info:\\n\" + msg.join(\"\\n\"));\n\t\t\t\t}\n\t\t\t}\n\n\t\t} catch (exception) {\n\t\t\tgs.error (\"Error in scmDataSegregationUtils - setFilter: \" + JSON.stringify(exception));\n\t\t}\n\t},\n\t/**\n\t\t@name getUserFields\n\t\t@description  Get the name of the fields that should contains the user sys_id using the Data Segregation Data Config (DSDC). Also lookup forthe config for the parent's class (incident would have the field from the incident itself and the one from the task, etc…)\n\t\t@example for fields like watch_list, etc...\n\t\t@param {GlideRecord(task)} [taskGr] - Task GlideRecord\n\t\t@returns {Array} List of all the fields related to the users\n\t*/\n\tgetUserFields : function (taskGr){\n\t\ttry{\n\n\t\t\t// get the table hierachy\n\t\t\tvar tableHierachyArr = j2js(new TableUtils(taskGr.getRecordClassName()).getHierarchy());\n\n\t\t\t// to store the results (user fields array)\n\t\t\tvar userFieldsArr = [];\n\n\t\t\t// process all relevant configs\n\t\t\ttableHierachyArr.forEach(function (tableName){\n\t\t\t\tif (this.dsUserField.hasOwnProperty(tableName)){\n\t\t\t\t\t// get the related fields from config\n\t\t\t\t\tvar currentUserFieldsArr = this.dsUserField[tableName];\n\n\t\t\t\t\t// concatenate to the main array\n\t\t\t\t\tuserFieldsArr = this.ArrayUtil.concat(userFieldsArr, currentUserFieldsArr);\n\t\t\t\t}\n\t\t\t}, this);\n\n\t\t\treturn userFieldsArr;\n\n\t\t} catch (exception) {\n\t\t\tgs.error (\"Error in scmDataSegregationUtils - getUserFields: \" + JSON.stringify(exception));\n\t\t}\n\t},\n\t/**\n\t @name findInArrayOfObject\n\t @description find all objects in an array by one of the attribute value. Necessary because Array.find is currently not supported\n\t @param {Array} [arrayOfObject] - Array of object\n\t @param {String} [fieldName] - Field name in the object\n\t @param {String} [fieldValue] - Value in the field\n\t @returns {Object} return an Array of matching object\n\t */\n\tfindInArrayOfObject : function (arrayOfObject, fieldName, fieldValue){\n\t\ttry{ \n\t\t\tif (global.JSUtil.nil(arrayOfObject)){\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tvar matchingArr = [];\n\t\t\tarrayOfObject.some(function (element){\n\t\t\t\tif (element[fieldName] == fieldValue){\n\t\t\t\t\tmatchingArr.push(element);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn matchingArr;\n\t\t} catch (exception) {\n\t\t\tgs.error (\"Error in script include 'VDGSyncTools' - findInArrayOfObject: \" + JSON.stringify(exception));\n\t\t}\n\t},\n\t/**\n\t\t@name getCachedVariable\n\t\t@description get the variable from the cache and check it is not expired\n\t\t@param {String} [variableName] - Name of the variable\n\t\t@param {integer} [ttl=60000] - Time to live in ms. To check how long is the cache valid. Default is 10 minutes\n\t\t@returns {String} Value cached or undefined if not found or expired\n\t*/\n\tgetCachedVariable : function (variableName, ttl){\n\t\ttry{\n\t\t\t// check if cache should be ignored\n\t\t\tif (this.noCache){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// default ttl\n\t\t\tttl = ttl || 600000;\n\n\t\t\t// build variable names\n\t\t\tvar variableNameTime = variableName + \".time\";\n\t\t\tvar variableNameData = variableName + \".data\";\n\n\t\t\t// get variables values\n\t\t\tvar storedTime =  gs.getSession().getClientData(variableNameTime);\n\n\t\t\t// if nothing stored, return\n\t\t\tif (global.JSUtil.nil(storedTime)){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// get current time\n\t\t\tvar nowTime = parseInt(new Date().getTime());\n\n\t\t\t// calculate time difference between cached value and ttl \n\t\t\tvar timeDiff = nowTime - parseInt(storedTime);\n\n\t\t\t// if cache expired, return\n\t\t\tif (timeDiff > ttl){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// get stored data and return it\n\t\t\tvar storedData = gs.getSession().getClientData(variableNameData);\n\t\t\treturn storedData;\n\n\t\t} catch (exception) {\n\t\t\tgs.error (\"Error in scmDataSegregationUtils - getCachedVariable: \" + JSON.stringify(exception));\n\t\t}\n\t},\n\t/**\n\t\t@name setCachedVariable\n\t\t@description store variable in cache\n\t\t@param {String} [variableName] - Name of the variable\n\t\t@param {String} [variableData] - Data to store\n\t*/\n\tsetCachedVariable : function (variableName, variableData){\n\t\ttry{\n\t\t\t// build variable names\n\t\t\tvar variableNameTime = variableName + \".time\";\n\t\t\tvar variableNameData = variableName + \".data\";\n\n\t\t\t// get current time\n\t\t\tvar nowTime = new Date().getTime();\n\n\t\t\t// set data in cache\n\t\t\tgs.getSession().putClientData(variableNameData, variableData);\n\t\t\tgs.getSession().putClientData(variableNameTime, nowTime);\n\n\t\t} catch (exception) {\n\t\t\tgs.error (\"Error in scmDataSegregationUtils - scmDataSegregationUtils: \" + JSON.stringify(exception));\n\t\t}\n\t},\n\t\n\ttype: 'scmDataSegregationUtils'\n};\n\"\"\"\nExplain this Script Include like I'm five years old in the form of a list.\n1.","action":"explain","response":null},
{"cuid":"cld2u30cl004xpq24ylgpjxmh","createdAt":"2023-01-19 14:31:17.638","updatedAt":"2023-01-19 14:31:22.602","userCuid":"cld9unimy005eucgu1jzgbnis","prompt":"function getUserIDForSMS(kardex) {\n    var grSysUser = new GlideRecord('sys_user');\n    grSysUser.addEncodedQuery(\"department.u_kardexIN\" + kardex);\n    grSysUser.query();\n    var txt = \"\";\n    while (grSysUser.next()) {\n        txt += grSysUser.user_name + \",\";\n    }\n    return txt;\n}\n\"\"\"\nExplain this Script Include like I'm five years old in the form of a list.\n1.","action":"explain","response":" The 'getUserIDForSMS' function takes in a 'kardex' parameter.\n2. A new GlideRecord is created for the 'sys_user' table.\n3. A query is run to find all users who have a department with a 'u_kardex' value that matches the 'kardex' parameter.\n4. A list of all the matching user names is created and returned."},
{"cuid":"cld2w86xp0051pq24yi4gboo1","createdAt":"2023-01-19 15:31:18.686","updatedAt":"2023-01-19 15:31:19.822","userCuid":"cld9unimy0057ucgu29vof2et","prompt":"\n// Prompt: Create a script that sets the assignment group to the Manager's group if the priority is 1.\n(function executeRule(current, previous) {\n    if (current.getValue('priority', '1')) {\n        current.setValue('group', current.manager.group + '');\n    }\n})(current, previous);\n// Prompt: when status changes, if closed, set active to false\n(function executeRule(current, previous) {\n    // condition current.status.changes()\n    if (current.status == 'closed_created' || current.status == 'closed_duplicate' || current.status == 'closed_invalid') {\n        current.active = false;\n    } else {\n        current.active = true;\n    }\n})(current, previous);\n// Prompt: when change request changes, set parent to change request\n(function executeRule(current, previous) {\n    // condition current.change_request.changes()\n    current.parent = current.change_request;\n})(current, previous);\n// Prompt: do not allow changes to others delegates\n(function executeRule(current, previous) {\n    // condition current.user != gs.getUserID() && !gs.hasRole('admin')\n    gs.addInfoMessage(gs.getMessage(\"Cannot assign or modify other users' Delegates\"));\n    current.setAbortAction(true);\n})(current, previous);\n// Prompt: get the bot icon for slack, and set it from the response\n(function executeRule(current, previous) {\n    try {\n        var req = new sn_ws.RESTMessageV2();\n        req.setEndpoint('https://slack.com/api/team.info');\n        req.setHttpMethod('get');\n        var e = new GlideEncryptionUtil();\n        var authToken = e.getClearPassword2('token_verification', 'token', current.provider_auth.outbound_message_creation);\n        if (JSUtil.notNil(authToken))\n            req.setRequestHeader('Authorization', 'Bearer ' + authToken);\n        var resp = req.execute();\n        var team_icon = JSON.parse(resp.getBody()).team.icon.image_88;\n        current.setValue(\"icon\", team_icon);\n    } catch (ex) {\n        gs.error('Error getting slack team info: ' + ex.getMessage());\n    }\n})(current, previous);\n// Prompt: when the start and end dates change, only allow dates where the start is before the end\n(function executeRule(current, previous) {\n    // condition current.start_date.changes() || current.end_date.changes()\n    if (!current.start_date.nil() && !current.end_date.nil() && current.start_date > current.end_date) {\n        current.setAbortAction(true);\n        gs.addErrorMessage(gs.getMessage(\"The start date cannot be after the end date\"));\n    }\n})(current, previous);\n// Prompt: when the date changes is empty, format it in the star trek format (YYYY.ElapsedDays) and set it in the star date field\n(function executeRule(current, previous) {\n    // condition current.date.changes()\n    if (!current.date.nil()) {\n        var date = new GlideDateTime(current.date);\n        var year = date.getYear();\n        var elapsedDays = date.getElapsed(date.getNumericValue());\n        current.star_date = year + '.' + elapsedDays;\n    }\n})(current, previous);\n// Prompt: \n","action":"complete","response":"(function executeRule(current, previous) {\n    // condition current.event.changes()\n    if (current.event.nil()) {\n        current.event = 'Unknown';\n    }\n})(current, previous);\n"},
{"cuid":"cld3ezm1l0078pq246pqux7zv","createdAt":"2023-01-20 00:16:31.065","updatedAt":"2023-01-20 00:16:38.467","userCuid":"cld9unimw000wucguenaahfdy","prompt":"function bell_createHardware(current, previous){\n\t\n\t//object in resourceCharacteristic Array on update of device name \n\t/*\n\t{\n\t\"name\": \"AlternateDeviceName\",\n    \"valueType\": \"string'\",\n    \"value\": \"MC-400LP6\",\n    \"type\": \"StringCharacteristic\"\n\t}\n\t*/\n\t\n    // id - snow sys_id (on creation and patch include this fields)\n    // externalId - dv device name (possibly customer device name)\n\t// name - same value as external ID\n\t/*\n\tresourceStatus='standby' – This is to mark the equipment status to 'NOT READY' in Maximo\n\t\n\tState='enable'  ---  Maximo status = OPERATING\n\toperationalState='disable' --- Maximo status = 'DECOMMISSIONED'\n*/\n\t//startOperatingDate - if available, operating date, otherwise current timestamp, in both update and create\n\t//serialNumber - obvious\n\t//versionNumber - firmware version\n\t//resource characteristic asset tag - send dv asset tag... sys_id? name? MG\n\t//resource characteristic - Class Structure ID - use mapping provided MG\n\t//resource characteristic - special long description - mapped to notes tab field in CI DB - can we put HTML in this field?\n\t//resource characteristic - model description - manufacturer model in Snow\n\t// resource relationship object:\n\t/*\n\t{\n            \"name\": \"AutomatedInstall\",\n            \"valueType\": \"string\",\n            \"value\": \"N\"\n    }\n\t*/\n\t// N if device is operating\n\t// Y if device is starting out not operating or decommed\n\t// place - device location address\n\t\n\t/*\n\t \"relatedParty\": [\n        {\n        \"@type\": \"BellRelatedPartyWithValue\",\n        \"id\": \"1007602096\",\n        \"role\": \"Customer\",\n        \"@referredType\": \"Organization\"\n        },\n        {\n        \"@type\": \"BellRelatedPartyWithValue\",\n        \"role\": \"Manufacturer\",\n        \"name\": \"MOTOROLA\",\n        \"@referredType\": \"Organization\"\n        },\n        {\n        \"@type\": \"BellRelatedPartyWithValue\",\n        \"role\": \"Manager\",\n        \"name\": \"Datavalet\",\n        \"@referredType\": \"Organization\"\n        }\n    ]\n\t};\n\t*/\n\t//role Customer - unchanged - refers to McDonalds\n\t//role Manufacturer - DV manufacturer name\n\t// role Manager Datavalet\n\t\n\t\tvar MAXIMO_CISTATUS_DICTIONARY = [\n\t\t{\"ciStatus\": '112', \"operationalState\": 'disable', \"resourceStatus\": 'unknown'}, //Decommissioned\n\t\t{\"ciStatus\": '7', \"operationalState\": 'disable', \"resourceStatus\": 'unknown'}, //Retired\n\t\t{\"ciStatus\": '8', \"operationalState\": 'disable', \"resourceStatus\": 'unknown'}, //Stolen\n\t\t{\"ciStatus\": '105', \"operationalState\": 'disable', \"resourceStatus\": 'unknown'}, //Lost\n\t\t{\"ciStatus\": '106', \"operationalState\": 'disable', \"resourceStatus\": 'unknown'}, //Missing\n\t\t{\"ciStatus\": '111', \"operationalState\": 'disable', \"resourceStatus\": 'standby'}, //Testing\n\t\t{\"ciStatus\": '100', \"operationalState\": 'disable', \"resourceStatus\": 'standby'}, //Absent\n\t\t{\"ciStatus\": '2', \"operationalState\": 'disable', \"resourceStatus\": 'standby'}, //On Order\n\t\t{\"ciStatus\": '4', \"operationalState\": 'disable', \"resourceStatus\": 'standby'}, //Pending Install\n\t\t{\"ciStatus\": '5', \"operationalState\": 'disable', \"resourceStatus\": 'standby'}, //Pending Repair\n\t\t{\"ciStatus\": '3', \"operationalState\": 'disable', \"resourceStatus\": 'standby'}, //Maintenance\n\t\t{\"ciStatus\": '107', \"operationalState\": 'disable', \"resourceStatus\": 'standby'}, //Not Installed\n\t\t{\"ciStatus\": '109', \"operationalState\": 'disable', \"resourceStatus\": 'standby'}, //Shipped\n\t\t{\"ciStatus\": '101', \"operationalState\": 'enable', \"resourceStatus\": 'available'}, //Active\n\t\t{\"ciStatus\": '102', \"operationalState\": 'enable', \"resourceStatus\": 'available'}, //GAM\n\t\t{\"ciStatus\": '103', \"operationalState\": 'enable', \"resourceStatus\": 'available'}, //GAM + IM\n\t\t{\"ciStatus\": '104', \"operationalState\": 'enable', \"resourceStatus\": 'available'}, //IM\n\t\t{\"ciStatus\": '108', \"operationalState\": 'enable', \"resourceStatus\": 'available'}, //ONMS\n\t\t{\"ciStatus\": '1', \"operationalState\": 'enable', \"resourceStatus\": 'reserved'}, //Installed\n\t\t{\"ciStatus\": '6', \"operationalState\": 'disable', \"resourceStatus\": 'reserved'}, //In Stock\n\t\t{\"ciStatus\": '110', \"operationalState\": 'disable', \"resourceStatus\": 'reserved'}, //Spared\n\t\t//add new codes as required \n\t];\n\t\n\n\t\n\tvar operationId = gs.generateGUID();\n\tcurrent.u_mx_transaction_id.setValue(operationId);\n\t//current.update();\n\tvar fullCivicAddress = current.location.street.getValue();\n\tvar streetNr = fullCivicAddress.replace(/(^\\d+)(.+$)/i,'$1');\n\tvar streetName = fullCivicAddress.replace(streetNr, '').trim();\n\tvar mycity = current.location.city.getValue();\n\tvar mystateOrProvince = current.location.state.getValue();\n\tvar mycountry = current.location.country.getValue();\n\tvar mypostcode = current.location.zip.getValue();\n\tvar mx_golden_key = current.company.u_mx_golden_key.getValue();\n\t//var mx_service_agreement = current.company.u_mx_service_agreement.getValue();// This was previously associated to company table; new requirement is by device type\n\tvar mx_service_agreement = current.getDisplayValue('u_mx_service_agreement');\n\tvar mx_service_level = current.getDisplayValue('u_mx_service_level');\n\tvar mx_criticality = current.getDisplayValue('u_mx_criticality');\n\tvar company = current.getDisplayValue('company');\n\tvar device_type = current.getValue('device_type');\n\tvar typeRecord = new GlideRecord('sys_choice');\n\tvar classStructureId = '';\n\ttypeRecord.addQuery('element', '=', 'device_type');\n\ttypeRecord.addQuery('value', '=', device_type);\n\ttypeRecord.query();\n\tif (typeRecord.next()){\n\t\tclassStructureId = typeRecord.getValue('u_bell_classstructureid');\n\t}\n\t\n\tvar createCiPayload = {\n\t\"operationId\": operationId,\n    \"description\": current.getDisplayValue('device_type'),\n    \"id\": current.getUniqueValue(),\n    \"externalId\": current.getDisplayValue('name'),\n    \"name\": current.getDisplayValue('name'),\n    \"startOperatingDate\": new Date().toISOString(),\n    \"serialNumber\": current.getDisplayValue('serial_number'),\n    \"sourceSystemId\": \"Partner\",\n    \"versionNumber\": current.getDisplayValue('firmware_version'),\n    \"resourceCharacteristic\": [\n\t\t{\n\t\t\"name\": \"IPAddress\",\n\t\t\"valueType\": \"string\",\n\t\t\"value\": current.getDisplayValue('ip_address')\n\t\t},\n\t\t{\n\t\t\"name\": \"MACAddress\",\n\t\t\"valueType\": \"string\",\n\t\t\"value\": current.getDisplayValue('mac_address')\n\t\t},\n\t\t{\n\t\t\"name\": \"AssetTag\",\n\t\t\"valueType\": \"string\",\n\t\t\"value\": current.getDisplayValue('asset_tag')\n\t\t},\n\t\t{\n\t\t\"name\": \"ClassStructureID\",\n\t\t\"valueType\": \"string'\",\n\t\t\"value\": classStructureId,\n\t\t\"type\": \"StringCharacteristic\"\n\t\t},\n\t\t{\n\t\t\"name\": \"SpecialLongDescription\",\n\t\t\"valueType\": \"string'\",\n\t\t\"value\": current.getDisplayValue('short_description'),\n\t\t\"type\": \"StringCharacteristic\"\n\t\t},\n\t\t{\n\t\t\"name\": \"ServiceCINum\",\n\t\t\"valueType\": \"string'\",\n\t\t\"value\": mx_service_agreement,\n\t\t\"type\": \"StringCharacteristic\"\n\t\t},\n\t\t{\n\t\t\"name\": \"ModelDescription\",\n\t\t\"valueType\": \"string'\",\n\t\t\"value\": current.getDisplayValue('u_manufacturer_model').toUpperCase(),\n\t\t\"type\": \"StringCharacteristic\"\n\t\t}\n    ],\n    \"resourceRelationship\": [\n        {\n            \"resourceRelationshipCharacteristic\": [\n            {\n            \"name\": \"ServiceLevelType\",\n            \"valueType\": \"string\",\n            \"value\": mx_service_level\n            },\n            {\n            \"name\": \"AutomatedInstall\",\n            \"valueType\": \"string\",\n            \"value\": \"N\"\n            },\n            {\n            \"name\": \"Priority\",\n            \"valueType\": \"string\",\n            \"value\": mx_criticality\n            }\n            ]\n        }\n    ],\n    \"place\": {\n        \"@type\": \"BellGeographicAddress\",\n        \"streetNr\": streetNr,\n        \"streetName\": streetName,\n        \"city\": mycity,\n        \"stateOrProvince\": mystateOrProvince,\n        \"country\": mycountry,\n        \"postcode\": mypostcode\n    },\n    \"relatedParty\": [\n        {\n        \"@type\": \"BellRelatedPartyWithValue\",\n        \"id\": mx_golden_key,\n        \"role\": \"Customer\",\n        \"@referredType\": \"Organization\"\n        },\n        {\n        \"@type\": \"BellRelatedPartyWithValue\",\n        \"role\": \"Manufacturer\",\n        \"name\": current.getDisplayValue('manufacturer').toUpperCase(),\n        \"@referredType\": \"Organization\"\n        },\n        {\n        \"@type\": \"BellRelatedPartyWithValue\",\n        \"role\": \"Manager\",\n        \"name\": \"Datavalet\",\n        \"@referredType\": \"Organization\"\n        }\n    ]\n\t};\n\t\n\t\n\tvar matchStatus = current.getValue('install_status');\n\tvar operationalState = null;\n\tvar resourceStatus = null;\n\tMAXIMO_CISTATUS_DICTIONARY.forEach(function(dict){\n\t\tif(matchStatus == dict.ciStatus){\n\t\t\toperationalState = dict.operationalState;\n\t\t\tresourceStatus = dict.resourceStatus;\n\t\t}\n\t});\n\t\n\tif (operationalState != null && resourceStatus != null){\n\t\tcreateCiPayload.operationalState = operationalState;\n\t\tcreateCiPayload.resourceStatus = resourceStatus;\n\t}\n\t\n\t\n\ttry {\n\t\tvar tokenDecoded = JSON.parse(getBellOAuthToken('scope-dv-inventory'));\n\t\tvar request = new sn_ws.RESTMessageV2(\"Bell B2b Integration\", \"POST Hardware OAuth\"); \n\t\trequest.setRequestBody(JSON.stringify(createCiPayload));\n\t\trequest.setRequestHeader('companyName', company);\n\t\trequest.setRequestHeader('Authorization', 'Bearer '+tokenDecoded.access_token);\n\t\tvar bellTxUuid = gs.generateGUID();\n\t\trequest.setRequestHeader('X-Correlation-Id', bellTxUuid);\n\t\tgs.log(\"Correlation ID: \"+bellTxUuid+\"\\n\"+JSON.stringify(createCiPayload), \"Hardware Post to Bell\");\n\t\tvar response = request.execute();\n\t\tvar responseHeaders = response.getAllHeaders();\n\t\tvar responseCode = response.getStatusCode();\n\t\tvar responseBody = response.getBody();\n\t\tvar headersText = \"HTTP Response Code: \"+responseCode+\"\\n\";\n\t\tresponseHeaders.forEach(function(headr){\n\t\t\theadersText += headr.name+': '+headr.value+\"\\n\";\n\t\t});\n\t\theadersText += responseBody+\"\\n\";\n\t\tgs.log(headersText, \"Hardware Post to Bell Reply\");\n\t} catch (err) {\n\t\tgs.log(err.message,\"Hardware Post to Bell Error\");\n\t}\n}\n\"\"\"\nExplain this Script Include like I'm five years old in the form of a list.\n1.","action":"explain","response":" bell_createHardware() is a function that is called when a device in ServiceNow is created or updated.\n2. The function takes two arguments: the current device, and the previous device.\n3. The function sets up some variables, including an operation ID, a full civic address, and a street number.\n4. The function then creates a payload to be sent to the Bell B2B Integration service. This payload includes information about the device, such as its name, serial number, and IP address.\n5. The function then tries to send the payload to the Bell B2B Integration service. If successful, the function will log the response from the service in the ServiceNow system. If there is an error, the function will log the error message."},
{"cuid":"cld91wa9700eapq249noc3rao","createdAt":"2023-01-23 22:56:37.867","updatedAt":"2023-01-23 22:56:40.671","userCuid":"cld9unimw000wucguenaahfdy","prompt":"Update this code based following this prompt, \"\": 1. onChange is a function that runs on the form.\n2. onChange checks if the dispatch checkbox is checked.\n3. onChange checks if the assignment group field is blank.\n4. onChange sets the assignment group field to the group \"f3e1717c8771f010fc0321f6cebb3533\" if dispatch is checked and the assignment group field is blank.\n// Generated by scribe.monster ```","action":"edit","response":"\n\n\nfunction onChange() {\n  if (document.getElementById('dispatch').checked) {\n    if (document.getElementById('assignment_group').value === '') {\n      document.getElementById('assignment_group').value = 'f3e1717c8771f010fc0321f6cebb3533';\n    }\n  }\n}"},
{"cuid":"cld2yqoeq0054pq249u8gwakf","createdAt":"2023-01-19 16:41:40.37","updatedAt":"2023-01-19 16:41:45.87","userCuid":"cld9unimy004yucgu5fyrapix","prompt":"\n// Prompt: create a ui macro to show data of a variable of catalog item\n","action":"complete","response":"//\n// -----------------------------------------------------------------------------\n\n// -----------------------------------------------------------------------------\n//\n// Description: \n//   Helper function to get the value of a catalog item.\n//\n// Arguments:\n//   pszName: [in] Name of the item to get.\n//   pValue: [out] Pointer to a value struct.\n//\n// Return: TRUE if successful, FALSE otherwise.\n//\n// -----------------------------------------------------------------------------\n\nstatic BOOL GetItemValue(LPCTSTR pszName, VARIANT *pValue)\n{\n    ASSERT(pszName);\n    ASSERT(pValue);\n\n    if ( !pszName || !pValue )\n        return FALSE;\n\n    pValue->vt = VT_NULL;\n\n    BSTR bstrName = SysAllocString(pszName);\n    if ( !bstrName )\n        return FALSE;\n\n    BSTR bstrValue = NULL;\n    if ( !m_pCatalog->GetItemValue(bstrName, &bstrValue) )\n    {\n        SysFreeString(bstrName);\n        return FALSE;\n    }\n\n    SysFreeString(bstrName);\n    if ( !bstrValue )\n        return FALSE;\n\n    VARIANT varTemp;\n    varTemp.vt = VT_BSTR;\n    varTemp.bstrVal = bstrValue;\n    VariantCopy(pValue, &varTemp);\n\n    return TRUE;\n}\n\n// -----------------------------------------------------------------------------\n//\n// Description: \n//   Displays a dialog that displays the data of a catalog item.\n//\n// -----------------------------------------------------------------------------\n\nstatic void ShowItemData()\n{\n    VARIANT var;\n    TCHAR *pszName = NULL;\n\n    if ( !GetItemValue(m_bstrCiName, &var) )\n        return;\n\n    pszName = GetStringFromVariant(&var);\n    if ( !pszName )\n        return;\n\n    CString strTitle;\n    strTitle.LoadString(IDS_CATALOGITEM_PROPERTIES);\n\n    CString strItemName;\n    strItemName.LoadString(IDS_ITEMNAME);\n\n    CString strItem"},
{"cuid":"cld31jff60057pq2419weph76","createdAt":"2023-01-19 18:00:00.978","updatedAt":"2023-01-19 18:00:05.668","userCuid":"cld9unimw002fucgu0w461qd6","prompt":"function unmatching() {\n    g_form.setMandatory(\"comments\", true);\n    gsftSubmit(null, g_form.getFormElement(), \"unmatching\");\n}\n\nif (typeof window == 'undefined')\n    server();\n\nfunction server() {\n    current.state = 4;\n    current.update();\n    action.setRedirectURL(current);\n}\n\"\"\"\nExplain the above code step-by-step in simple english.","action":"explain","response":"\n\nThe above code is a server-side script that is used to update a record in the ServiceNow database. The script first sets the 'state' field of the current record to 4, which indicates that the record is in an 'unmatched' state. The script then calls the 'update' function to save the changes to the ServiceNow database. Finally, the script redirects the browser to the current record."},
{"cuid":"cld32g3i1005apq24lh48fsxh","createdAt":"2023-01-19 18:25:25.177","updatedAt":"2023-01-19 18:25:28.652","userCuid":"cld9unimy0054ucgu34kqd07f","prompt":"(function executeRule(current, previous /*null when async*/) {\n\n\tvar short_description = \"\";\n    var description = \"\";\n    var order = 0;\n    var assignment_group = \"\";\n\tif(!checkDtask(200) && checkIsOIN()) {\n\t\t\n        short_description = \"Use of a pre-made connector from the OIN catalog\";\n        description = \"An a designated ADAS referrer will accompany you in this step, to be closed as soon as the associated actions are completed\";\n        assignment_group = \"9cbd7b644f871f409864ca1f0310c728\";//GIO-SEC-CDA Project Team\n        createDtask(short_description, description, 200, assignment_group);\n\t\t\n    }\n\t\n\tif(!checkDtask(400) && !checkIsOIN()){\n\t\tshort_description = \"Connexion of the application to Okta & control\";\n\t\tdescription = \"Connexion of the application to Okta & control\";\n\t\tassignment_group = \"9cbd7b644f871f409864ca1f0310c728\";//GIO-SEC-CDA Project Team\n        createDtask(short_description, description, 400, assignment_group);\n\t}\n\t\n// \tif (!checkDtask(600) && !checkApp()) {\n// \t    short_description = \"Create the Business Application\";\n// \t    description = \"Create the Business Application\";\n// \t    assignment_group = current.variables.responsible_support_group; // responsible_support_group\n// \t    createDtask(short_description, description, 600, assignment_group);\n// \t}\n\t\n\t\n\t\n\tfunction createDtask(task_sdescription, task_desc, task_order, task_assi_grp) {\n        var dmn_task = new GlideRecord('u_demand_task');\n        dmn_task.initialize();\n        dmn_task.parent = current.getUniqueValue();\n        dmn_task.u_type = \"Realization\";\n        dmn_task.short_description = task_sdescription;\n        dmn_task.description = task_desc;\n        dmn_task.order = task_order;\n        dmn_task.assignment_group = task_assi_grp;\n        dmn_task.insert();\n    }\n\n    function checkDtask(norder) {\n        var dmn_gr = new GlideRecord('u_demand_task');\n        dmn_gr.addQuery(\"u_type\", \"Realization\");\n        dmn_gr.addQuery(\"parent\", current.getUniqueValue());\n        dmn_gr.addQuery(\"order\", norder);\n        dmn_gr.query();\n        if (dmn_gr.next()) {\n            return true;\n        }\n    }\n\t\n\tfunction checkIsOIN(){\n\t\tvar is_oin = false;\n\t\t\tif(current.variables.is_oin == \"yes\"){\n\t\t\t\tis_oin = true;\n\t\t\t}\n\t\treturn is_oin;\n\t}\n\t\t\n\tfunction checkApp(){\n\t\tvar is_app = false;\n\t\t\n\t\t\tif(current.variables.does_your_application_exist_on_cmdb_business_application_tab == \"Yes\"){\n\t\t\t\tis_app = true;\n\t\t\t}\n\t\t\t\n\t\treturn is_app;\n\t}\n\n})(current, previous);\n\"\"\"\ncurrent is tied to the sys_script record.\nExplain it like I'm five years old in the form of a list.\n1.","action":"explain","response":" Check if the current record has a task order of 200.\n2. If the current record does not have a task order of 200 and does not have a task order of 400, create a task with order 400."},
{"cuid":"cld33sq8q005cpq245joph9fk","createdAt":"2023-01-19 19:03:14.139","updatedAt":"2023-01-19 19:03:27.564","userCuid":"cld9unimx004cucgudurz9li3","prompt":"\n\"\"\"\ncurrent is tied to the sys_script record.\nExplain it like I'm five years old in the form of a list.\n1.","action":"explain","response":"\n\n\n\n\"\"\"\n\n#print(current.db)\n#db = DAL('sqlite://test.sqlite')\ndb = DAL('mysql://root:@127.0.0.1/web2py')\n\n#if request.function == 'index': redirect(URL('default', 'index'))\n\nresponse.generic_patterns = ['*'] if request.is_local else []\n\nfrom gluon.tools import Auth, Crud, Service, PluginManager, prettydate\nauth = Auth(db)\ncrud, service, plugins = Crud(db), Service(), PluginManager()\n\n# You can use a scalar instead of a dict for the initial vars if you wish.\ndb.define_table('sys_script',\n                Field('sys_script_name', 'string', length=100, notnull=True, unique=True),\n                Field('sys_script_description', 'text', notnull=True),\n                Field('sys_script_archived', 'integer', default=0),\n                format='%(sys_script_name)s'\n                )\n\ndb.define_table('sys_script_line',\n                Field('sys_script_line_name', 'string', length=100, notnull=True, unique=True),\n                Field('sys_script_line_description', 'text', notnull=True),\n                Field('sys_script_line_archived', 'integer', default=0),\n                Field('sys_script_line_code', 'text', notnull=True),\n                format='%(sys_script_line_name)s'\n                )\n\ndb.define_table('sys_script_line_parameter',\n                Field('sys_script_line_parameter_name', 'string', length=100, notnull=True, unique=True),\n                Field('sys_script_line_parameter_description', 'text', notnull=True),\n                Field('sys_script_line_parameter_archived', 'integer', default=0),\n                format='%(sys_script_line_parameter_name)s'\n                )\n\ndb.define_table('sys_script_"},
{"cuid":"cld33tg2j005gpq2474z16kq8","createdAt":"2023-01-19 19:03:47.612","updatedAt":"2023-01-19 19:03:48.356","userCuid":"cld9unimx004cucgudurz9li3","prompt":"Update this code based following this prompt, \"\": 1. \"\"\"\n\n#print(current.db)\n#db = DAL('sqlite://test.sqlite')\ndb = DAL('mysql://root:@127.0.0.1/web2py')\n\n#if request.function == 'index': redirect(URL('default', 'index'))\n\nresponse.generic_patterns = ['*'] if request.is_local else []\n\nfrom gluon.tools import Auth, Crud, Service, PluginManager, prettydate\nauth = Auth(db)\ncrud, service, plugins = Crud(db), Service(), PluginManager()\n\n# You can use a scalar instead of a dict for the initial vars if you wish.\ndb.define_table('sys_script',\n                Field('sys_script_name', 'string', length=100, notnull=True, unique=True),\n                Field('sys_script_description', 'text', notnull=True),\n                Field('sys_script_archived', 'integer', default=0),\n                format='%(sys_script_name)s'\n                )\n\ndb.define_table('sys_script_line',\n                Field('sys_script_line_name', 'string', length=100, notnull=True, unique=True),\n                Field('sys_script_line_description', 'text', notnull=True),\n                Field('sys_script_line_archived', 'integer', default=0),\n                Field('sys_script_line_code', 'text', notnull=True),\n                format='%(sys_script_line_name)s'\n                )\n\ndb.define_table('sys_script_line_parameter',\n                Field('sys_script_line_parameter_name', 'string', length=100, notnull=True, unique=True),\n                Field('sys_script_line_parameter_description', 'text', notnull=True),\n                Field('sys_script_line_parameter_archived', 'integer', default=0),\n                format='%(sys_script_line_parameter_name)s'\n                )\n\ndb.define_table('sys_script_\n// Generated by scribe.monster ```","action":"edit","response":""},
{"cuid":"cld34081v005upq24uz8ofzty","createdAt":"2023-01-19 19:09:03.812","updatedAt":"2023-01-19 19:09:06.566","userCuid":"cld9unimx004cucgudurz9li3","prompt":"\n// Prompt: Create a script that sets the assignment group to the Manager's group if the priority is 1.\n(function executeRule(current, previous) {\n    if (current.getValue('priority', '1')) {\n        current.setValue('group', current.manager.group + '');\n    }\n})(current, previous);\n// Prompt: when status changes, if closed, set active to false\n(function executeRule(current, previous) {\n    // condition current.status.changes()\n    if (current.status == 'closed_created' || current.status == 'closed_duplicate' || current.status == 'closed_invalid') {\n        current.active = false;\n    } else {\n        current.active = true;\n    }\n})(current, previous);\n// Prompt: when change request changes, set parent to change request\n(function executeRule(current, previous) {\n    // condition current.change_request.changes()\n    current.parent = current.change_request;\n})(current, previous);\n// Prompt: do not allow changes to others delegates\n(function executeRule(current, previous) {\n    // condition current.user != gs.getUserID() && !gs.hasRole('admin')\n    gs.addInfoMessage(gs.getMessage(\"Cannot assign or modify other users' Delegates\"));\n    current.setAbortAction(true);\n})(current, previous);\n// Prompt: get the bot icon for slack, and set it from the response\n(function executeRule(current, previous) {\n    try {\n        var req = new sn_ws.RESTMessageV2();\n        req.setEndpoint('https://slack.com/api/team.info');\n        req.setHttpMethod('get');\n        var e = new GlideEncryptionUtil();\n        var authToken = e.getClearPassword2('token_verification', 'token', current.provider_auth.outbound_message_creation);\n        if (JSUtil.notNil(authToken))\n            req.setRequestHeader('Authorization', 'Bearer ' + authToken);\n        var resp = req.execute();\n        var team_icon = JSON.parse(resp.getBody()).team.icon.image_88;\n        current.setValue(\"icon\", team_icon);\n    } catch (ex) {\n        gs.error('Error getting slack team info: ' + ex.getMessage());\n    }\n})(current, previous);\n// Prompt: when the start and end dates change, only allow dates where the start is before the end\n(function executeRule(current, previous) {\n    // condition current.start_date.changes() || current.end_date.changes()\n    if (!current.start_date.nil() && !current.end_date.nil() && current.start_date > current.end_date) {\n        current.setAbortAction(true);\n        gs.addErrorMessage(gs.getMessage(\"The start date cannot be after the end date\"));\n    }\n})(current, previous);\n// Prompt: when the date changes is empty, format it in the star trek format (YYYY.ElapsedDays) and set it in the star date field\n(function executeRule(current, previous) {\n    // condition current.date.changes()\n    if (!current.date.nil()) {\n        var date = new GlideDateTime(current.date);\n        var year = date.getYear();\n        var elapsedDays = date.getElapsed(date.getNumericValue());\n        current.star_date = year + '.' + elapsedDays;\n    }\n})(current, previous);\n// Prompt: write a script if assigned group is IT make assigned to admin\n","action":"complete","response":"(function executeRule(current, previous) {\n    // condition current.group.changes() && current.group.name == 'IT'\n    current.assigned_to = current.group.admin + '';\n})(current, previous);\n"},
{"cuid":"cld349zkn005wpq2457tg5d23","createdAt":"2023-01-19 19:16:39.384","updatedAt":"2023-01-19 19:16:41.607","userCuid":"cld9unimx004cucgudurz9li3","prompt":"\n// Prompt: When the caller is set to jace, set the group to cab\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 'jace') { // when the new value is jace\n        g_form.setValue('assignment_group', 'cab'); // set the group to cab, replace w/sysid\n    }\n}\n// Prompt: If the book changes to read, set the date to today.\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n  if (isLoading || newValue === '') { return; }\n  if (newValue == 'read') { // when the new value is read\n    var now = new Date(); // make a variable for today\n    var dateInUserFormat = getDateTimeFromFormat(now, g_user_date_time_format); // get it in the users format\n    g_form.setValue('date', dateInUserFormat); // set the date to today\n  }\n}\n// Prompt: show me the groups the user picked is a member of\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    var userAjax = new GlideAjax('global.UserAjax'); // call the UserAjax Script Include\n    userAjax.addParam('sysparm_name', 'getGroups'); // call the getGroups function\n    userAjax.addParam('sysparm_obj', JSON.stringify({\"userId\": newValue})); // pass in the new value for the user\n    userAjax.getXML(function(response){\n        var responseDocument = response.responseXML.document.Element.getAttribute('answer'); //get the answer\n        var serverObj = JSON.parse(answer); // make it a json object\n        var groups = serverObj.groups.join(', '); // make it a string with commas\n        g_form.addInfoMessage(groupString); // show it on the form\n    })\n}\n// Prompt: when food quantity becomes zero, require reason\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 0) { // when the new value is zero\n        g_form.setMandatory('reason', true);\n    }\n}\n// Prompt: when priority changes make both work notes and comments mandatory \n    ","action":"complete","response":"function onChange(control, oldValue, newValue, isLoading, isTemplate) {\n        if (isLoading || newValue === '') { return; }\n        g_form.setMandatory('work_notes', true);\n        g_form.setMandatory('comments', true);\n    }\n"},
{"cuid":"cld34bmtk005zpq24si6l109e","createdAt":"2023-01-19 19:17:56.168","updatedAt":"2023-01-19 19:17:57.936","userCuid":"cld9unimx004cucgudurz9li3","prompt":"\n// Prompt: When the caller is set to jace, set the group to cab\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 'jace') { // when the new value is jace\n        g_form.setValue('assignment_group', 'cab'); // set the group to cab, replace w/sysid\n    }\n}\n// Prompt: If the book changes to read, set the date to today.\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n  if (isLoading || newValue === '') { return; }\n  if (newValue == 'read') { // when the new value is read\n    var now = new Date(); // make a variable for today\n    var dateInUserFormat = getDateTimeFromFormat(now, g_user_date_time_format); // get it in the users format\n    g_form.setValue('date', dateInUserFormat); // set the date to today\n  }\n}\n// Prompt: show me the groups the user picked is a member of\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    var userAjax = new GlideAjax('global.UserAjax'); // call the UserAjax Script Include\n    userAjax.addParam('sysparm_name', 'getGroups'); // call the getGroups function\n    userAjax.addParam('sysparm_obj', JSON.stringify({\"userId\": newValue})); // pass in the new value for the user\n    userAjax.getXML(function(response){\n        var responseDocument = response.responseXML.document.Element.getAttribute('answer'); //get the answer\n        var serverObj = JSON.parse(answer); // make it a json object\n        var groups = serverObj.groups.join(', '); // make it a string with commas\n        g_form.addInfoMessage(groupString); // show it on the form\n    })\n}\n// Prompt: when food quantity becomes zero, require reason\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 0) { // when the new value is zero\n        g_form.setMandatory('reason', true);\n    }\n}\n// Prompt: if department is IT , when priority changes make both work notes and comments mandatory \n    ","action":"complete","response":"function onChange(control, oldValue, newValue, isLoading, isTemplate) {\n        if (isLoading || newValue === '') { return; }\n        if (newValue == 'IT') { // when the new value is IT\n            g_form.setMandatory('work_notes', true); // set the work_notes field to mandatory\n            g_form.setMandatory('comments', true); // set the comments field to mandatory\n        }\n    }\n    "},
{"cuid":"cld37bfoo0064pq24wr6akixf","createdAt":"2023-01-19 20:41:45.769","updatedAt":"2023-01-19 20:41:46.908","userCuid":"cld9unimw001yucgucbtj659g","prompt":"1+1.1?","action":"ask","response":"\n\n2.2"},
{"cuid":"cld37uoa00068pq24gmktfgsk","createdAt":"2023-01-19 20:56:43.368","updatedAt":"2023-01-19 20:56:44.865","userCuid":"cld9unimy004eucguhan7gaoe","prompt":"\n// Prompt: Class pattern\nvar ClassPattern = Class.create();\n\nClassPattern.prototype = {\n   initialize : function() {\n   },\n\n   myFunction : function() {\n      //Put function code here\n   },\n\n   _privateFunction: function() {\n       //Put private function code here\n   },\n\n   type : 'ClassPattern'\n};\n// Prompt: Function Pattern\n// FunctionPattern\nvar doSomething = function() {\n  // Put function code here\n}\n// Prompt: Namespace Pattern\nvar NamespacePattern = {\n    doSomething: function() {\n        // Put function code here\n    },\n\n    doSomethingElse: function() {\n        // Put other function code here\n    }\n};\n// Prompt: Module Pattern\nvar ModulePattern = (function() {\n    var privateVariable;\n\n    function myFunction() {\n        // Put function code here\n    }\n\n    function privateFunction() {\n        // Put private function code here\n    }\n\n    return {\n        'myFunction': myFunction\n    }\n})();\n// Prompt: want to grape all ci assigned to caller\n","action":"complete","response":"var ThisPattern = (function() {\n    return this;\n})();\n"},
{"cuid":"cld37vgqr006cpq24s8l66sfl","createdAt":"2023-01-19 20:57:20.259","updatedAt":"2023-01-19 20:57:22.66","userCuid":"cld9unimy004eucguhan7gaoe","prompt":"\n// Prompt: Class pattern\nvar ClassPattern = Class.create();\n\nClassPattern.prototype = {\n   initialize : function() {\n   },\n\n   myFunction : function() {\n      //Put function code here\n   },\n\n   _privateFunction: function() {\n       //Put private function code here\n   },\n\n   type : 'ClassPattern'\n};\n// Prompt: Function Pattern\n// FunctionPattern\nvar doSomething = function() {\n  // Put function code here\n}\n// Prompt: Namespace Pattern\nvar NamespacePattern = {\n    doSomething: function() {\n        // Put function code here\n    },\n\n    doSomethingElse: function() {\n        // Put other function code here\n    }\n};\n// Prompt: Module Pattern\nvar ModulePattern = (function() {\n    var privateVariable;\n\n    function myFunction() {\n        // Put function code here\n    }\n\n    function privateFunction() {\n        // Put private function code here\n    }\n\n    return {\n        'myFunction': myFunction\n    }\n})();\n// Prompt: want to grape all configuration items assigned to caller\n","action":"complete","response":"var GrapeQ = (function() {\n    var grapeQ = new Grape();\n\n    function init() {\n        // Initialize the grapeQ object\n        // ...\n    }\n\n    return {\n        init: init\n    };\n})();"},
{"cuid":"cld39iwlz006fpq24483xt7al","createdAt":"2023-01-19 21:43:33.527","updatedAt":"2023-01-19 21:43:34.868","userCuid":"cld9unimw001yucgucbtj659g","prompt":"Turtle in spanish?","action":"ask","response":"\n\nTortuga."},
{"cuid":"cld91x1s900eepq241gx8wwvj","createdAt":"2023-01-23 22:57:13.546","updatedAt":"2023-01-23 22:57:15.829","userCuid":"cld9unimw000wucguenaahfdy","prompt":"function onChange() {\n  if (document.getElementById('dispatch').checked) {\n    if (document.getElementById('assignment_group').value === '') {\n      document.getElementById('assignment_group').value = 'f3e1717c8771f010fc0321f6cebb3533';\n    }\n  }\n}\n// Generated by scribe.monster\n\"\"\"\nThe onChange function runs on the form.\nExplain it like I'm five years old in the form of a list.\n1.","action":"explain","response":" If the \"dispatch\" checkbox is checked:\n2. If the \"assignment_group\" value is empty:\n3. Set the \"assignment_group\" value to \"f3e1717c8771f010fc0321f6cebb3533\"."},
{"cuid":"cld3a53c0006jpq24451ek674","createdAt":"2023-01-19 22:00:48.672","updatedAt":"2023-01-19 22:00:52.832","userCuid":"cld9unimw000wucguenaahfdy","prompt":"\n// Prompt: Create a script that sets the assignment group to the Manager's group if the priority is 1.\n(function executeRule(current, previous) {\n    if (current.getValue('priority', '1')) {\n        current.setValue('group', current.manager.group + '');\n    }\n})(current, previous);\n// Prompt: when status changes, if closed, set active to false\n(function executeRule(current, previous) {\n    // condition current.status.changes()\n    if (current.status == 'closed_created' || current.status == 'closed_duplicate' || current.status == 'closed_invalid') {\n        current.active = false;\n    } else {\n        current.active = true;\n    }\n})(current, previous);\n// Prompt: when change request changes, set parent to change request\n(function executeRule(current, previous) {\n    // condition current.change_request.changes()\n    current.parent = current.change_request;\n})(current, previous);\n// Prompt: do not allow changes to others delegates\n(function executeRule(current, previous) {\n    // condition current.user != gs.getUserID() && !gs.hasRole('admin')\n    gs.addInfoMessage(gs.getMessage(\"Cannot assign or modify other users' Delegates\"));\n    current.setAbortAction(true);\n})(current, previous);\n// Prompt: get the bot icon for slack, and set it from the response\n(function executeRule(current, previous) {\n    try {\n        var req = new sn_ws.RESTMessageV2();\n        req.setEndpoint('https://slack.com/api/team.info');\n        req.setHttpMethod('get');\n        var e = new GlideEncryptionUtil();\n        var authToken = e.getClearPassword2('token_verification', 'token', current.provider_auth.outbound_message_creation);\n        if (JSUtil.notNil(authToken))\n            req.setRequestHeader('Authorization', 'Bearer ' + authToken);\n        var resp = req.execute();\n        var team_icon = JSON.parse(resp.getBody()).team.icon.image_88;\n        current.setValue(\"icon\", team_icon);\n    } catch (ex) {\n        gs.error('Error getting slack team info: ' + ex.getMessage());\n    }\n})(current, previous);\n// Prompt: when the start and end dates change, only allow dates where the start is before the end\n(function executeRule(current, previous) {\n    // condition current.start_date.changes() || current.end_date.changes()\n    if (!current.start_date.nil() && !current.end_date.nil() && current.start_date > current.end_date) {\n        current.setAbortAction(true);\n        gs.addErrorMessage(gs.getMessage(\"The start date cannot be after the end date\"));\n    }\n})(current, previous);\n// Prompt: when the date changes is empty, format it in the star trek format (YYYY.ElapsedDays) and set it in the star date field\n(function executeRule(current, previous) {\n    // condition current.date.changes()\n    if (!current.date.nil()) {\n        var date = new GlideDateTime(current.date);\n        var year = date.getYear();\n        var elapsedDays = date.getElapsed(date.getNumericValue());\n        current.star_date = year + '.' + elapsedDays;\n    }\n})(current, previous);\n// Prompt: if the current user is a memeber of noc management\n","action":"complete","response":"$(function () {\n    // condition current.user.equals(gs.getUserID())\n    if (!gs.nil(gs.getUser().getID())) {\n        var user = new GlideRecord('sys_user');\n        user.addQuery('sys_id', gs.getUserID());\n        user.query();\n        if (user.next()) {\n            var group = new GlideRecord('sys_user_group');\n            group.addQuery('name', 'Noc Management');\n            group.query();\n            if (group.next() && group.sys_id.equals(user.group)) {\n                current.setValue(\"noc_management\", true);\n            } else {\n                current.setValue(\"noc_management\", false);\n            }\n        }\n    }\n});\n"},
{"cuid":"cld3awcvw006npq24pr3zhczp","createdAt":"2023-01-19 22:22:00.764","updatedAt":"2023-01-19 22:22:03.611","userCuid":"cld9unimw001yucgucbtj659g","prompt":"Kathryne Rinaldo  8:18 AM\n\nSenior ServiceNow Developer role with Wells Fargo!\nHi Jace!\n\nSuper quick- I have a ServiceNow Developer role with Wells Fargo and thought you may be interested! You will provide technology support for the highest volume ServiceNow integration in the world. The ServiceNow Software Engineer will support HRIS applications that serve 250,000+ employees, 4,000 HR professionals, and over 1 million job seekers.\n\nIdeal Skillset:\n- Strong ServiceNow experience\n- JavaScript and REST/SOAP experience is a plus\n- Must go onsite 1-2 days per week\n\nThis is a direct hire, full time opportunity. Base pay is negotiable, and benefits and perks are fantastic. Do you have time to chat about this position?\n\nCheers,\nKathryne\n\nKathryne Rinaldo\nLead IT Recruiter at Infinity Consulting Solutions, a Korn Ferry Company\n\"\"\"\nRespond to the above as Jace using this prompt.\nsay im not interested nicely\nResponse:","action":"ask","response":"\n\nHi Kathryne,\n\nThank you for thinking of me for the Senior ServiceNow Developer role with Wells Fargo. While I am interested in the opportunity, I do not believe that it is the right fit for me at this time. I appreciate you considering me and I wish you luck in your search.\n\nBest,\nJace"},
{"cuid":"cld3ayuqz006rpq242g1ghybw","createdAt":"2023-01-19 22:23:57.228","updatedAt":"2023-01-19 22:24:03.683","userCuid":"cld9unimw001yucgucbtj659g","prompt":"Kathryne Rinaldo  8:18 AM\n\nSenior ServiceNow Developer role with Wells Fargo!\nHi Jace!\n\nSuper quick- I have a ServiceNow Developer role with Wells Fargo and thought you may be interested! You will provide technology support for the highest volume ServiceNow integration in the world. The ServiceNow Software Engineer will support HRIS applications that serve 250,000+ employees, 4,000 HR professionals, and over 1 million job seekers.\n\nIdeal Skillset:\n- Strong ServiceNow experience\n- JavaScript and REST/SOAP experience is a plus\n- Must go onsite 1-2 days per week\n\nThis is a direct hire, full time opportunity. Base pay is negotiable, and benefits and perks are fantastic. Do you have time to chat about this position?\n\nCheers,\nKathryne\n\nKathryne Rinaldo\nLead IT Recruiter at Infinity Consulting Solutions, a Korn Ferry Company\n\"\"\"\nRespond to the above as Jace using this prompt.\nsay im not seeking opportunities and im happy at Delta Air Lines with a nice tone\nResponse:","action":"ask","response":"\n\nHi Kathryne,\n\nThank you so much for thinking of me for this role with Wells Fargo. I really appreciate the consideration. While I'm not actively seeking opportunities right now, I'm always open to hearing about great opportunities. I'm currently very happy at Delta Air Lines and not looking to make a switch at this time.\n\nThanks again,\nJace"},
{"cuid":"cld3b64fs006upq247d4kktd1","createdAt":"2023-01-19 22:29:36.376","updatedAt":"2023-01-19 22:29:38.722","userCuid":"cld9unimx004cucgudurz9li3","prompt":"\n// Prompt: If the cost is more than 100, dont allow submit\nfunction onSubmit() {\n    if (parseFloat(g_form.getValue('cost')) > 100 ) {\n        g_form.addErrorMessage(\"Cost is more than 100, lower cost to submit.\"); // show error to let user know why\n        return false; // disallow submit\n    }\n}\n// Prompt: if worknotes contains word green do not let the form submit\n    ","action":"complete","response":"function onSubmit(event) {\n        if (g_form.getValue('work_notes').indexOf('green') > -1) {\n            g_form.addErrorMessage(\"Don't leave green on the notes.\"); // show error to let user know why\n            return false; // disallow submit\n        }\n    }\n"},
{"cuid":"cld3b8s0b006xpq24y3fq8iru","createdAt":"2023-01-19 22:31:40.236","updatedAt":"2023-01-19 22:31:43.333","userCuid":"cld9unimx004cucgudurz9li3","prompt":"function onSubmit(event) {\n        if (g_form.getValue('work_notes').indexOf('green') > -1) {\n            g_form.addErrorMessage(\"Don't leave green on the notes.\"); // show error to let user know why\n            return false; // disallow submit\n        }\n    }\n\n// Generated by scribe.monster\n\"\"\"\nThe onSubmit function runs on the form.\nExplain it like I'm five years old in the form of a list.\n1.","action":"explain","response":" The function onSubmit runs when the user submits the form.\n2. If the user leaves \"green\" on the notes, the function will add an error message.\n3. The function will return false, which means the form will not be submitted."},
{"cuid":"cld3bi0or0070pq246xsrej12","createdAt":"2023-01-19 22:38:51.387","updatedAt":"2023-01-19 22:38:53.812","userCuid":"cld9unimx004cucgudurz9li3","prompt":"\n// Prompt: If the cost is more than 100, dont allow submit\nfunction onSubmit() {\n    if (parseFloat(g_form.getValue('cost')) > 100 ) {\n        g_form.addErrorMessage(\"Cost is more than 100, lower cost to submit.\"); // show error to let user know why\n        return false; // disallow submit\n    }\n}\n// Prompt: check my code\n    ","action":"complete","response":"var mycode = g_form.getValue('mycode');\n    if (mycode == 'mycode') {\n    g_form.addErrorMessage(\"Cannot submit for approval, please check your code.\"); // show error to let user know why\n    return false; // disallow submit\n}\n\n"},
{"cuid":"cld3elu510072pq241qiktij8","createdAt":"2023-01-20 00:05:48.373","updatedAt":"2023-01-20 00:05:53.82","userCuid":"cld9unimw001yucgucbtj659g","prompt":"(function executeRule(current, previous /*null when async*/ ) {\n    var desc = current.getValue('description');\n    var node1 = current.getValue('node');\n    var Addional_information = current.getValue('additional_info');\n    var parseValue = JSON.parse(Addional_information);\n    var fields = parseValue.additional_content.split(',::');\n    var node_fqdn = trim(fields[0].split(':')[1]);\n    var ip_addr = trim(fields[1].split(':')[1]);\n    var group = trim(fields[2].split(':')[1]);\n    var inc_priority = trim(fields[4].split(':')[1]);\n    var email = fields[5].split(':')[1];\n    var pager = trim(fields[6].split(':')[1]);\n    var discp = desc.split(';;');\n    var title1 = trim(discp[0]);\n    var alrtmsg = trim(discp[1]);\n    alrtmsg = alrtmsg.replace(/::/g, \"\\n\");\n    var custom_msg = parseValue.em_custom_msg;\n    var em_missing_ci = parseValue.missing_ci_default;\n    var inc_category = trim(fields[7].split(':')[1]);\n    var inc_subcategory = trim(fields[8].split(':')[1]);\n    if ((!current.cmdb_ci) && (em_missing_ci))\n        current.cmdb_ci.setDisplayValue(em_missing_ci);\n\n\n\n    if (pager.slice(-1) == '}')\n        pager = pager.substring(0, pager.length - 1);\n\n    if (inc_subcategory.slice(-1) == '}')\n        inc_subcategory = inc_subcategory.substring(0, inc_subcategory.length - 1);\n    if (!title1)\n        title1 = desc;\n\n    if (custom_msg)\n        title1 = custom_msg + title1;\n\n    if (!ip_addr)\n        ip_addr = current.cmdb_ci.ip_address;\n\n    if (!node_fqdn)\n        node_fqdn = ' ';\n\n\n    current.short_description = title1;\n    current.description = 'Node: ' + current.getValue('node') + \"\\n\" + 'IP Address: ' + ip_addr + \"\\n\" + 'Node FQDN: ' + node_fqdn + \"\\n\" + 'Message Key: ' + current.message_key + \"\\n\" + title1 + \"\\n\" + alrtmsg;\n    //\n\n    // send email without incident\t\n    if (email != 'Unknown' && email != '' && inc_priority == 'Unknown') {\n        gs.eventQueue(\"EM_Alert_email\", current, email);\n    }\n\n\n\n    // call pager function\t\t\t\n    if (pager != 'Unknown' && pager != 'Unknown}' && pager != '') {\n        Sendpage(pager, title1);\n    }\n\n\n\n\n    //Incident\n    var inc, grp, calr_id, calr, work_stn, work_s, inc_sys_id, usrname, o_name, o_name_id, ci_loc, locname, loc_sys_id;\n\n    if (inc_priority != 'Unknown' && group != 'Unknown' && group != 'error') {\n\n        inc = new GlideRecord('incident');\n        inc.initialize();\n        inc.short_description = title1;\n        inc.description = current.description;\n        inc.impact = this.getImpact(inc_priority);\n        inc.urgency = this.getUrgency(inc_priority);\n\n        if (!group) {\n            current.description = \"Assignment group is NULL defaulting to TCS-SystemsMonitoring  ::     Event message : \" + inc.description;\n            inc.description = current.description;\n            group = 'TCS-SystemsMonitoring';\n        }\n\n\n\n        if (inc_priority == 2 || inc_priority == 1) {\n            group = 'Major Incident Management';\n        }\n\n        //gs.addInfoMessage(group);\n        grp = this.getAssignmentGroup(group);\n\n        // if assignment group missing\n        if (!grp) {\n            current.description = \"Assignment group : \" + group + \"  does not exists defaulting to TCS-SystemsMonitoring   ::     Event message : \" + inc.description;\n            inc.description = current.description;\n            group = 'TCS-SystemsMonitoring';\n            grp = this.getAssignmentGroup(group);\n        }\n\n        inc.assignment_group = grp;\n\n        // caller\n        calr_id = 'EM_SPECTRUM.RCC';\n        calr = this.getUsr(calr_id);\n        inc.u_caller_contact_number = '000-000-0000';\n\n        // if caller ID missing\n\n        if (!calr) {\n\n            current.description = \"Caller : \" + calr_id + \" does not exists in servicenow   ::     Event message : \" + inc.description;\n            inc.description = current.description;\n\n        }\n\n        inc.caller_id = calr;\n\n\n\n        //constant field  for EM and same sys id has to be maintained across all instances\n\n\n\n\n        o_name = 'Monitoring Automation';\n        o_name_id = this.getUsr(o_name);\n\n        // if caller ID missing\n\n        if (!o_name_id) {\n\n            current.description = \"Opened User : \" + o_name + \" does not exists in servicenow   ::     Event message : \" + inc.description;\n            inc.description = current.description;\n\n        }\n\n\n        inc.opened_by = o_name_id;\n\n\n        //constant field  for EM and same sys id has to be maintained across all instances\n\n        //\tinc.opened_by='cc589779db4d0b80caf3d411ce9619ac';\n\n        if (inc_category) {\n\n            if (inc_category == 'app_std') {\n                inc.category = 'software';\n                inc.subcategory = 'error_message';\n\n            } else {\n                inc.category = inc_category;\n                inc.subcategory = inc_subcategory;\n            }\n        }\n\n\n        inc.contact_type = 'automation';\n        inc.u_n_a = true;\n\n\n\n\n        locname = 'Delta Enterprise';\n        ci_loc = this.getLoc(locname);\n        inc.location = ci_loc;\n\n        inc.cmdb_ci = current.cmdb_ci;\n        inc.u_ci_location = current.cmdb_ci.location;\n        inc.u_office = current.cmdb_ci.asset.u_room_position;\n\n\n\n\n        if (current.cmdb_ci == '') {\n            inc.u_missing_ci = true;\n            inc.u_missing_comments = 'CI not matched in CMDB';\n        }\n\n        if (!inc.u_ci_location) {\n            //\t\t\tlocname = 'Delta Enterprise';\n            //\t\tci_loc = this.getLoc(locname);\n            inc.u_ci_location = ci_loc;\n        }\n        inc_sys_id = inc.insert();\n        if (inc_sys_id) {\n            current.incident = inc_sys_id;\n            //\tcurrent.update();\n        }\n        gs.eventQueue(\"EM_Alert_incident\", current, email);\n\n    }\n\n\n\n\n})(current, previous);\n\nfunction getImpact(priority) {\n\n    var impact = 3;\n    if (priority == 1) {\n        impact = 1;\n    } else if (priority == 2) {\n        impact = 2;\n    } else if (priority == 3) {\n        impact = 2;\n    } else if (priority == 4) {\n        impact = 2;\n    } else if (priority == 5) {\n        impact = 3;\n    }\n    return impact;\n}\n\nfunction getUrgency(priority) {\n    var urgency = 3;\n    if (priority == 1) {\n        urgency = 1;\n    } else if (priority == 2) {\n        urgency = 1;\n    } else if (priority == 3) {\n        urgency = 2;\n    } else if (priority == 4) {\n        urgency = 3;\n    } else if (priority == 5) {\n        urgency = 3;\n    }\n    return urgency;\n}\n\nfunction getAssignmentGroup(grp_name) {\n    var grp_sys_id;\n    var grGroup = new GlideRecord('sys_user_group');\n    grGroup.addActiveQuery();\n    grGroup.addQuery('name', grp_name);\n    grGroup.query();\n    if (grGroup.next()) {\n        grp_sys_id = grGroup.sys_id;\n    }\n\n    return grp_sys_id;\n}\n\n\n\nfunction getUsr(usrname) {\n    var usr_sys_id;\n    var gusr = new GlideRecord('sys_user');\n    gusr.addActiveQuery();\n    gusr.addQuery('name', usrname);\n    gusr.query();\n    if (gusr.next()) {\n        usr_sys_id = gusr.sys_id;\n    }\n    return usr_sys_id;\n}\n\n\nfunction getLoc(locname) {\n    var loc_sys_id;\n    var lname = new GlideRecord('cmn_location');\n    lname.addActiveQuery();\n    lname.addQuery('name', locname);\n    lname.query();\n    if (lname.next()) {\n        loc_sys_id = lname.sys_id;\n    }\n    return loc_sys_id;\n}\n\n\n\n\nfunction Sendpage(pageid, title1) {\n    var pageNotification = new GlideRecord('sys_email');\n    pageNotification.initialize();\n    pageNotification.type = 'send-ready';\n    pageNotification.subject = \"Event : Pager : \" + title1;\n    pageNotification.body = title1;\n    pageNotification.recipients = pageid;\n    var inst = pageNotification.insert();\n}\n\"\"\"\ncurrent is tied to the sys_script record.\nExplain it like I'm five years old in the form of a list.\n1.","action":"explain","response":" current is a sys_script record.\n2. The script is written in JavaScript.\n3. The script is executed when an event occurs.\n4. The script runs a function when an event occurs.\n5. The function executes a rule when an event occurs.\n6. The rule runs a function when an event occurs.\n7. The function sends an email when an event occurs.\n8. The function calls a pager when an event occurs.\n9. The function creates an incident when an event occurs."},
{"cuid":"cld3em9na0075pq241d1ko01v","createdAt":"2023-01-20 00:06:08.47","updatedAt":"2023-01-20 00:06:12.362","userCuid":"cld9unimw001yucgucbtj659g","prompt":"(function executeRule(current, previous /*null when async*/ ) {//\n    var desc = current.getValue('description');\n    var node1 = current.getValue('node');\n    var Addional_information = current.getValue('additional_info');\n    var parseValue = JSON.parse(Addional_information);\n    var fields = parseValue.additional_content.split(',::');\n    var node_fqdn = trim(fields[0].split(':')[1]);\n    var ip_addr = trim(fields[1].split(':')[1]);\n    var group = trim(fields[2].split(':')[1]);\n    var inc_priority = trim(fields[4].split(':')[1]);\n    var email = fields[5].split(':')[1];\n    var pager = trim(fields[6].split(':')[1]);\n    var discp = desc.split(';;');\n    var title1 = trim(discp[0]);\n    var alrtmsg = trim(discp[1]);\n    alrtmsg = alrtmsg.replace(/::/g, \"\\n\");\n    var custom_msg = parseValue.em_custom_msg;\n    var em_missing_ci = parseValue.missing_ci_default;\n    var inc_category = trim(fields[7].split(':')[1]);\n    var inc_subcategory = trim(fields[8].split(':')[1]);\n    if ((!current.cmdb_ci) && (em_missing_ci))\n        current.cmdb_ci.setDisplayValue(em_missing_ci);\n\n\n\n    if (pager.slice(-1) == '}')\n        pager = pager.substring(0, pager.length - 1);\n\n    if (inc_subcategory.slice(-1) == '}')\n        inc_subcategory = inc_subcategory.substring(0, inc_subcategory.length - 1);\n    if (!title1)\n        title1 = desc;\n\n    if (custom_msg)\n        title1 = custom_msg + title1;\n\n    if (!ip_addr)\n        ip_addr = current.cmdb_ci.ip_address;\n\n    if (!node_fqdn)\n        node_fqdn = ' ';\n\n\n    current.short_description = title1;\n    current.description = 'Node: ' + current.getValue('node') + \"\\n\" + 'IP Address: ' + ip_addr + \"\\n\" + 'Node FQDN: ' + node_fqdn + \"\\n\" + 'Message Key: ' + current.message_key + \"\\n\" + title1 + \"\\n\" + alrtmsg;\n    //\n\n    // send email without incident\t\n    if (email != 'Unknown' && email != '' && inc_priority == 'Unknown') {\n        gs.eventQueue(\"EM_Alert_email\", current, email);\n    }\n\n\n\n    // call pager function\t\t\t\n    if (pager != 'Unknown' && pager != 'Unknown}' && pager != '') {\n        Sendpage(pager, title1);\n    }\n\n\n\n\n    //Incident\n    var inc, grp, calr_id, calr, work_stn, work_s, inc_sys_id, usrname, o_name, o_name_id, ci_loc, locname, loc_sys_id;\n\n    if (inc_priority != 'Unknown' && group != 'Unknown' && group != 'error') {\n\n        inc = new GlideRecord('incident');\n        inc.initialize();\n        inc.short_description = title1;\n        inc.description = current.description;\n        inc.impact = this.getImpact(inc_priority);\n        inc.urgency = this.getUrgency(inc_priority);\n\n        if (!group) {\n            current.description = \"Assignment group is NULL defaulting to TCS-SystemsMonitoring  ::     Event message : \" + inc.description;\n            inc.description = current.description;\n            group = 'TCS-SystemsMonitoring';\n        }\n\n\n\n        if (inc_priority == 2 || inc_priority == 1) {\n            group = 'Major Incident Management';\n        }\n\n        //gs.addInfoMessage(group);\n        grp = this.getAssignmentGroup(group);\n\n        // if assignment group missing\n        if (!grp) {\n            current.description = \"Assignment group : \" + group + \"  does not exists defaulting to TCS-SystemsMonitoring   ::     Event message : \" + inc.description;\n            inc.description = current.description;\n            group = 'TCS-SystemsMonitoring';\n            grp = this.getAssignmentGroup(group);\n        }\n\n        inc.assignment_group = grp;\n\n        // caller\n        calr_id = 'EM_SPECTRUM.RCC';\n        calr = this.getUsr(calr_id);\n        inc.u_caller_contact_number = '000-000-0000';\n\n        // if caller ID missing\n\n        if (!calr) {\n\n            current.description = \"Caller : \" + calr_id + \" does not exists in servicenow   ::     Event message : \" + inc.description;\n            inc.description = current.description;\n\n        }\n\n        inc.caller_id = calr;\n\n\n\n        //constant field  for EM and same sys id has to be maintained across all instances\n\n\n\n\n        o_name = 'Monitoring Automation';\n        o_name_id = this.getUsr(o_name);\n\n        // if caller ID missing\n\n        if (!o_name_id) {\n\n            current.description = \"Opened User : \" + o_name + \" does not exists in servicenow   ::     Event message : \" + inc.description;\n            inc.description = current.description;\n\n        }\n\n\n        inc.opened_by = o_name_id;\n\n\n        //constant field  for EM and same sys id has to be maintained across all instances\n\n        //\tinc.opened_by='cc589779db4d0b80caf3d411ce9619ac';\n\n        if (inc_category) {\n\n            if (inc_category == 'app_std') {\n                inc.category = 'software';\n                inc.subcategory = 'error_message';\n\n            } else {\n                inc.category = inc_category;\n                inc.subcategory = inc_subcategory;\n            }\n        }\n\n\n        inc.contact_type = 'automation';\n        inc.u_n_a = true;\n\n\n\n\n        locname = 'Delta Enterprise';\n        ci_loc = this.getLoc(locname);\n        inc.location = ci_loc;\n\n        inc.cmdb_ci = current.cmdb_ci;\n        inc.u_ci_location = current.cmdb_ci.location;\n        inc.u_office = current.cmdb_ci.asset.u_room_position;\n\n\n\n\n        if (current.cmdb_ci == '') {\n            inc.u_missing_ci = true;\n            inc.u_missing_comments = 'CI not matched in CMDB';\n        }\n\n        if (!inc.u_ci_location) {\n            //\t\t\tlocname = 'Delta Enterprise';\n            //\t\tci_loc = this.getLoc(locname);\n            inc.u_ci_location = ci_loc;\n        }\n        inc_sys_id = inc.insert();\n        if (inc_sys_id) {\n            current.incident = inc_sys_id;\n            //\tcurrent.update();\n        }\n        gs.eventQueue(\"EM_Alert_incident\", current, email);\n\n    }\n\n\n\n\n})(current, previous);\n\nfunction getImpact(priority) {\n\n    var impact = 3;\n    if (priority == 1) {\n        impact = 1;\n    } else if (priority == 2) {\n        impact = 2;\n    } else if (priority == 3) {\n        impact = 2;\n    } else if (priority == 4) {\n        impact = 2;\n    } else if (priority == 5) {\n        impact = 3;\n    }\n    return impact;\n}\n\nfunction getUrgency(priority) {\n    var urgency = 3;\n    if (priority == 1) {\n        urgency = 1;\n    } else if (priority == 2) {\n        urgency = 1;\n    } else if (priority == 3) {\n        urgency = 2;\n    } else if (priority == 4) {\n        urgency = 3;\n    } else if (priority == 5) {\n        urgency = 3;\n    }\n    return urgency;\n}\n\nfunction getAssignmentGroup(grp_name) {\n    var grp_sys_id;\n    var grGroup = new GlideRecord('sys_user_group');\n    grGroup.addActiveQuery();\n    grGroup.addQuery('name', grp_name);\n    grGroup.query();\n    if (grGroup.next()) {\n        grp_sys_id = grGroup.sys_id;\n    }\n\n    return grp_sys_id;\n}\n\n\n\nfunction getUsr(usrname) {\n    var usr_sys_id;\n    var gusr = new GlideRecord('sys_user');\n    gusr.addActiveQuery();\n    gusr.addQuery('name', usrname);\n    gusr.query();\n    if (gusr.next()) {\n        usr_sys_id = gusr.sys_id;\n    }\n    return usr_sys_id;\n}\n\n\nfunction getLoc(locname) {\n    var loc_sys_id;\n    var lname = new GlideRecord('cmn_location');\n    lname.addActiveQuery();\n    lname.addQuery('name', locname);\n    lname.query();\n    if (lname.next()) {\n        loc_sys_id = lname.sys_id;\n    }\n    return loc_sys_id;\n}\n\n\n\n\nfunction Sendpage(pageid, title1) {\n    var pageNotification = new GlideRecord('sys_email');\n    pageNotification.initialize();\n    pageNotification.type = 'send-ready';\n    pageNotification.subject = \"Event : Pager : \" + title1;\n    pageNotification.body = title1;\n    pageNotification.recipients = pageid;\n    var inst = pageNotification.insert();\n}\n\"\"\"\ncurrent is tied to the sys_script record.\nExplain it like I'm five years old in the form of a list.\n1.","action":"explain","response":" current is tied to the sys_script record.\n2. The sys_script record is used to store and execute custom scripts in ServiceNow.\n3. The current variable represents the current state of the record, while the previous variable represents the previous state of the record.\n4. In this particular script, the executeRule function is called when the sys_script record is run.\n5. The executeRule function performs various actions, including sending an email and creating an incident record."},
{"cuid":"cld3f7pry007epq249l647h85","createdAt":"2023-01-20 00:22:49.15","updatedAt":"2023-01-20 00:22:52.225","userCuid":"cld9unimw000wucguenaahfdy","prompt":"\n// Prompt: Create a script that sets the assignment group to the Manager's group if the priority is 1.\n(function executeRule(current, previous) {\n    if (current.getValue('priority', '1')) {\n        current.setValue('group', current.manager.group + '');\n    }\n})(current, previous);\n// Prompt: when status changes, if closed, set active to false\n(function executeRule(current, previous) {\n    // condition current.status.changes()\n    if (current.status == 'closed_created' || current.status == 'closed_duplicate' || current.status == 'closed_invalid') {\n        current.active = false;\n    } else {\n        current.active = true;\n    }\n})(current, previous);\n// Prompt: when change request changes, set parent to change request\n(function executeRule(current, previous) {\n    // condition current.change_request.changes()\n    current.parent = current.change_request;\n})(current, previous);\n// Prompt: do not allow changes to others delegates\n(function executeRule(current, previous) {\n    // condition current.user != gs.getUserID() && !gs.hasRole('admin')\n    gs.addInfoMessage(gs.getMessage(\"Cannot assign or modify other users' Delegates\"));\n    current.setAbortAction(true);\n})(current, previous);\n// Prompt: get the bot icon for slack, and set it from the response\n(function executeRule(current, previous) {\n    try {\n        var req = new sn_ws.RESTMessageV2();\n        req.setEndpoint('https://slack.com/api/team.info');\n        req.setHttpMethod('get');\n        var e = new GlideEncryptionUtil();\n        var authToken = e.getClearPassword2('token_verification', 'token', current.provider_auth.outbound_message_creation);\n        if (JSUtil.notNil(authToken))\n            req.setRequestHeader('Authorization', 'Bearer ' + authToken);\n        var resp = req.execute();\n        var team_icon = JSON.parse(resp.getBody()).team.icon.image_88;\n        current.setValue(\"icon\", team_icon);\n    } catch (ex) {\n        gs.error('Error getting slack team info: ' + ex.getMessage());\n    }\n})(current, previous);\n// Prompt: when the start and end dates change, only allow dates where the start is before the end\n(function executeRule(current, previous) {\n    // condition current.start_date.changes() || current.end_date.changes()\n    if (!current.start_date.nil() && !current.end_date.nil() && current.start_date > current.end_date) {\n        current.setAbortAction(true);\n        gs.addErrorMessage(gs.getMessage(\"The start date cannot be after the end date\"));\n    }\n})(current, previous);\n// Prompt: when the date changes is empty, format it in the star trek format (YYYY.ElapsedDays) and set it in the star date field\n(function executeRule(current, previous) {\n    // condition current.date.changes()\n    if (!current.date.nil()) {\n        var date = new GlideDateTime(current.date);\n        var year = date.getYear();\n        var elapsedDays = date.getElapsed(date.getNumericValue());\n        current.star_date = year + '.' + elapsedDays;\n    }\n})(current, previous);\n// Prompt: if the current user is a member of noc managment group the allow edit of state\n","action":"complete","response":"(function executeRule(current, previous) {\n    // condition current.state.changes() && gs.hasRole('admin')\n    gs.addInfoMessage('You cannot change the state of this change request because you are a member of the NOC Management group.');\n    current.setAbortAction(true);\n})(current, previous);\n"},
{"cuid":"cld3fmps2007ipq24f8mte6mq","createdAt":"2023-01-20 00:34:28.995","updatedAt":"2023-01-20 00:34:33.233","userCuid":"cld9unimw000wucguenaahfdy","prompt":"(function executeRule(current, previous /*null when async*/) {\n\n\ttry {\n\t\tvar request = new sn_ws.RESTMessageV2(\"Cherwell Dev API\", \"Location\"); // Might throw exception if message doesn't exist or not visible due to scope.    \n\n\t\tvar obj = new Object();\n\t\tobj.cherwell_id = current.getUniqueValue();\n\t\tobj.city = current.getDisplayValue('city');\n\t\tobj.country = current.getDisplayValue('country');\n\t\tobj.customer_code = current.getDisplayValue('u_customer_code');\n\t\tobj.dsid = current.getDisplayValue('name');\n\t\tobj.esid = current.getDisplayValue('u_customer_site_name');\n\t\tobj.postal_code = current.getDisplayValue('zip');\n\t\tobj.province = current.getDisplayValue('state');\n\t\tobj.status = current.getDisplayValue('u_location_status');\n\t\tobj.street = current.getDisplayValue('street');\n\t\tobj.street2 = \"\";\n\t\tobj.transit = current.getDisplayValue('u_transit');\n\n\t\tvar jsonString = JSON.stringify(obj);\n        //request.setRequestBody(jsonString);\n\t\trequest.setStringParameterNoEscape('body',jsonString);\n        var response = request.execute();\n\t\tvar error = response.haveError();\n        if (error ) {\t\t\t\n            var errMsg = JSON.parse(response.getBody());\n            gs.addErrorMessage(\"Location NAME:  \" + current.getDisplayValue('name') + \" \" + errMsg.message);\n          \n        }\n\t\tgs.log(\"SITE NAME: \" + current.getDisplayValue('name') + \" \" + \"Attempted to send content: \" + jsonString,\"GCP Integration - SITE\");\n        gs.log(\"SITE NAME: \" + current.getDisplayValue('name') + \" \" + response.getBody(),\"GCP Integration - SITE\");\n    } catch (err) {\n        gs.log(\"SITE NAME: \" + current.getDisplayValue('name') + \" \" + \"Cherwell sync error: \" + err.message,\"GCP Integration - SITE\");\n    }\n\n})(current, previous);\n\"\"\"\ncurrent is tied to the sys_script record.\nExplain it like I'm five years old in the form of a list.\n1.","action":"explain","response":" We're going to try running a script (try/catch).\n2. If it doesn't work, we're going to log an error message.\n3. If it does work, we're going to grab info from ServiceNow and send it to Cherwell.\n4. After we send it to Cherwell, we're going to log the attempt and the response."},
{"cuid":"cld3fn3og007mpq24j1a7mu3w","createdAt":"2023-01-20 00:34:47.008","updatedAt":"2023-01-20 00:34:51.613","userCuid":"cld9unimw000wucguenaahfdy","prompt":"Update this code based following this prompt, \"\": 1. We're going to try running a script (try/catch).\n2. If it doesn't work, we're going to log an error message.\n3. If it does work, we're going to grab info from ServiceNow and send it to Cherwell.\n4. After we send it to Cherwell, we're going to log the attempt and the response.\n// Generated by scribe.monster ```","action":"edit","response":"\n\n1. try {\n    2. runScript();\n    3. } catch(err) {\n    4. console.log(\"Error running script: \" + err);\n    5. }\n    6. \n    7. function runScript() {\n    8. \n    9.     //code to run script goes here\n    10. \n    11.     log Attempt and Response;\n    12. }"},
{"cuid":"cld3fo116007opq24p4yzxosd","createdAt":"2023-01-20 00:35:30.234","updatedAt":"2023-01-20 00:35:39.533","userCuid":"cld9unimw000wucguenaahfdy","prompt":"1. try {\n    2. runScript();\n    3. } catch(err) {\n    4. console.log(\"Error running script: \" + err);\n    5. }\n    6. \n    7. function runScript() {\n    8. \n    9.     //code to run script goes here\n    10. \n    11.     log Attempt and Response;\n    12. }\n// Generated by scribe.monster\n\"\"\"\ncurrent is tied to the sys_script record.\nExplain it like I'm five years old in the form of a list.\n1.","action":"explain","response":" try {\n    2. runScript();\n    3. } catch(err) {\n    4. console.log(\"Error running script: \" + err);\n    5. }\n    6. \n    7. function runScript() {\n    8. \n    9.     //code to run script goes here\n    10. \n    11.     log Attempt and Response;\n    12. }\n\n1. The try statement allows you to test a block of code for errors.\n2. The runScript() function is executed.\n3. If there are any errors, they are caught by the catch statement.\n4. An error message is logged to the console.\n5. The function ends.\n6. \n7. The runScript() function is defined.\n8. \n9. The code to run the script goes here.\n10. \n11. The attempt and response are logged.\n12. The function ends."},
{"cuid":"cld3fplqn007rpq24bgoa3xx2","createdAt":"2023-01-20 00:36:43.728","updatedAt":"2023-01-20 00:36:44.685","userCuid":"cld9unimw000wucguenaahfdy","prompt":"Update this code based following this prompt, \"if an error is returned, abort database changes\": 1. try {\n    2. runScript();\n    3. } catch(err) {\n    4. console.log(\"Error running script: \" + err);\n    5. }\n    6. \n    7. function runScript() {\n    8. \n    9.     //code to run script goes here\n    10. \n    11.     log Attempt and Response;\n    12. }\n\n1. The try statement allows you to test a block of code for errors.\n2. The runScript() function is executed.\n3. If there are any errors, they are caught by the catch statement.\n4. An error message is logged to the console.\n5. The function ends.\n6. \n7. The runScript() function is defined.\n8. \n9. The code to run the script goes here.\n10. \n11. The attempt and response are logged.\n12. The function ends.\n// Generated by scribe.monster ```","action":"edit","response":""},
{"cuid":"cld3fpsj0007vpq249s2uubuu","createdAt":"2023-01-20 00:36:52.525","updatedAt":"2023-01-20 00:36:53.494","userCuid":"cld9unimw000wucguenaahfdy","prompt":"Update this code based following this prompt, \"if an error is returned, abort database changes\": // Generated by scribe.monster ```","action":"edit","response":" if (err): abort database changes "},
{"cuid":"cld3wg5tn007ypq24fp3l7hcp","createdAt":"2023-01-20 08:25:16.668","updatedAt":"2023-01-20 08:25:21.941","userCuid":"cld9unimy005hucgu5b17hluu","prompt":"What are the best hifi speakers for low bass in a 6m x 6m room using an 80w amplifier ","action":"ask","response":"\n\nFor a 6m x 6m room, we recommend looking for speakers with a large bass response that can handle the large room size. The best option would be floorstanding speakers like the ELAC Debut 6.5 Floorstanding Speakers, which feature dual 6.5-inch woofers and have a frequency response down to 40Hz. They have a high power handling, so they can easily be powered with an 80w amplifier. Alternatively, you could also look at the Polk Audio Signature Series S60 Floorstanding Speakers, which have a frequency response down to 35Hz and a power handling of up to 200w."},
{"cuid":"cld91vqs800e9pq24x34p8wkb","createdAt":"2023-01-23 22:56:12.632","updatedAt":"2023-01-23 22:57:46.468","userCuid":"cld9unimw000wucguenaahfdy","prompt":"Update this code based following this prompt, \"\": 1. onChange is a function that runs on the form.\n2. onChange checks if the dispatch checkbox is checked.\n3. onChange checks if the assignment group field is blank.\n4. onChange sets the assignment group field to the group \"f3e1717c8771f010fc0321f6cebb3533\" if dispatch is checked and the assignment group field is blank.\n// Generated by scribe.monster ```","action":"edit","response":"\n\n1. onChange is a function that runs on the form.\n2. onChange checks if the dispatch checkbox is checked.\n3. onChange checks if the assignment group field is blank.\n4. onChange sets the assignment group field to the group \"f3e1717c8771f010fc0321f6cebb3533\" if dispatch is checked and the assignment group field is blank."},
{"cuid":"cld4i0ijd0082pq24yfhe4qpp","createdAt":"2023-01-20 18:28:58.201","updatedAt":"2023-01-20 18:29:02.445","userCuid":"cld9unimx003tucgu1gxk45hk","prompt":"(function runMailScript(/* GlideRecord */ current, /* TemplatePrinter */ template,\n          /* Optional EmailOutbound */ email, /* Optional GlideRecord */ email_action,\n          /* Optional GlideRecord */ event) {\n\n          // Add your code here\n\tvar link = gs.getProperty('glide.servlet.uri')+ + 'itnow' ;\n\ttemplate.print('<font face=\"helvetica\">');\n\t\n\tvar backgroundColor = 'background-color: #278efc;';\n\tvar border = 'border: 1px solid #0368d4;';\n\tvar color = 'color: #ffffff;';\n\tvar fontSize = 'font-size: 16px;';\n\tvar fontFamily = 'font-family: Helvetica, Arial, sans-serif;';\n\tvar textDecoration = 'text-decoration: none; border-radius: 3px;';\n\tvar webKitBorder = '-webkit-border-radius: 3px;';\n\tvar mozBorder = '-moz-border-radius: 3px;';\n\tvar display = 'display: inline-block;';\n\tvar padding = 'padding: 5px;';\n\t\n\ttemplate.print('<a href=\"' + link + '\"');\n\t\n\ttemplate.print('style=\"' + backgroundColor + border + color + fontSize + fontFamily + textDecoration + webKitBorder + mozBorder + display + padding);\n\ttemplate.print('\">');\n\ttemplate.print(gs.getMessage(text));\n\ttemplate.print('</a>');\n\ttemplate.print('</font>');\n\ttemplate.print('<br><br>');\n\n})(current, template, email, email_action, event);\n\"\"\"\nExplain the above code step-by-step in simple english.","action":"explain","response":"\n\nThe above code is a script that can be used to send emails. It includes a function that will add a link to an email. The function will also include some styling to make the link look nicer."},
{"cuid":"cld4i0wk50085pq24kpbq8cwg","createdAt":"2023-01-20 18:29:16.373","updatedAt":"2023-01-20 18:29:18.903","userCuid":"cld9unimx003tucgu1gxk45hk","prompt":"Update this code based following this prompt, \"\": 1. The above code is a script that can be used to send emails. It includes a function that will add a link to an email. The function will also include some styling to make the link look nicer.\n// Generated by scribe.monster ```","action":"edit","response":"\n\nfunction addLink(email) {\n  email.innerHTML =\n    '<a href=\"mailto:me@example.com\" style=\"font-size: 16px; font-weight: bold;\">Email me!</a>';\n}"},
{"cuid":"cld4i1hjt0088pq24oc1cior8","createdAt":"2023-01-20 18:29:43.578","updatedAt":"2023-01-20 18:29:45.266","userCuid":"cld9unimx003tucgu1gxk45hk","prompt":"\n// Prompt: attach links\nattachLinks();\nfunction attachLinks() {\n   //Check for any attachments and add attachment links if they exist\n   var gr = new GlideRecord('sys_attachment');\n   gr.addQuery('table_sys_id',current.sys_id);\n   gr.query();\n   if (gr.hasNext()) {\n      template.print(\"Attachments: <br />\");\n      while (gr.next()) {\n         var attachLink = '<a href=\"' + gs.generateURL(gr.getTableName(),gr.sys_id) +  '\">' + gr.file_name + '</a>';\n         template.print(attachLink +  \"<br />\");\n      }\n      template.print(\"<hr/>\");\n   }\n}\n// Prompt: get due days\n(function runMailScript(/* GlideRecord */ current, /* TemplatePrinter */ template,\n          /* Optional EmailOutbound */ email, /* Optional GlideRecord */ email_action,\n          /* Optional GlideRecord */ event) {\n\ttemplate.print(getDueDaysMessage());\n\t\n\tfunction getDueDaysMessage(){\n\t\tvar today = new GlideDateTime().getLocalDate();\n\t\tvar dueDate = new GlideDateTime(current.due_date);\n\t\tvar remainingDays = GlideDateTime.subtract(today,dueDate.getLocalDate()).getDayPart();\n\t\tvar message = \"\";\n\t\tif(remainingDays>1)\n\t\t\tmessage = ' is due in ' + remainingDays+ ' days';\n\t\telse if (remainingDays==1)\n\t\t\t\tmessage = ' is due tomorrow';\n\t\telse if (remainingDays==0)\n\t\t\t\tmessage = ' is due today';\n\t\telse\n\t\t\tmessage = ' was due on ' + dueDate.getLocalDate(); \n\t\treturn message;\n\t}\n\n})(current, template, email, email_action, event);\n// Prompt: generate link with button\n","action":"complete","response":"//var link = '<form method=\"POST\" action=\"https://answers.servicenow.com/app/ask?topic=finance\">'\n// + '<button type=\"submit\" class=\"button button_default\" name=\"submit\" value=\"Ask a Question\">Ask a Question</button>'\n// + '</form>'\n//template.print(link);\n\n"},
{"cuid":"cld4n8481008apq24wbdtyhbk","createdAt":"2023-01-20 20:54:50.977","updatedAt":"2023-01-20 20:54:52.351","userCuid":"cld9unimy0058ucgucxhie01n","prompt":"\n// Prompt: Create a script that sets the assignment group to the Manager's group if the priority is 1.\n(function executeRule(current, previous) {\n    if (current.getValue('priority', '1')) {\n        current.setValue('group', current.manager.group + '');\n    }\n})(current, previous);\n// Prompt: when status changes, if closed, set active to false\n(function executeRule(current, previous) {\n    // condition current.status.changes()\n    if (current.status == 'closed_created' || current.status == 'closed_duplicate' || current.status == 'closed_invalid') {\n        current.active = false;\n    } else {\n        current.active = true;\n    }\n})(current, previous);\n// Prompt: when change request changes, set parent to change request\n(function executeRule(current, previous) {\n    // condition current.change_request.changes()\n    current.parent = current.change_request;\n})(current, previous);\n// Prompt: do not allow changes to others delegates\n(function executeRule(current, previous) {\n    // condition current.user != gs.getUserID() && !gs.hasRole('admin')\n    gs.addInfoMessage(gs.getMessage(\"Cannot assign or modify other users' Delegates\"));\n    current.setAbortAction(true);\n})(current, previous);\n// Prompt: get the bot icon for slack, and set it from the response\n(function executeRule(current, previous) {\n    try {\n        var req = new sn_ws.RESTMessageV2();\n        req.setEndpoint('https://slack.com/api/team.info');\n        req.setHttpMethod('get');\n        var e = new GlideEncryptionUtil();\n        var authToken = e.getClearPassword2('token_verification', 'token', current.provider_auth.outbound_message_creation);\n        if (JSUtil.notNil(authToken))\n            req.setRequestHeader('Authorization', 'Bearer ' + authToken);\n        var resp = req.execute();\n        var team_icon = JSON.parse(resp.getBody()).team.icon.image_88;\n        current.setValue(\"icon\", team_icon);\n    } catch (ex) {\n        gs.error('Error getting slack team info: ' + ex.getMessage());\n    }\n})(current, previous);\n// Prompt: when the start and end dates change, only allow dates where the start is before the end\n(function executeRule(current, previous) {\n    // condition current.start_date.changes() || current.end_date.changes()\n    if (!current.start_date.nil() && !current.end_date.nil() && current.start_date > current.end_date) {\n        current.setAbortAction(true);\n        gs.addErrorMessage(gs.getMessage(\"The start date cannot be after the end date\"));\n    }\n})(current, previous);\n// Prompt: when the date changes is empty, format it in the star trek format (YYYY.ElapsedDays) and set it in the star date field\n(function executeRule(current, previous) {\n    // condition current.date.changes()\n    if (!current.date.nil()) {\n        var date = new GlideDateTime(current.date);\n        var year = date.getYear();\n        var elapsedDays = date.getElapsed(date.getNumericValue());\n        current.star_date = year + '.' + elapsedDays;\n    }\n})(current, previous);\n// Prompt: update region when user cost center changes\n","action":"complete","response":"(function executeRule(current, previous) {\n    // condition current.cost_center.changes()\n    if (!current.cost_center.nil()) {\n        current.region = current.cost_center.split('.')[0];\n    }\n})(current, previous);\n"},
{"cuid":"cld4nbpak008dpq24vcjfctcm","createdAt":"2023-01-20 20:57:38.252","updatedAt":"2023-01-20 20:57:40.45","userCuid":"cld9unimy0058ucgucxhie01n","prompt":"(function executeRule(current, previous) {\n    // condition current.cost_center.changes()\n    if (!current.cost_center.nil()) {\n        current.region = current.cost_center.split('.')[0];\n    }\n})(current, previous);\n\n// Generated by scribe.monster\n\"\"\"\ncurrent is tied to the sys_script record.\nExplain it like I'm five years old in the form of a list.\n1.","action":"explain","response":" if the user changes the cost center field\n2. the record will split the cost center field\n3. and the region field will be updated\n\"\"\""},
{"cuid":"cld4nfnaw008gpq249gnm6twu","createdAt":"2023-01-20 21:00:42.296","updatedAt":"2023-01-20 21:00:42.296","userCuid":"cld9unimy0058ucgucxhie01n","prompt":"\n<!--Fill out the below given this prompt \"create a badge access form\".-->\n\n<h1>Badge Access</h1>\n\n<h2>Fields to track badge access</h2>\n<ol>\n<li>Badge ID</li>\n<li>Badge Holder Name</li>\n<li>Date Issued</li>\n<li>Expiration Date</li>\n<li>Access Level</li>\n<li>Building Access</li>\n<li>Areas Access</li>\n<li>Doors Access</li>\n<li>Time Zone Restrictions</li>\n<li>Status (Active/Inactive)</li>\n</ol>\n\n<h2>Roles</h2>\nIdentify the roles people need to take to request, approve, and fulfill.\n<ul>\n<li>Request: Badge Holder</li>\n<li>Approve: Security/Administrative Personnel</li>\n<li>Fulfill: Security/Administrative Personnel</li>\n</ul>\n\n<h2>Self Service Form</h2>\n<ul>\n<li>Badge Holder Name</li>\n<li>Access Level</li>\n<li>Building Access</li>\n<li>Areas Access</li>\n<li>Doors Access</li>\n<li>Time Zone Restrictions</li>\n</ul>\n\n<h3>Process</h3>\n<div class=\"mermaid\">\ngraph TD\n  S0(Start)\n  A1(Approval for access)\n  T1(Task to fulfill access)\n  Sc1(Schedule expiration)\n  E0(End)\n\n  S0-->A1\n  A1--Rejected-->E0\n  A1--Approved-->T1\n  T1-->Sc1\n  Sc1-->E0\n</div>\n<h3>Integration</h3>\nCreate an integration between ServiceNow and BadgeSystem to automatically provision access.\n\nPossible paths for this.\n<ul>\n<li>BadgeSystem polls ServiceNow</li>\n  <ul>\n  <li>Every hour BadgeSystem hits the TableAPI for outstanding tasks.</li>\n  <li>Updates the tasks that automated work has started.</li>\n  <li>Processes the tasks.</li>\n  <li>If processing succeeds, close the task with success</li>\n  <li>Else Update the task that automation has failed</li>\n  </ul>\n<li>ServiceNow makes a rest call</li>\n  <li>When a task is ready to process e.g. state changes to ready, send a rest call to BadgeSystem</li>\n  <li>If processing succeeds, close the task with success</li>\n  <li>Else Update the task that automation has failed</li>\n</ul>\n<h3>Notifications</h3>\n\n<h4>Approval</h4>\nSubject: Badge Access Request for {current.variables.requested_for}\n\n{current.variables.requested_for} is requesting access to area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door}). Please review and approve or reject the request.\n\nThank you,\nSecurity Team\n\n<h4>Approved</h4>\nSubject: Badge Access Granted\n\nDear {current.variables.requested_for},\n\nYou have been granted access to area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door}). Your badge ID is {current.variables.badge_id} and it expires on {current.variables.expirationDate}.\n\nThank you,\nSecurity Team\n\n<h4>Rejected</h4>\nSubject: Badge Access Denied\n\nDear {current.variables.requested_for},\n\nYour request for access to area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door}) was denied. Please contact the Security Team for more information.\n\nThank you,\nSecurity Team\n\n<h4>Notice of expiring access</h4>\nSubject: Badge Access Expiring for area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door})\n\nDear {current.variables.requested_for},\n\nYour access to area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door}) expires in on on {current.variables.expirationDate}. If you still need this access please request it.\n\nThank you,\nSecurity Team\n\n<!--Fill out the below given this prompt \"Manage FOIA requests for contracts\".-->\n<h1>FOIA Request for Contracts </h1>\n\n<h2>Request Process</h2>\nCreate a process to allow for members of the public to submit FOIA requests for Contracts: \n<div class=\"mermaid\">\ngraph TD\n  S0((Start))\n  S1(Submit Request)\n  A2(Routing and receipt of  request)\n  A3(Review to determine if document is releasable)\n  T1(Obtain the requested document)\n  A4(Prepare releasable document)\n  A5(Approval to release)\n  T2(Produce requested document)\n  E0(End)\n\n  S0-->S1\n  S1-->A2\n  A2-->A3\n  A3--Yes-->T1\n  A3--No-->E0\n  T1-->A4\n  A4-->A5\n  A5--Yes-->T2\n  A5--No-->E0\n  T2-->E0\n</div>\n\n<h2>Roles</h2>\nIdentify any roles people need to take to request, approve, and fulfill.\n<ul>\n<li>Requester: Anyone can submit a request as long as the requirements are met.</li>\n<li>Approver: Agency representative or Agency FOIA Officer</li>\n<li>Fulfiller: Agency representative or Agency FOIA Officer</li>\n</ul>\n\n<h2>Self Service Form</h2>\nCreate fields for submitting a request in the ServiceNow Self Service Portal. \n<ol>\n<li>Requester Name</li>\n<li>Requester Phone</li>\n<li>Requester Email</li>\n<li>Agency Name</li>\n<li>Contract Number</li>\n<li>Brief description of the requested document</li>\n</ol>\n\n<h2>Notifications</h2>\n\n<h3>Request Submitted</h3>\nSubject: FOIA Request Submitted\n\nDear Applicant,\n\nYour FOIA request has been submitted. Your Request ID is: {current.variables.request_id}. Please note that your Request ID in all further correspondence.\n\nThank you,\nFOIA Office\n\n<h3>Request Received </h3>\nSubject: FOIA Request Received\n\nDear Agency Representative, \n\nA new FOIA request has been received. Please review the request and follow the process to respond. \n\nThank you, \nFOIA Office \n\n<h3>Request Approved </h3>\nSubject: FOIA Request Approved\n\nDear Agency Representative, \n\nFOIA Request {current.variables.request_id} has now been approved. Please proceed with preparing a releasable document. \n\nThank you,\nFOIA Office \n\n<h3>Request Rejected</h3>\nSubject: FOIA Request Rejected\n\nDear Applicant, \n\nYour FOIA Request {current.variables.request_id} has been rejected. Please contact the FOIA Representative for more information. \n\nThank you,\nFOIA Office\n<!--Fill out the below given this prompt \"var AribaTask = Class.create();\nAribaTask.prototype = {\n\tinitialize: function () {\n\t\t//Purchase configuration\n\t\tthis._software_cost_center = gs.getProperty('adb.store.protected.ariba.software.cost_center');\n\t\tthis._software_general_ledger = gs.getProperty('adb.store.protected.ariba.software.general_ledger');\n\t\tthis._furniture_general_ledger = gs.getProperty('adb.store.protected.ariba.furniture.general_ledger');\n\t\tthis._hardware_general_ledger = gs.getProperty('adb.store.protected.ariba.hardware.general_ledger');\n\t\tthis._ariba_ship_to = gs.getProperty('adb.store.protected.ariba.ship_to');\n\t\tthis.realm = gs.getProperty('adb.store.protected.ariba.realm');\n\t\tthis.file_upload_secret = gs.getProperty('adb.store.protected.ariba.file_upload_secret');\n\t\tthis.snaplogic_environment = gs.getProperty('adb.store.protected.snaplogic.environment');\n\t\tthis.snaplogic_token = gs.getProperty('adb.store.protected.snaplogic.token');\n\n\t\t//Decorators\n\t\tnew AribaTaskUtil(this);\n\t\tnew AribaTaskCore(this);\n\t\tnew AribaTaskAdmin(this);\n\t\tnew AribaTaskAPI(this);\n\t\tnew AribaTaskAPIPurchaseRequest(this);\n\t\tnew AribaTaskAPICatalog(this);\n\t\tnew AribaTaskWorkflowUtil(this);\n\n\t\t//Global Constants\n\t\tthis.TYPE = {\n\t\t\t'HARDWARE': 1,\n\t\t\t'SOFTWARE': 2\n\t\t};\n\t},\n\n\tcreateHardwareOrder: function (task, isUpdate) {\n\t\t//Validate the Request\n\t\tif (task.u_supplier_id.isNil()) return this.error(task, 'AribaTask.createHardwareOrder(task): Missing a supplier');\n\t\tif (task.u_user.isNil()) return this.error(task, 'AribaTask.createHardwareOrder(task): Missing Ship To User');\n\t\tif (task.u_request.delivery_address.isNil()) return this.error(task, 'AribaTask.createHardwareOrder(task): Missing Delivery Address');\n\n\t\t//Get meta data fields\n\t\tvar metaData = task.u_request.special_instructions.getValue();\n\t\ttry {\n\t\t\tmetaData = JSON.parse(metaData);\n\t\t} catch (err) {\n\t\t\treturn this.error(task, 'AribaTask.createHardwareOrder(task): Could not parse Special Instructions.');\n\t\t}\n\n\t\t//Validate Cost Center\n\t\tif (!('cc' in metaData)) return this.error(task, 'AribaTask.createHardwareOrder(task): Request missing Cost Center.');\n\t\tvar grCostCenter = new GlideRecord('cmn_cost_center');\n\t\tif (!grCostCenter.get(metaData.cc)) return this.error(task, 'AribaTask.createHardwareOrder(task): Invalid Cost Center Sys Id ' + metaData.cc + '.');\n\t\tif (grCostCenter.code.nil()) return this.error(task, 'AribaTask.createHardwareOrder(task): Cost Center Sys Id (' + metaData.cc + ') has no code.');\n\t\tif (grCostCenter.u_company_code.nil()) return this.error(task, 'AribaTask.createHardwareOrder(task): Cost Center (' + grCostCenter.code.getDisplayValue() + ') has no Company Code.');\n\n\t\t//Check there are items to order\n\t\tvar grItems = new GlideRecord('sc_req_item');\n\t\tgrItems.addQuery('request', task.u_request.getValue());\n\t\tgrItems.addQuery('cat_item.model.u_supplier_id', task.u_supplier_id.getValue());\n\t\tgrItems.query();\n\n\t\t//If there are no items or item, throw an error\n\t\tif (grItems.getRowCount() == 0) {\n\t\t\treturn this.error(task, 'AribaTask.createHardwareOrder(task): ' + task.u_request.getDisplayValue() + ' has no items for supplier \"' + task.u_supplier_id.getDisplayValue() + '\".');\n\t\t}\n\n\t\t//Create the order\n\t\tvar id = task.number.getDisplayValue();\n\t\tif (gs.getProperty('instance_name') !== 'adobe') {\n\t\t\tvar opened = new GlideDateTime(task.opened_at);\n\t\t\tid += '-' + opened.getNumericValue();\n\t\t}\n\n\t\tthis.createOrder({\n\t\t\tref_id: id,\n\t\t\tbusiness_justification: 'Other',\n\t\t\t//TODO: SN and Business Use should only be passed in for orders containing a computer that requires them\n\t\t\tserial_number: 'WSS Order',\n\t\t\treplacement_type: 'Primary Machine',\n\t\t\t//Preparer is either the person who opened the request, or the same user incase a request doesn't exist\n\t\t\tpreparer: task.u_request.opened_by.email.getDisplayValue() || task.u_user.email.getDisplayValue(),\n\t\t\trequester: task.u_user.email.getDisplayValue(),\n\t\t\ttitle: 'Workspace Store Order: ' + id,\n\t\t\tcompany_code: grCostCenter.u_company_code.getDisplayValue(),\n\t\t\tlow_po_balance_warning: 'false',\n\t\t\tnew_data_exchange: 'No',\n\t\t\tstore: this.getStoreName(task),\n\t\t\tpo_type: 'Fixed Invoice PO'\n\t\t});\n\n\t\tvar gl, grModel;\n\t\tvar shipTo = this.generateShipTo(task, grCostCenter);\n\t\t\n\t\tif(!shipTo) return this.error(task, 'AribaTask.createHardwareOrder(task, grCostCenter): Ship To could not be generated Task ' + task.getDisplayValue());\n\t\t\n\t\twhile (grItems.next()) {\n\t\t\t\n\t\t\tgrModel = grItems.cat_item.model.getRefRecord();\n\t\t\t// force it to a non-catalog order for the non visible ariba furniture catalog\n\t\t\tvar nonCatItem = grModel.getTableName() === 'cmdb_facility_product_model';\n\n\t\t\tthis.addItem({\n\t\t\t\tmodel: grModel,\n\t\t\t\tcompany_code: grCostCenter.u_company_code.getDisplayValue(),\n\t\t\t\tcost_center: grCostCenter.code.getDisplayValue(),\n\t\t\t\tgeneral_ledger: grModel.u_gl_code,\n\t\t\t\texternal_comment: metaData.notes,\n\t\t\t\treporting_field: task.u_user.email.getDisplayValue() + ' / ' + task.u_request.u_contact_information.getDisplayValue(),\n\t\t\t\tship_to: shipTo,\n\t\t\t\tnon_cat_item: nonCatItem\n\t\t\t\t//category: 'M'\n\t\t\t});\n\t\t\t//add bundled items to the order\n\t\t\tif (grModel.bundle) {\n\t\t\t\tvar additionalItem;\n\t\t\t\tvar grCmdbM2mModelComponent = new GlideRecord('cmdb_m2m_model_component');\n\t\t\t\tgrCmdbM2mModelComponent.addQuery(\"parent\", grModel.sys_id);\n\t\t\t\tgrCmdbM2mModelComponent.query();\n\t\t\t\twhile (grCmdbM2mModelComponent.next()) {\n\t\t\t\t\tadditionalItem = grCmdbM2mModelComponent.child.getRefRecord();\n\t\t\t\t\tif (additionalItem.isValidRecord()) { // << only perform operations on it if it's a valid record\n\t\t\t\t\t\tthis.addItem({\n\t\t\t\t\t\t\tmodel: additionalItem,\n\t\t\t\t\t\t\tcompany_code: grCostCenter.u_company_code.getDisplayValue(),\n\t\t\t\t\t\t\tcost_center: grCostCenter.code.getDisplayValue(),\n\t\t\t\t\t\t\tgeneral_ledger: additionalItem.u_gl_code,\n\t\t\t\t\t\t\texternal_comment: metaData.notes,\n\t\t\t\t\t\t\treporting_field: task.u_user.email.getDisplayValue() + ' / ' + task.u_request.u_contact_information.getDisplayValue(),\n\t\t\t\t\t\t\tship_to: shipTo,\n\t\t\t\t\t\t\tnon_cat_item: nonCatItem\n\t\t\t\t\t\t\t//category: 'M'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.getOrder();\n\t},\n\n\tcreateSoftwareOrder: function (task, isUpdate) {\n\t\tif (task.u_model.isNil()) return this.error(task, 'AribaTask.createSoftwareOrder(task): Missing Software Model');\n\t\tif (task.u_user.isNil()) return this.error(task, 'AribaTask.createSoftwareOrder(task): Missing Ship To User');\n\n\t\tvar id = task.number.getDisplayValue();\n\n\t\tthis.createOrder({\n\t\t\tref_id: id,\n\t\t\tbusiness_justification: 'Other',\n\t\t\tpreparer: task.u_model.u_adobe_owner.email.getDisplayValue(),\n\t\t\trequester: task.u_model.u_adobe_owner.email.getDisplayValue(),\n\t\t\ttitle: 'Workspace Store Order: ' + id,\n\t\t\tcompany_code: 'ADUS',\n\t\t\tlow_po_balance_warning: 'false',\n\t\t\tnew_data_exchange: 'No',\n\t\t\tstore: 'WSS Software',\n\t\t\tpo_type: 'Fixed Invoice PO'\n\t\t});\n\n\t\t/*\n\t\tFor services, which Software is, there has to be a timeline for when the services start and when they end.\n\t\tThis is more important for someone performing a service. For software it is less important.\n\n\t\tThe date MUST be in the future.\n\t\tThe date MUST not be in the past when it's purchased.\n\t\tWe've been guided to provide good information. We will not be penalized for not being perfect.\n\t\t3 violations of paying for services previously rendered will cause an action.\n\t\t*/\n\t\tvar now = new Date();\n\t\tvar startDate = new Date(now.getTime() + (14 * 24 * 60 * 60 * 1000));\n\t\tvar endDate;\n\n\t\t//Does the description contain the word 'month'\n\t\tif (task.u_model.short_description.getDisplayValue().toLowerCase().indexOf('month') !== -1) {\n\t\t\tendDate = new Date(startDate.getTime() + (31 * 24 * 60 * 60 * 1000));\n\t\t} else {\n\t\t\tendDate = new Date(startDate.getTime() + (365 * 24 * 60 * 60 * 1000));\n\t\t}\n\n\t\tthis.addItem({\n\t\t\tmodel: task.u_model.getRefRecord(),\n\t\t\tcompany_code: 'ADUS',\n\t\t\tcost_center: this._software_cost_center,\n\t\t\tgeneral_ledger: this._software_general_ledger,\n\t\t\texternal_comment: '',\n\t\t\tdeliver_to: task.u_user.getDisplayValue(), //Do not use this field in PRs with multiple line items.\n\t\t\treporting_field: task.u_user.email.getDisplayValue(),\n\t\t\tship_to: '0024',\n\t\t\tstart_date: startDate.toISOString(),\n\t\t\tend_date: endDate.toISOString(),\n\t\t\tcategory: 'Z'\n\t\t});\n\n\t\treturn this.getOrder();\n\t},\n\n\t//Identify the type of request this is.\n\t_getType: function (task) {\n\t\t//Tasks can either be an REQ or a Model.\n\t\t//Software orders are tackled individually, and should be a Model\n\t\t//Hardware is tackled by supplier, and should be an REQ\n\n\t\t//If it's an REQ, order all the necessary items in the REQ\n\t\tvar request = task.u_request.getRefRecord();\n\n\t\t//If it's a Model, check the type and create the correct order.\n\t\tvar model = task.u_model.getRefRecord();\n\n\t\t//TODO: How do I tell if this request is a Hardware Request?\n\t\t//      For now I'll try to just not make Software sc_requests\n\t\tif (request.isValidRecord())\n\t\t\treturn this.TYPE.HARDWARE;\n\t\telse if (model.isValidRecord() && model.getTableName() == 'cmdb_software_product_model')\n\t\t\treturn this.TYPE.SOFTWARE;\n\n\t\treturn this.error(task, 'AribaTask._getType(task): TYPE could not be identified for Ariba Task ' + task.getDisplayValue());\n\t},\n\n\torder: function (task) {\n\t\ttry {\n\n\t\t\tvar soapOrder = null;\n\n\t\t\tswitch (this._getType(task)) {\n\t\t\t\tcase this.TYPE.HARDWARE: soapOrder = this.createHardwareOrder(task); break;\n\t\t\t\tcase this.TYPE.SOFTWARE: soapOrder = this.createSoftwareOrder(task); break;\n\t\t\t}\n\n\t\t\tif (typeof soapOrder === 'object') {\n\t\t\t\tthis.startRuntime();\n\t\t\t\tvar response = soapOrder.execute();\n\t\t\t\tvar responseBody = response.getBody();\n\t\t\t\tvar status = response.getStatusCode();\n\t\t\t\ttask.work_notes.setJournalEntry('Ariba response:\\t(' + this.getRuntime().getByFormat('HH:mm:ss.SSS') + ')\\n\\nStatus Code: ' + status + '\\n\\nBody:\\n' + responseBody);\n\t\t\t\ttask.work_notes.setJournalEntry(\n\t\t\t\t\t'Ariba called with:\\n\\n' +\n\t\t\t\t\tsoapOrder.getRequestBody()\n\t\t\t\t\t\t.replace(/(<urn:CustomString name=\"OptionalReportingField\">)([\\s\\S]*?)(<\\/urn:CustomString>)/g, '$1<OptionalReportingField - hidden for privacy requirements>$3')\n\t\t\t\t\t\t.replace(/(<urn:DeliverTo>)([\\s\\S]*?)(<\\/urn:DeliverTo>)/g, '$1<delivery address - hidden for privacy requirements>$3')\n\t\t\t\t);\n\n\t\t\t\t//If successful\n\t\t\t\tif (responseBody.includes('StatusString')) {\n\t\t\t\t\tvar xmlDoc = new XMLDocument2();\n\t\t\t\t\txmlDoc.parseXML(responseBody);\n\t\t\t\t\tvar statusString = xmlDoc.getNodeText('//StatusString');\n\t\t\t\t\ttask.setValue('u_status', statusString);\n\t\t\t\t\ttask.setValue('u_purchase_request', xmlDoc.getNodeText('//UniqueName'));\n\n\t\t\t\t\tif (['Submitted', 'Ordered', 'Ordering', 'Receiving', 'Received', 'Approved'].indexOf(statusString) !== -1) {\n\t\t\t\t\t\t//Thumbs up!\n\t\t\t\t\t\ttask.update();\n\t\t\t\t\t} else if (statusString == 'Composing') {\n\t\t\t\t\t\tthis.error(task, 'Entry is stuck in Composing. I should probably do something more than just adding this comment');\n\t\t\t\t\t} else if (statusString != 'Failed') {\n\t\t\t\t\t\tthis.error(task, 'Ariba Status was \"' + statusString + '\". Script Include \"AribaTask\" was not configured to handle this status');\n\t\t\t\t\t}\n\t\t\t\t} else {//If fails\n\t\t\t\t\ttask.setValue('u_status', 'Failed');\n\t\t\t\t\tthis.error(task);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.error(task, 'AribaTask.order(task): Could not identify what needed to be ordered');\n\t\t\t}\n\n\t\t} catch (ex) {\n\t\t\tthis.error(task, 'Exception Error: \\n\\n' + JSON.stringify(ex, null, 2));\n\t\t}\n\t},\n\n\n\tupdateAllOpenOrders: function () {\n\t\tvar grAribaTasks = new GlideRecord('u_ariba_task');\n\t\tgrAribaTasks.addNotNullQuery('u_purchase_request');\n\t\t//ignore error status as of now to capture issues after tagging required for assets \n\t\t//may need to be refined when we get into trouble when api-call count gets to high\n\t\t//grAribaTasks.addQuery('u_error', 'false');\n\t\tgrAribaTasks.addQuery('u_status', 'NOT IN', ['Completed', 'Cancelled', 'Canceling', 'Denied', 'Failed' ,'Invalid']);\n\t\tgrAribaTasks.addQuery('state', '1'); //Open\n\t\tgrAribaTasks.query();\n\t\t\n\t\tvar batch = [];\n\n\t\twhile (grAribaTasks.next()) {\n\n\t\t\tbatch.push({\n\t\t\t\tsys_id: grAribaTasks.sys_id.getDisplayValue(),\n\t\t\t\tid: grAribaTasks.u_purchase_request.getDisplayValue(),\n\t\t\t\tstatus: grAribaTasks.u_status.getDisplayValue(),\n\t\t\t\ttype: this._getType(grAribaTasks)\n\t\t\t});\n\n\t\t\tif (batch.length === 40) {\n\t\t\t\tthis.updatePurchaseRequest(batch);\n\t\t\t\tbatch = [];\n\t\t\t}\n\t\t}\n\n\t\tif (batch.length) {\n\t\t\tthis.updatePurchaseRequest(batch);\n\t\t}\n\t},\n\n\tcreateNewOrder: function (current) {\n\t\tcurrent.u_status = 'Processing';\n\t\tcurrent.update();\n\t\tthis.order(current);\n\t},\n\n\tcreateAllNewOrders: function () {\n\t\tvar grAribaTasks = new GlideRecord('u_ariba_task');\n\t\tgrAribaTasks.addQuery('u_purchase_request', '');\n\t\tgrAribaTasks.addQuery('u_status', 'New');\n\t\tgrAribaTasks.addQuery('state', '1'); //Open\n\t\tgrAribaTasks.addQuery('u_error', 'false');\n\t\tgrAribaTasks.query();\n\n\t\twhile (grAribaTasks.next()) {\n\t\t\tgrAribaTasks.u_status = 'Processing';\n\t\t\tgrAribaTasks.update();\n\t\t\tthis.order(grAribaTasks);\n\t\t}\n\t},\n\n\tmakeMePreparer: function (task) {\n\t\ttry {\n\n\t\t\tvar soapOrder = null;\n\n\t\t\tswitch (this._getType(task)) {\n\t\t\t\tcase this.TYPE.HARDWARE: soapOrder = this.createHardwareOrder(task, true); break;\n\t\t\t\tcase this.TYPE.SOFTWARE: soapOrder = this.createSoftwareOrder(task, true); break;\n\t\t\t}\n\n\t\t\tthis.changeOperation('Update');\n\t\t\tsoapOrder.setStringParameter('preparer', gs.getUser().getEmail());\n\n\t\t\tif (soapOrder) {\n\t\t\t\tvar response = soapOrder.execute();\n\t\t\t\tvar responseBody = response.getBody();\n\t\t\t\tvar status = response.getStatusCode();\n\n\t\t\t\tgs.addInfoMessage('Status: ' + status + '\\n\\nResponse Body:' + responseBody);\n\n\t\t\t\treturn status;\n\t\t\t}\n\t\t} catch (ex) {\n\t\t\tthis.error(task, 'Exception Error: \\n\\n' + JSON.stringify(ex, null, 2));\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\trevertAll: function (task) {\n\t\ttry {\n\n\t\t\tvar soapOrder = null;\n\n\t\t\tswitch (this._getType(task)) {\n\t\t\t\tcase this.TYPE.HARDWARE: soapOrder = this.createHardwareOrder(task, true); break;\n\t\t\t\tcase this.TYPE.SOFTWARE: soapOrder = this.createSoftwareOrder(task, true); break;\n\t\t\t}\n\n\t\t\tthis.changeOperation('Update');\n\n\t\t\tif (soapOrder) {\n\t\t\t\tvar response = soapOrder.execute();\n\t\t\t\tvar responseBody = response.getBody();\n\t\t\t\tvar status = response.getStatusCode();\n\n\t\t\t\tgs.addInfoMessage('Status: ' + status + '\\n\\nResponse Body:' + responseBody);\n\n\t\t\t\treturn status;\n\t\t\t}\n\t\t} catch (ex) {\n\t\t\tthis.error(task, 'Exception Error: \\n\\n' + JSON.stringify(ex, null, 2));\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\terror: function (task, error, setError) {\n\t\ttask.u_error = setError !== false;\n\t\tif (error) task.work_notes.setJournalEntry(error);\n\t\treturn task.update();\n\t},\n\n\ttype: 'AribaTask'\n};\"-->","action":"docs-process-maker","response":null},
{"cuid":"cld4ng0dh008ipq24z23cfcme","createdAt":"2023-01-20 21:00:59.237","updatedAt":"2023-01-20 21:00:59.237","userCuid":"cld9unimy0058ucgucxhie01n","prompt":"Summarize this text for me in a few sentences.\"\nvar AribaTask = Class.create();\nAribaTask.prototype = {\n\tinitialize: function () {\n\t\t//Purchase configuration\n\t\tthis._software_cost_center = gs.getProperty('adb.store.protected.ariba.software.cost_center');\n\t\tthis._software_general_ledger = gs.getProperty('adb.store.protected.ariba.software.general_ledger');\n\t\tthis._furniture_general_ledger = gs.getProperty('adb.store.protected.ariba.furniture.general_ledger');\n\t\tthis._hardware_general_ledger = gs.getProperty('adb.store.protected.ariba.hardware.general_ledger');\n\t\tthis._ariba_ship_to = gs.getProperty('adb.store.protected.ariba.ship_to');\n\t\tthis.realm = gs.getProperty('adb.store.protected.ariba.realm');\n\t\tthis.file_upload_secret = gs.getProperty('adb.store.protected.ariba.file_upload_secret');\n\t\tthis.snaplogic_environment = gs.getProperty('adb.store.protected.snaplogic.environment');\n\t\tthis.snaplogic_token = gs.getProperty('adb.store.protected.snaplogic.token');\n\n\t\t//Decorators\n\t\tnew AribaTaskUtil(this);\n\t\tnew AribaTaskCore(this);\n\t\tnew AribaTaskAdmin(this);\n\t\tnew AribaTaskAPI(this);\n\t\tnew AribaTaskAPIPurchaseRequest(this);\n\t\tnew AribaTaskAPICatalog(this);\n\t\tnew AribaTaskWorkflowUtil(this);\n\n\t\t//Global Constants\n\t\tthis.TYPE = {\n\t\t\t'HARDWARE': 1,\n\t\t\t'SOFTWARE': 2\n\t\t};\n\t},\n\n\tcreateHardwareOrder: function (task, isUpdate) {\n\t\t//Validate the Request\n\t\tif (task.u_supplier_id.isNil()) return this.error(task, 'AribaTask.createHardwareOrder(task): Missing a supplier');\n\t\tif (task.u_user.isNil()) return this.error(task, 'AribaTask.createHardwareOrder(task): Missing Ship To User');\n\t\tif (task.u_request.delivery_address.isNil()) return this.error(task, 'AribaTask.createHardwareOrder(task): Missing Delivery Address');\n\n\t\t//Get meta data fields\n\t\tvar metaData = task.u_request.special_instructions.getValue();\n\t\ttry {\n\t\t\tmetaData = JSON.parse(metaData);\n\t\t} catch (err) {\n\t\t\treturn this.error(task, 'AribaTask.createHardwareOrder(task): Could not parse Special Instructions.');\n\t\t}\n\n\t\t//Validate Cost Center\n\t\tif (!('cc' in metaData)) return this.error(task, 'AribaTask.createHardwareOrder(task): Request missing Cost Center.');\n\t\tvar grCostCenter = new GlideRecord('cmn_cost_center');\n\t\tif (!grCostCenter.get(metaData.cc)) return this.error(task, 'AribaTask.createHardwareOrder(task): Invalid Cost Center Sys Id ' + metaData.cc + '.');\n\t\tif (grCostCenter.code.nil()) return this.error(task, 'AribaTask.createHardwareOrder(task): Cost Center Sys Id (' + metaData.cc + ') has no code.');\n\t\tif (grCostCenter.u_company_code.nil()) return this.error(task, 'AribaTask.createHardwareOrder(task): Cost Center (' + grCostCenter.code.getDisplayValue() + ') has no Company Code.');\n\n\t\t//Check there are items to order\n\t\tvar grItems = new GlideRecord('sc_req_item');\n\t\tgrItems.addQuery('request', task.u_request.getValue());\n\t\tgrItems.addQuery('cat_item.model.u_supplier_id', task.u_supplier_id.getValue());\n\t\tgrItems.query();\n\n\t\t//If there are no items or item, throw an error\n\t\tif (grItems.getRowCount() == 0) {\n\t\t\treturn this.error(task, 'AribaTask.createHardwareOrder(task): ' + task.u_request.getDisplayValue() + ' has no items for supplier \"' + task.u_supplier_id.getDisplayValue() + '\".');\n\t\t}\n\n\t\t//Create the order\n\t\tvar id = task.number.getDisplayValue();\n\t\tif (gs.getProperty('instance_name') !== 'adobe') {\n\t\t\tvar opened = new GlideDateTime(task.opened_at);\n\t\t\tid += '-' + opened.getNumericValue();\n\t\t}\n\n\t\tthis.createOrder({\n\t\t\tref_id: id,\n\t\t\tbusiness_justification: 'Other',\n\t\t\t//TODO: SN and Business Use should only be passed in for orders containing a computer that requires them\n\t\t\tserial_number: 'WSS Order',\n\t\t\treplacement_type: 'Primary Machine',\n\t\t\t//Preparer is either the person who opened the request, or the same user incase a request doesn't exist\n\t\t\tpreparer: task.u_request.opened_by.email.getDisplayValue() || task.u_user.email.getDisplayValue(),\n\t\t\trequester: task.u_user.email.getDisplayValue(),\n\t\t\ttitle: 'Workspace Store Order: ' + id,\n\t\t\tcompany_code: grCostCenter.u_company_code.getDisplayValue(),\n\t\t\tlow_po_balance_warning: 'false',\n\t\t\tnew_data_exchange: 'No',\n\t\t\tstore: this.getStoreName(task),\n\t\t\tpo_type: 'Fixed Invoice PO'\n\t\t});\n\n\t\tvar gl, grModel;\n\t\tvar shipTo = this.generateShipTo(task, grCostCenter);\n\t\t\n\t\tif(!shipTo) return this.error(task, 'AribaTask.createHardwareOrder(task, grCostCenter): Ship To could not be generated Task ' + task.getDisplayValue());\n\t\t\n\t\twhile (grItems.next()) {\n\t\t\t\n\t\t\tgrModel = grItems.cat_item.model.getRefRecord();\n\t\t\t// force it to a non-catalog order for the non visible ariba furniture catalog\n\t\t\tvar nonCatItem = grModel.getTableName() === 'cmdb_facility_product_model';\n\n\t\t\tthis.addItem({\n\t\t\t\tmodel: grModel,\n\t\t\t\tcompany_code: grCostCenter.u_company_code.getDisplayValue(),\n\t\t\t\tcost_center: grCostCenter.code.getDisplayValue(),\n\t\t\t\tgeneral_ledger: grModel.u_gl_code,\n\t\t\t\texternal_comment: metaData.notes,\n\t\t\t\treporting_field: task.u_user.email.getDisplayValue() + ' / ' + task.u_request.u_contact_information.getDisplayValue(),\n\t\t\t\tship_to: shipTo,\n\t\t\t\tnon_cat_item: nonCatItem\n\t\t\t\t//category: 'M'\n\t\t\t});\n\t\t\t//add bundled items to the order\n\t\t\tif (grModel.bundle) {\n\t\t\t\tvar additionalItem;\n\t\t\t\tvar grCmdbM2mModelComponent = new GlideRecord('cmdb_m2m_model_component');\n\t\t\t\tgrCmdbM2mModelComponent.addQuery(\"parent\", grModel.sys_id);\n\t\t\t\tgrCmdbM2mModelComponent.query();\n\t\t\t\twhile (grCmdbM2mModelComponent.next()) {\n\t\t\t\t\tadditionalItem = grCmdbM2mModelComponent.child.getRefRecord();\n\t\t\t\t\tif (additionalItem.isValidRecord()) { // << only perform operations on it if it's a valid record\n\t\t\t\t\t\tthis.addItem({\n\t\t\t\t\t\t\tmodel: additionalItem,\n\t\t\t\t\t\t\tcompany_code: grCostCenter.u_company_code.getDisplayValue(),\n\t\t\t\t\t\t\tcost_center: grCostCenter.code.getDisplayValue(),\n\t\t\t\t\t\t\tgeneral_ledger: additionalItem.u_gl_code,\n\t\t\t\t\t\t\texternal_comment: metaData.notes,\n\t\t\t\t\t\t\treporting_field: task.u_user.email.getDisplayValue() + ' / ' + task.u_request.u_contact_information.getDisplayValue(),\n\t\t\t\t\t\t\tship_to: shipTo,\n\t\t\t\t\t\t\tnon_cat_item: nonCatItem\n\t\t\t\t\t\t\t//category: 'M'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.getOrder();\n\t},\n\n\tcreateSoftwareOrder: function (task, isUpdate) {\n\t\tif (task.u_model.isNil()) return this.error(task, 'AribaTask.createSoftwareOrder(task): Missing Software Model');\n\t\tif (task.u_user.isNil()) return this.error(task, 'AribaTask.createSoftwareOrder(task): Missing Ship To User');\n\n\t\tvar id = task.number.getDisplayValue();\n\n\t\tthis.createOrder({\n\t\t\tref_id: id,\n\t\t\tbusiness_justification: 'Other',\n\t\t\tpreparer: task.u_model.u_adobe_owner.email.getDisplayValue(),\n\t\t\trequester: task.u_model.u_adobe_owner.email.getDisplayValue(),\n\t\t\ttitle: 'Workspace Store Order: ' + id,\n\t\t\tcompany_code: 'ADUS',\n\t\t\tlow_po_balance_warning: 'false',\n\t\t\tnew_data_exchange: 'No',\n\t\t\tstore: 'WSS Software',\n\t\t\tpo_type: 'Fixed Invoice PO'\n\t\t});\n\n\t\t/*\n\t\tFor services, which Software is, there has to be a timeline for when the services start and when they end.\n\t\tThis is more important for someone performing a service. For software it is less important.\n\n\t\tThe date MUST be in the future.\n\t\tThe date MUST not be in the past when it's purchased.\n\t\tWe've been guided to provide good information. We will not be penalized for not being perfect.\n\t\t3 violations of paying for services previously rendered will cause an action.\n\t\t*/\n\t\tvar now = new Date();\n\t\tvar startDate = new Date(now.getTime() + (14 * 24 * 60 * 60 * 1000));\n\t\tvar endDate;\n\n\t\t//Does the description contain the word 'month'\n\t\tif (task.u_model.short_description.getDisplayValue().toLowerCase().indexOf('month') !== -1) {\n\t\t\tendDate = new Date(startDate.getTime() + (31 * 24 * 60 * 60 * 1000));\n\t\t} else {\n\t\t\tendDate = new Date(startDate.getTime() + (365 * 24 * 60 * 60 * 1000));\n\t\t}\n\n\t\tthis.addItem({\n\t\t\tmodel: task.u_model.getRefRecord(),\n\t\t\tcompany_code: 'ADUS',\n\t\t\tcost_center: this._software_cost_center,\n\t\t\tgeneral_ledger: this._software_general_ledger,\n\t\t\texternal_comment: '',\n\t\t\tdeliver_to: task.u_user.getDisplayValue(), //Do not use this field in PRs with multiple line items.\n\t\t\treporting_field: task.u_user.email.getDisplayValue(),\n\t\t\tship_to: '0024',\n\t\t\tstart_date: startDate.toISOString(),\n\t\t\tend_date: endDate.toISOString(),\n\t\t\tcategory: 'Z'\n\t\t});\n\n\t\treturn this.getOrder();\n\t},\n\n\t//Identify the type of request this is.\n\t_getType: function (task) {\n\t\t//Tasks can either be an REQ or a Model.\n\t\t//Software orders are tackled individually, and should be a Model\n\t\t//Hardware is tackled by supplier, and should be an REQ\n\n\t\t//If it's an REQ, order all the necessary items in the REQ\n\t\tvar request = task.u_request.getRefRecord();\n\n\t\t//If it's a Model, check the type and create the correct order.\n\t\tvar model = task.u_model.getRefRecord();\n\n\t\t//TODO: How do I tell if this request is a Hardware Request?\n\t\t//      For now I'll try to just not make Software sc_requests\n\t\tif (request.isValidRecord())\n\t\t\treturn this.TYPE.HARDWARE;\n\t\telse if (model.isValidRecord() && model.getTableName() == 'cmdb_software_product_model')\n\t\t\treturn this.TYPE.SOFTWARE;\n\n\t\treturn this.error(task, 'AribaTask._getType(task): TYPE could not be identified for Ariba Task ' + task.getDisplayValue());\n\t},\n\n\torder: function (task) {\n\t\ttry {\n\n\t\t\tvar soapOrder = null;\n\n\t\t\tswitch (this._getType(task)) {\n\t\t\t\tcase this.TYPE.HARDWARE: soapOrder = this.createHardwareOrder(task); break;\n\t\t\t\tcase this.TYPE.SOFTWARE: soapOrder = this.createSoftwareOrder(task); break;\n\t\t\t}\n\n\t\t\tif (typeof soapOrder === 'object') {\n\t\t\t\tthis.startRuntime();\n\t\t\t\tvar response = soapOrder.execute();\n\t\t\t\tvar responseBody = response.getBody();\n\t\t\t\tvar status = response.getStatusCode();\n\t\t\t\ttask.work_notes.setJournalEntry('Ariba response:\\t(' + this.getRuntime().getByFormat('HH:mm:ss.SSS') + ')\\n\\nStatus Code: ' + status + '\\n\\nBody:\\n' + responseBody);\n\t\t\t\ttask.work_notes.setJournalEntry(\n\t\t\t\t\t'Ariba called with:\\n\\n' +\n\t\t\t\t\tsoapOrder.getRequestBody()\n\t\t\t\t\t\t.replace(/(<urn:CustomString name=\"OptionalReportingField\">)([\\s\\S]*?)(<\\/urn:CustomString>)/g, '$1<OptionalReportingField - hidden for privacy requirements>$3')\n\t\t\t\t\t\t.replace(/(<urn:DeliverTo>)([\\s\\S]*?)(<\\/urn:DeliverTo>)/g, '$1<delivery address - hidden for privacy requirements>$3')\n\t\t\t\t);\n\n\t\t\t\t//If successful\n\t\t\t\tif (responseBody.includes('StatusString')) {\n\t\t\t\t\tvar xmlDoc = new XMLDocument2();\n\t\t\t\t\txmlDoc.parseXML(responseBody);\n\t\t\t\t\tvar statusString = xmlDoc.getNodeText('//StatusString');\n\t\t\t\t\ttask.setValue('u_status', statusString);\n\t\t\t\t\ttask.setValue('u_purchase_request', xmlDoc.getNodeText('//UniqueName'));\n\n\t\t\t\t\tif (['Submitted', 'Ordered', 'Ordering', 'Receiving', 'Received', 'Approved'].indexOf(statusString) !== -1) {\n\t\t\t\t\t\t//Thumbs up!\n\t\t\t\t\t\ttask.update();\n\t\t\t\t\t} else if (statusString == 'Composing') {\n\t\t\t\t\t\tthis.error(task, 'Entry is stuck in Composing. I should probably do something more than just adding this comment');\n\t\t\t\t\t} else if (statusString != 'Failed') {\n\t\t\t\t\t\tthis.error(task, 'Ariba Status was \"' + statusString + '\". Script Include \"AribaTask\" was not configured to handle this status');\n\t\t\t\t\t}\n\t\t\t\t} else {//If fails\n\t\t\t\t\ttask.setValue('u_status', 'Failed');\n\t\t\t\t\tthis.error(task);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.error(task, 'AribaTask.order(task): Could not identify what needed to be ordered');\n\t\t\t}\n\n\t\t} catch (ex) {\n\t\t\tthis.error(task, 'Exception Error: \\n\\n' + JSON.stringify(ex, null, 2));\n\t\t}\n\t},\n\n\n\tupdateAllOpenOrders: function () {\n\t\tvar grAribaTasks = new GlideRecord('u_ariba_task');\n\t\tgrAribaTasks.addNotNullQuery('u_purchase_request');\n\t\t//ignore error status as of now to capture issues after tagging required for assets \n\t\t//may need to be refined when we get into trouble when api-call count gets to high\n\t\t//grAribaTasks.addQuery('u_error', 'false');\n\t\tgrAribaTasks.addQuery('u_status', 'NOT IN', ['Completed', 'Cancelled', 'Canceling', 'Denied', 'Failed' ,'Invalid']);\n\t\tgrAribaTasks.addQuery('state', '1'); //Open\n\t\tgrAribaTasks.query();\n\t\t\n\t\tvar batch = [];\n\n\t\twhile (grAribaTasks.next()) {\n\n\t\t\tbatch.push({\n\t\t\t\tsys_id: grAribaTasks.sys_id.getDisplayValue(),\n\t\t\t\tid: grAribaTasks.u_purchase_request.getDisplayValue(),\n\t\t\t\tstatus: grAribaTasks.u_status.getDisplayValue(),\n\t\t\t\ttype: this._getType(grAribaTasks)\n\t\t\t});\n\n\t\t\tif (batch.length === 40) {\n\t\t\t\tthis.updatePurchaseRequest(batch);\n\t\t\t\tbatch = [];\n\t\t\t}\n\t\t}\n\n\t\tif (batch.length) {\n\t\t\tthis.updatePurchaseRequest(batch);\n\t\t}\n\t},\n\n\tcreateNewOrder: function (current) {\n\t\tcurrent.u_status = 'Processing';\n\t\tcurrent.update();\n\t\tthis.order(current);\n\t},\n\n\tcreateAllNewOrders: function () {\n\t\tvar grAribaTasks = new GlideRecord('u_ariba_task');\n\t\tgrAribaTasks.addQuery('u_purchase_request', '');\n\t\tgrAribaTasks.addQuery('u_status', 'New');\n\t\tgrAribaTasks.addQuery('state', '1'); //Open\n\t\tgrAribaTasks.addQuery('u_error', 'false');\n\t\tgrAribaTasks.query();\n\n\t\twhile (grAribaTasks.next()) {\n\t\t\tgrAribaTasks.u_status = 'Processing';\n\t\t\tgrAribaTasks.update();\n\t\t\tthis.order(grAribaTasks);\n\t\t}\n\t},\n\n\tmakeMePreparer: function (task) {\n\t\ttry {\n\n\t\t\tvar soapOrder = null;\n\n\t\t\tswitch (this._getType(task)) {\n\t\t\t\tcase this.TYPE.HARDWARE: soapOrder = this.createHardwareOrder(task, true); break;\n\t\t\t\tcase this.TYPE.SOFTWARE: soapOrder = this.createSoftwareOrder(task, true); break;\n\t\t\t}\n\n\t\t\tthis.changeOperation('Update');\n\t\t\tsoapOrder.setStringParameter('preparer', gs.getUser().getEmail());\n\n\t\t\tif (soapOrder) {\n\t\t\t\tvar response = soapOrder.execute();\n\t\t\t\tvar responseBody = response.getBody();\n\t\t\t\tvar status = response.getStatusCode();\n\n\t\t\t\tgs.addInfoMessage('Status: ' + status + '\\n\\nResponse Body:' + responseBody);\n\n\t\t\t\treturn status;\n\t\t\t}\n\t\t} catch (ex) {\n\t\t\tthis.error(task, 'Exception Error: \\n\\n' + JSON.stringify(ex, null, 2));\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\trevertAll: function (task) {\n\t\ttry {\n\n\t\t\tvar soapOrder = null;\n\n\t\t\tswitch (this._getType(task)) {\n\t\t\t\tcase this.TYPE.HARDWARE: soapOrder = this.createHardwareOrder(task, true); break;\n\t\t\t\tcase this.TYPE.SOFTWARE: soapOrder = this.createSoftwareOrder(task, true); break;\n\t\t\t}\n\n\t\t\tthis.changeOperation('Update');\n\n\t\t\tif (soapOrder) {\n\t\t\t\tvar response = soapOrder.execute();\n\t\t\t\tvar responseBody = response.getBody();\n\t\t\t\tvar status = response.getStatusCode();\n\n\t\t\t\tgs.addInfoMessage('Status: ' + status + '\\n\\nResponse Body:' + responseBody);\n\n\t\t\t\treturn status;\n\t\t\t}\n\t\t} catch (ex) {\n\t\t\tthis.error(task, 'Exception Error: \\n\\n' + JSON.stringify(ex, null, 2));\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\terror: function (task, error, setError) {\n\t\ttask.u_error = setError !== false;\n\t\tif (error) task.work_notes.setJournalEntry(error);\n\t\treturn task.update();\n\t},\n\n\ttype: 'AribaTask'\n};","action":"summarize-1","response":null},
{"cuid":"cld50uphf009kpq24no0mbf8g","createdAt":"2023-01-21 03:16:19.972","updatedAt":"2023-01-21 03:16:23.88","userCuid":"cld9unimx003iucguho1c4kb0","prompt":"Summarize this text for me in a few sentences.\"\nfunction getDateFilterOptions() {\n\tanswer.add('001_Today@javascript:gs.daysAgoStart(0)@javascript:gs.daysAgoEnd(0)', gs.getMessage('Today'));\n\tanswer.add('005_Yesterday@javascript:gs.daysAgoStart(1)@javascript:gs.daysAgoEnd(1)', gs.getMessage('Yesterday'));\n\tanswer.add('010_Tomorrow@javascript:gs.daysAgoStart(-1)@javascript:gs.daysAgoEnd(-1)', gs.getMessage('Tomorrow'));\n\tanswer.add('015_This week@javascript:gs.beginningOfThisWeek()@javascript:gs.endOfThisWeek()', gs.getMessage('This Week'));\n\tanswer.add('020_Last week@javascript:gs.beginningOfLastWeek()@javascript:gs.endOfLastWeek()', gs.getMessage('Last Week'));\n\tanswer.add('025_Next week@javascript:gs.beginningOfNextWeek()@javascript:gs.endOfNextWeek()', gs.getMessage('Next Week'));\n\tanswer.add('030_This month@javascript:gs.beginningOfThisMonth()@javascript:gs.endOfThisMonth()', gs.getMessage('This month'));\n\tanswer.add('035_Last month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()', gs.getMessage('Last month'));\n\tanswer.add('040_Next month@javascript:gs.beginningOfNextMonth()@javascript:gs.endOfNextMonth()', gs.getMessage('Next month'));\n\tanswer.add('045_Last 3 months@javascript:gs.monthsAgoStart(3)@javascript:gs.endOfThisMonth()', gs.getMessage('Last 3 months'));\n\tanswer.add('050_Last 6 months@javascript:gs.monthsAgoStart(6)@javascript:gs.endOfThisMonth()', gs.getMessage('Last 6 months'));\n\tanswer.add('055_Last 9 months@javascript:gs.monthsAgoStart(9)@javascript:gs.endOfThisMonth()', gs.getMessage('Last 9 months'));\n\tanswer.add('060_Last 12 months@javascript:gs.monthsAgoStart(12)@javascript:gs.endOfThisMonth()', gs.getMessage('Last 12 months'));\n\tanswer.add('065_This quarter@javascript:gs.beginningOfThisQuarter()@javascript:gs.endOfThisQuarter()', gs.getMessage('This quarter'));\n\tanswer.add('070_Last quarter@javascript:gs.quartersAgoStart(1)@javascript:gs.quartersAgoEnd(1)', gs.getMessage('Last quarter'));\n\tanswer.add('075_Last 2 quarters@javascript:gs.quartersAgoStart(1)@javascript:gs.endOfThisQuarter()', gs.getMessage('Last 2 quarters'));\n\tanswer.add('080_Next quarter@javascript:gs.quartersAgoStart(-1)@javascript:gs.quartersAgoEnd(-1)', gs.getMessage('Next quarter'));\n\tanswer.add('085_Next 2 quarters@javascript:gs.quartersAgoStart(-1)@javascript:gs.quartersAgoEnd(-2)', gs.getMessage('Next 2 quarters'));\n\tanswer.add('090_This year@javascript:gs.beginningOfThisYear()@javascript:gs.endOfThisYear()', gs.getMessage('This year'));\n\tanswer.add('095_Next year@javascript:gs.beginningOfNextYear()@javascript:gs.endOfNextYear()', gs.getMessage('Next year'));\n\tanswer.add('100_Last year@javascript:gs.beginningOfLastYear()@javascript:gs.endOfLastYear()', gs.getMessage('Last year'));\n\tanswer.add('105_Last 2 years@javascript:gs.beginningOfLastYear()@javascript:gs.endOfThisYear()', gs.getMessage('Last 2 years'));\n\tanswer.add('110_Last 7 days@javascript:gs.daysAgoStart(7)@javascript:gs.daysAgoEnd(0)', gs.getMessage('Last 7 days'));\n\tanswer.add('115_Last 30 days@javascript:gs.daysAgoStart(30)@javascript:gs.daysAgoEnd(0)', gs.getMessage('Last 30 days'));\n\tanswer.add('120_Last 60 days@javascript:gs.daysAgoStart(60)@javascript:gs.daysAgoEnd(0)', gs.getMessage('Last 60 days'));\n\tanswer.add('125_Last 90 days@javascript:gs.daysAgoStart(90)@javascript:gs.daysAgoEnd(0)', gs.getMessage('Last 90 days'));\n\tanswer.add('130_Last 120 days@javascript:gs.daysAgoStart(120)@javascript:gs.daysAgoEnd(0)', gs.getMessage('Last 120 days'));\n\tanswer.add('135_Current hour@javascript:gs.hoursAgoStart(0)@javascript:gs.hoursAgoEnd(0)', gs.getMessage('Current hour'));\n\tanswer.add('140_Last hour@javascript:gs.hoursAgoStart(1)@javascript:gs.hoursAgoEnd(1)', gs.getMessage('Last hour'));\n\tanswer.add('145_Last 2 hours@javascript:gs.hoursAgo(2)@javascript:gs.hoursAgo(0)', gs.getMessage('Last 2 hours'));\n\tanswer.add('150_Current minute@javascript:gs.minutesAgoStart(0)@javascript:gs.minutesAgoEnd(0)', gs.getMessage('Current minute'));\n\tanswer.add('155_Last minute@javascript:gs.minutesAgoStart(1)@javascript:gs.minutesAgoEnd(1)', gs.getMessage('Last minute'));\n\tanswer.add('160_Last 15 minutes@javascript:gs.minutesAgoStart(15)@javascript:gs.minutesAgoEnd(0)', gs.getMessage('Last 15 minutes'));\n\tanswer.add('165_Last 30 minutes@javascript:gs.minutesAgoStart(30)@javascript:gs.minutesAgoEnd(0)', gs.getMessage('Last 30 minutes'));\n\tanswer.add('170_Last 45 minutes@javascript:gs.minutesAgoStart(45)@javascript:gs.minutesAgoEnd(0)', gs.getMessage('Last 45 minutes'));\n\tanswer.add('175_One year ago@javascript:gs.monthsAgo(12)@javascript:gs.endOfThisMonth()', gs.getMessage('One year ago'));\n\t\n}","action":"summarize-1","response":"\n\nThis text contains a list of date filter options, such as \"Today\", \"Tomorrow\", \"Last Quarter\", and \"Next Year\". These options all have specific start and end dates associated with them."},
{"cuid":"cld4qksgo008kpq24beuquszk","createdAt":"2023-01-20 22:28:41.113","updatedAt":"2023-01-20 22:28:43.447","userCuid":"cld9unimw002gucgu13sg3h6i","prompt":"\n// Prompt: Create a script that sets the assignment group to the Manager's group if the priority is 1.\n(function executeRule(current, previous) {\n    if (current.getValue('priority', '1')) {\n        current.setValue('group', current.manager.group + '');\n    }\n})(current, previous);\n// Prompt: when status changes, if closed, set active to false\n(function executeRule(current, previous) {\n    // condition current.status.changes()\n    if (current.status == 'closed_created' || current.status == 'closed_duplicate' || current.status == 'closed_invalid') {\n        current.active = false;\n    } else {\n        current.active = true;\n    }\n})(current, previous);\n// Prompt: when change request changes, set parent to change request\n(function executeRule(current, previous) {\n    // condition current.change_request.changes()\n    current.parent = current.change_request;\n})(current, previous);\n// Prompt: do not allow changes to others delegates\n(function executeRule(current, previous) {\n    // condition current.user != gs.getUserID() && !gs.hasRole('admin')\n    gs.addInfoMessage(gs.getMessage(\"Cannot assign or modify other users' Delegates\"));\n    current.setAbortAction(true);\n})(current, previous);\n// Prompt: get the bot icon for slack, and set it from the response\n(function executeRule(current, previous) {\n    try {\n        var req = new sn_ws.RESTMessageV2();\n        req.setEndpoint('https://slack.com/api/team.info');\n        req.setHttpMethod('get');\n        var e = new GlideEncryptionUtil();\n        var authToken = e.getClearPassword2('token_verification', 'token', current.provider_auth.outbound_message_creation);\n        if (JSUtil.notNil(authToken))\n            req.setRequestHeader('Authorization', 'Bearer ' + authToken);\n        var resp = req.execute();\n        var team_icon = JSON.parse(resp.getBody()).team.icon.image_88;\n        current.setValue(\"icon\", team_icon);\n    } catch (ex) {\n        gs.error('Error getting slack team info: ' + ex.getMessage());\n    }\n})(current, previous);\n// Prompt: when the start and end dates change, only allow dates where the start is before the end\n(function executeRule(current, previous) {\n    // condition current.start_date.changes() || current.end_date.changes()\n    if (!current.start_date.nil() && !current.end_date.nil() && current.start_date > current.end_date) {\n        current.setAbortAction(true);\n        gs.addErrorMessage(gs.getMessage(\"The start date cannot be after the end date\"));\n    }\n})(current, previous);\n// Prompt: when the date changes is empty, format it in the star trek format (YYYY.ElapsedDays) and set it in the star date field\n(function executeRule(current, previous) {\n    // condition current.date.changes()\n    if (!current.date.nil()) {\n        var date = new GlideDateTime(current.date);\n        var year = date.getYear();\n        var elapsedDays = date.getElapsed(date.getNumericValue());\n        current.star_date = year + '.' + elapsedDays;\n    }\n})(current, previous);\n// Prompt: when case type field is blood type choose assignment group blood work\n","action":"complete","response":"(function executeRule(current, previous) {\n    if (current.getValue('case_type') == 'blood_type') {\n        current.setValue('group', 'blood_work');\n    }\n})(current, previous);\n"},
{"cuid":"cld4qovm6008mpq24qfoaq30t","createdAt":"2023-01-20 22:31:51.823","updatedAt":"2023-01-20 22:31:54.706","userCuid":"cld9unimw002gucgu13sg3h6i","prompt":"\n// Prompt: Create a script that sets the assignment group to the Manager's group if the priority is 1.\n(function executeRule(current, previous) {\n    if (current.getValue('priority', '1')) {\n        current.setValue('group', current.manager.group + '');\n    }\n})(current, previous);\n// Prompt: when status changes, if closed, set active to false\n(function executeRule(current, previous) {\n    // condition current.status.changes()\n    if (current.status == 'closed_created' || current.status == 'closed_duplicate' || current.status == 'closed_invalid') {\n        current.active = false;\n    } else {\n        current.active = true;\n    }\n})(current, previous);\n// Prompt: when change request changes, set parent to change request\n(function executeRule(current, previous) {\n    // condition current.change_request.changes()\n    current.parent = current.change_request;\n})(current, previous);\n// Prompt: do not allow changes to others delegates\n(function executeRule(current, previous) {\n    // condition current.user != gs.getUserID() && !gs.hasRole('admin')\n    gs.addInfoMessage(gs.getMessage(\"Cannot assign or modify other users' Delegates\"));\n    current.setAbortAction(true);\n})(current, previous);\n// Prompt: get the bot icon for slack, and set it from the response\n(function executeRule(current, previous) {\n    try {\n        var req = new sn_ws.RESTMessageV2();\n        req.setEndpoint('https://slack.com/api/team.info');\n        req.setHttpMethod('get');\n        var e = new GlideEncryptionUtil();\n        var authToken = e.getClearPassword2('token_verification', 'token', current.provider_auth.outbound_message_creation);\n        if (JSUtil.notNil(authToken))\n            req.setRequestHeader('Authorization', 'Bearer ' + authToken);\n        var resp = req.execute();\n        var team_icon = JSON.parse(resp.getBody()).team.icon.image_88;\n        current.setValue(\"icon\", team_icon);\n    } catch (ex) {\n        gs.error('Error getting slack team info: ' + ex.getMessage());\n    }\n})(current, previous);\n// Prompt: when the start and end dates change, only allow dates where the start is before the end\n(function executeRule(current, previous) {\n    // condition current.start_date.changes() || current.end_date.changes()\n    if (!current.start_date.nil() && !current.end_date.nil() && current.start_date > current.end_date) {\n        current.setAbortAction(true);\n        gs.addErrorMessage(gs.getMessage(\"The start date cannot be after the end date\"));\n    }\n})(current, previous);\n// Prompt: when the date changes is empty, format it in the star trek format (YYYY.ElapsedDays) and set it in the star date field\n(function executeRule(current, previous) {\n    // condition current.date.changes()\n    if (!current.date.nil()) {\n        var date = new GlideDateTime(current.date);\n        var year = date.getYear();\n        var elapsedDays = date.getElapsed(date.getNumericValue());\n        current.star_date = year + '.' + elapsedDays;\n    }\n})(current, previous);\n// Prompt: if case type field is blood type choose assignment group blood work, if case type field is allergies choose assignment group allergies, if case type field is health risk choose assignment group health risk\n","action":"complete","response":"(function executeRule(current, previous) {\n    // condition current.case_type.changes()\n    if (current.case_type == 'blood_type') {\n        current.setValue('group', 'Blood Work');\n    } else if (current.case_type == 'allergies') {\n        current.setValue('group', 'Allergies');\n    } else if (current.case_type == 'health_risk') {\n        current.setValue('group', 'Health Risk');\n    }\n})(current, previous);\n"},
{"cuid":"cld4s3e5a008qpq24ggrj9s4k","createdAt":"2023-01-20 23:11:08.638","updatedAt":"2023-01-20 23:11:12.032","userCuid":"cld9unimx003yucgufk6bd2qv","prompt":"<!--Prompt: Sequence between alice and john-->\n<div class=\"mermaid\">\nsequenceDiagram\n    Alice->>+John: Hello John, how are you?\n    Alice->>+John: John, can you hear me?\n    John-->>-Alice: Hi Alice, I can hear you!\n    John-->>-Alice: I feel great!\n</div>\n<!--Prompt: Flow with one task, no approvals-->\n<div class=\"mermaid\">\nflowchart\n  S0(Start)\n  T1(Task 1)\n  E0(End)\n  S0-->T1\n  T1-->E0\n</div>\n<!--Prompt: Flow with two tasks, no approvals in parellel-->\n<div class=\"mermaid\">\nflowchart\n  S0(Start)\n  T1(Task 1)\n  T2(Task 2)\n  E0(End)\n  S0-->T1\n  S0-->T2\n  T1-->E0\n  T2-->E0\n</div>\n<!--Prompt: Flow with two tasks, no approvals in serial-->\n<div class=\"mermaid\">\nflowchart\n  S0(Start)\n  T1(Task 1)\n  T2(Task 2)\n  E0(End)\n  S0-->T1\n  T1-->T2\n  T2-->E0\n</div>\n<!--Prompt: Flow with one tasks and one approval-->\n<div class=\"mermaid\">\nflowchart\n  S0(Start)\n  A1(Approval 1)\n  T1(Task 1)\n  E0(End)\n  S0-->A1\n  A1--Rejected-->E0\n  A1--Approved-->T1\n  T1-->E0\n</div>\n<!--Prompt: Flow with two tasks, and an approvals in serial-->\n<div class=\"mermaid\">\nflowchart\n  S0(Start)\n  A1(Approval 1)\n  T1(Task 1)\n  T2(Task 2)\n  E0(End)\n  S0-->A1\n  A1--Rejected-->E0\n  A1--Approved-->T1\n  T1-->T2\n  T2-->E0\n</div>\n<!--Prompt: Flow with two approvals in serial, and one task-->\n<div class=\"mermaid\">\nflowchart\n  S0(Start)\n  A1(Approval 1)\n  A2(Approval 2)\n  T1(Task 1)\n  E0(End)\n  S0-->A1\n  A1--Rejected-->E0\n  A1--Approved-->A2\n  A2--Rejected-->E0\n  A2--Approved-->T1\n  T1-->E0\n</div>\n<!--Prompt: Flow with two tasks, and two approvals in serial-->\n<div class=\"mermaid\">\nflowchart\n  S0(Start)\n  A1(Approval 1)\n  A2(Approval 2)\n  T1(Task 1)\n  T2(Task 2)\n  E0(End)\n  S0-->A1\n  A1--Rejected-->E0\n  A1--Approved-->A2\n  A2--Rejected-->E0\n  A2--Approved-->T1\n  T1-->T2\n  T2-->E0\n</div>\n<!--Prompt: pie chart of pets adopted by volunteers-->\n<div class=\"mermaid\">\npie title Pets adopted by volunteers\n  \"Dogs\" : 386\n  \"Cats\" : 85\n  \"Rats\" : 15\n</div>\n<!--Prompt: ServiceNow Certificate Integration Sequence Diagram-->\n<div class=\"mermaid\">\nsequenceDiagram\n  participant ui as User Interactions\n  participant sn as Servicenow\n  participant ms as MidServer\n  participant co as Certificate Authority\n  ui->>sn: User Requests Cert\n  sn->>ms: Run generate-csr-key.js\n  ms->>co: CSR,KEY, and Enrolls Cert\n  co->>sn: Returns Order #\n  loop Download\n  sn->>sn: Waits 2 minutes\n  sn->>ms: Run download-zip-and-upload-cert.js\n  ms->>co: Download Cert\n  co->>sn: Cert Processing\n  end\n  co->>ms: Cert Downloaded\n  ms->>ms: Generate CRT\n  ms->>ms: Generate PFX\n  ms->>ms: Zip CRT, PFX, P7B\n  ms->>sn: Send Zip to SN\n  sn->>ui: Notify user with zip file\n</div>\n<!--Prompt: Show the flow of interactions between a user and an e-commerce website when placing an order.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>E-commerce Website: Place Order\n    E-commerce Website->>Payment Gateway: Verify Payment\n    Payment Gateway->>E-commerce Website: Payment Approved\n    E-commerce Website->>Logistics Company: Prepare Shipment\n    Logistics Company->>E-commerce Website: Shipment Prepared\n    E-commerce Website->>User: Order Confirmation\n</div>\n<!-- Prompt: Illustrate the communication between a mobile app and a server during the login process.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>Mobile App: Login\n    Mobile App->>Server: Send Login Credentials\n    Server->>Authentication Service: Verify Login Credentials\n    Authentication Service->>Server: Credentials Verified\n    Server->>Mobile App: Login Successful\n</div>\n<!-- Prompt: Depict the sequence of events that occur when a user searches for a product on a search engine.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>Search Engine: Search\n    Search Engine->>Search Service: Get Results\n    Search Service->>Index: Retrieve Matches\n    Index->>Search Service: Return Matches\n    Search Service->>Search Engine: Send Results\n    Search Engine->>User: Display Results\n</div>\n<!-- Prompt: Show the interactions between different modules within a banking system during a money transfer operation.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>Banking System: Transfer Money\n    Banking System->>Account Service: Check Balance\n    Account Service->>Banking System: Return Balance\n    Banking System->>Security Service: Verify Transaction\n    Security Service->>Banking System: Transaction Verified\n    Banking System->>Account Service: Deduct Funds\n    Account Service->>Banking System: Funds Deducted\n    Banking System->>Account Service: Add Funds\n    Account Service->>Banking System: Funds Added\n    Banking System->>User: Transaction Complete\n</div>\n<!-- Prompt: Create a sequence diagram that demonstrates the process of video streaming from a server to a client.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>Video Player: Play\n    Video Player->>Server: Request Video\n    Server->>Video Service: Get Video\n    Video Service->>Server: Return Video\n    Server->>Video Player: Send Video\n    Video Player->>User: Display Video\n</div>\n<!-- Prompt: Describe the flow of interactions between a user, a website, and a payment gateway during an online transaction.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>E-commerce Website: Buy Item\n    E-commerce Website->>Payment Gateway: Verify Payment\n    Payment Gateway->>User: Payment Approval\n    User->>E-commerce Website: Confirm Purchase\n    E-commerce Website->>Payment Gateway: Payment Confirmed\n    Payment Gateway->>E-commerce Website: Payment Received\n</div>\n<!-- Prompt: Illustrate the sequence of events that occur when a user logs in to a social media platform.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>Social Media Platform: Login\n    Social Media Platform->>Authentication Service: Verify Login Credentials\n    Authentication Service->>Social Media Platform: Credentials Verified\n    Social Media Platform->>User: Login Successful\n</div>\n<!-- Prompt: Depict the communication between a client and a server during a file upload process.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>Client: Upload file\n    Client->>Server: Send File\n    Server->>File Service: Save File\n    File Service->>Server: File Saved\n    Server->>Client: File Upload Successful\n</div>\n<!-- Prompt: Create a sequence diagram that demonstrates the process of sending an email using an email client.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>Email Client: Compose email\n    Email Client->>SMTP Server: Send email\n    SMTP Server->>MTA: Transfer email\n    MTA->>MDA: Deliver email\n    MDA->>Recipients email client: Display email\n</div>\nA pie chart showing the percentage of global energy consumption by source (fossil fuels, nuclear, hydro, solar, etc.):-->\n<div class=\"mermaid\">\npie\n   \"Fossil Fuels\" : 45,\n   \"Nuclear\" : 20,\n   \"Hydro\" : 10,\n   \"Solar\" : 15,\n   \"Other\" : 10\n</div>\n<!-- Prompt: A pie chart showing the distribution of expenses in a household budget:-->\n<div class=\"mermaid\">\n  pie\n    \"Rent/Mortgage\" : 30,\n    \"Utilities\" : 10,\n    \"Food\" : 20,\n    \"Transportation\" : 15,\n    \"Entertainment\" : 10,\n    \"Savings\" : 15\n</div>\n<!-- Prompt: A pie chart showing the market share of different smartphone brands:-->\n<div class=\"mermaid\">\n  pie\n    \"Samsung\" : 30,\n    \"Apple\" : 20,\n    \"Huawei\" : 15,\n    \"Xiaomi\" : 10,\n    \"Other\" : 25\n</div>\n<!-- Prompt: A pie chart showing the proportion of students in a school by grade level:-->\n<div class=\"mermaid\">\n  pie\n    \"Kindergarten\" : 10,\n    \"Elementary\" : 25,\n    \"Middle School\" : 20,\n    \"High School\" : 30,\n    \"Other\" : 15\n</div>\n<!-- Prompt: A pie chart showing the percentage of website traffic by source (direct, search, referral, social):-->\n<div class=\"mermaid\">\n  pie\n    \"Direct\" : 40,\n    \"Search\" : 25,\n    \"Referral\" : 20,\n    \"Social\" : 15\n</div>\n<!-- Prompt: -->","action":"docs-diagram","response":"\n<div class=\"mermaid\">\n  pie\n    \"Direct\" : 40,\n    \"Search\" : 25,\n    \"Referral\" : 20,\n    \"Social\" : 15\n</div>\n"},
{"cuid":"cld4svzky008spq24v2zv7kuk","createdAt":"2023-01-20 23:33:22.787","updatedAt":"2023-01-20 23:33:50.304","userCuid":"cld9unimw001yucgucbtj659g","prompt":"\n<!--Fill out the below given this prompt \"create a badge access form\".-->\n\n<h1>Badge Access</h1>\n\n<h2>Fields to track badge access</h2>\n<ol>\n<li>Badge ID</li>\n<li>Badge Holder Name</li>\n<li>Date Issued</li>\n<li>Expiration Date</li>\n<li>Access Level</li>\n<li>Building Access</li>\n<li>Areas Access</li>\n<li>Doors Access</li>\n<li>Time Zone Restrictions</li>\n<li>Status (Active/Inactive)</li>\n</ol>\n\n<h2>Roles</h2>\nIdentify the roles people need to take to request, approve, and fulfill.\n<ul>\n<li>Request: Badge Holder</li>\n<li>Approve: Security/Administrative Personnel</li>\n<li>Fulfill: Security/Administrative Personnel</li>\n</ul>\n\n<h2>Self Service Form</h2>\n<ul>\n<li>Badge Holder Name</li>\n<li>Access Level</li>\n<li>Building Access</li>\n<li>Areas Access</li>\n<li>Doors Access</li>\n<li>Time Zone Restrictions</li>\n</ul>\n\n<h3>Process</h3>\n<div class=\"mermaid\">\ngraph TD\n  S0(Start)\n  A1(Approval for access)\n  T1(Task to fulfill access)\n  Sc1(Schedule expiration)\n  E0(End)\n\n  S0-->A1\n  A1--Rejected-->E0\n  A1--Approved-->T1\n  T1-->Sc1\n  Sc1-->E0\n</div>\n<h3>Integration</h3>\nCreate an integration between ServiceNow and BadgeSystem to automatically provision access.\n\nPossible paths for this.\n<ul>\n<li>BadgeSystem polls ServiceNow</li>\n  <ul>\n  <li>Every hour BadgeSystem hits the TableAPI for outstanding tasks.</li>\n  <li>Updates the tasks that automated work has started.</li>\n  <li>Processes the tasks.</li>\n  <li>If processing succeeds, close the task with success</li>\n  <li>Else Update the task that automation has failed</li>\n  </ul>\n<li>ServiceNow makes a rest call</li>\n  <li>When a task is ready to process e.g. state changes to ready, send a rest call to BadgeSystem</li>\n  <li>If processing succeeds, close the task with success</li>\n  <li>Else Update the task that automation has failed</li>\n</ul>\n<h3>Notifications</h3>\n\n<h4>Approval</h4>\nSubject: Badge Access Request for {current.variables.requested_for}\n\n{current.variables.requested_for} is requesting access to area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door}). Please review and approve or reject the request.\n\nThank you,\nSecurity Team\n\n<h4>Approved</h4>\nSubject: Badge Access Granted\n\nDear {current.variables.requested_for},\n\nYou have been granted access to area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door}). Your badge ID is {current.variables.badge_id} and it expires on {current.variables.expirationDate}.\n\nThank you,\nSecurity Team\n\n<h4>Rejected</h4>\nSubject: Badge Access Denied\n\nDear {current.variables.requested_for},\n\nYour request for access to area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door}) was denied. Please contact the Security Team for more information.\n\nThank you,\nSecurity Team\n\n<h4>Notice of expiring access</h4>\nSubject: Badge Access Expiring for area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door})\n\nDear {current.variables.requested_for},\n\nYour access to area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door}) expires in on on {current.variables.expirationDate}. If you still need this access please request it.\n\nThank you,\nSecurity Team\n\n<!--Fill out the below given this prompt \"Manage FOIA requests for contracts\".-->\n<h1>FOIA Request for Contracts </h1>\n\n<h2>Request Process</h2>\nCreate a process to allow for members of the public to submit FOIA requests for Contracts: \n<div class=\"mermaid\">\ngraph TD\n  S0((Start))\n  S1(Submit Request)\n  A2(Routing and receipt of  request)\n  A3(Review to determine if document is releasable)\n  T1(Obtain the requested document)\n  A4(Prepare releasable document)\n  A5(Approval to release)\n  T2(Produce requested document)\n  E0(End)\n\n  S0-->S1\n  S1-->A2\n  A2-->A3\n  A3--Yes-->T1\n  A3--No-->E0\n  T1-->A4\n  A4-->A5\n  A5--Yes-->T2\n  A5--No-->E0\n  T2-->E0\n</div>\n\n<h2>Roles</h2>\nIdentify any roles people need to take to request, approve, and fulfill.\n<ul>\n<li>Requester: Anyone can submit a request as long as the requirements are met.</li>\n<li>Approver: Agency representative or Agency FOIA Officer</li>\n<li>Fulfiller: Agency representative or Agency FOIA Officer</li>\n</ul>\n\n<h2>Self Service Form</h2>\nCreate fields for submitting a request in the ServiceNow Self Service Portal. \n<ol>\n<li>Requester Name</li>\n<li>Requester Phone</li>\n<li>Requester Email</li>\n<li>Agency Name</li>\n<li>Contract Number</li>\n<li>Brief description of the requested document</li>\n</ol>\n\n<h2>Notifications</h2>\n\n<h3>Request Submitted</h3>\nSubject: FOIA Request Submitted\n\nDear Applicant,\n\nYour FOIA request has been submitted. Your Request ID is: {current.variables.request_id}. Please note that your Request ID in all further correspondence.\n\nThank you,\nFOIA Office\n\n<h3>Request Received </h3>\nSubject: FOIA Request Received\n\nDear Agency Representative, \n\nA new FOIA request has been received. Please review the request and follow the process to respond. \n\nThank you, \nFOIA Office \n\n<h3>Request Approved </h3>\nSubject: FOIA Request Approved\n\nDear Agency Representative, \n\nFOIA Request {current.variables.request_id} has now been approved. Please proceed with preparing a releasable document. \n\nThank you,\nFOIA Office \n\n<h3>Request Rejected</h3>\nSubject: FOIA Request Rejected\n\nDear Applicant, \n\nYour FOIA Request {current.variables.request_id} has been rejected. Please contact the FOIA Representative for more information. \n\nThank you,\nFOIA Office\n<!--Fill out the below given this prompt \"Servicenow Clone Back process\"-->","action":"docs-process-maker","response":"\n<h1>Clone Back Process</h1>\n\n<h2>Request Process</h2>\nCreate a process for completing a Clone Back.\n<div class=\"mermaid\">\ngraph LR\n  S1(Submit request)\n  A2(Routing and receipt of  request)\n  T1(Check to see if record is locked)\n  A3(Determine if the record will be cloned back)\n  A4(Determine if the record is part of a production environment)\n  A5(Check to see if record is in use)\n  A6(Determine if clone back is allowed)\n  T2(Clone back record)\n  T3(Lock record)\n  E0(End)\n\n  S1-->A2\n  A2-->T1\n  T1--Yes-->A6\n  T1--No-->T3\n  A6--No-->E0\n  A6--Yes-->A3\n  A3--No-->E0\n  A3--Yes-->A4\n  A4--No-->T2\n  A4--Yes-->A5\n  A5--No-->T2\n  A5--Yes-->A6\n  T2-->E0\n  T3-->E0\n</div>\n\n<h2>Roles</h2>\nIdentify any roles people need to take to request, approve, and fulfill.\n<ul>\n<li>Requester: Anyone can submit a request as long as the requirements are met.</li>\n<li>Approver: System Administrator</li>\n<li>Fulfiller: System Administrator</li>\n</ul>\n\n<h2>Self Service Form</h2>\nCreate fields for submitting a request in the ServiceNow Self Service Portal. \n<ol>\n<li>Requester Name</li>\n<li>Requester Phone</li>\n<li>Requester Email</li>\n<li>Short Description</li>\n</ol>\n\n<h2>Notifications</h2>\n\n<h3>Request Submitted</h3>\nSubject: Clone Back Submitted\n\nDear Applicant,\n\nYour request has been submitted. Your Request ID is: {current.variables.request_id}. Please note that your Request ID in all further correspondence.\n\nThank you,\nSystem Administrator\n\n<h3>Request Received </h3>\nSubject: Clone Back Received\n\nDear System Administrator, \n\nA new clone back has been received. Please review the request and follow the process to respond. \n\nThank you, \nSystem Administrator \n\n<h3>Request Approved </h3>\nSubject: Clone Back Approved\n\nDear System Administrator, \n\nClone Back Request {current.variables.request_id} has now been approved. Please proceed with cloning back the record. \n\nThank you,\nSystem Administrator \n\n<h3>Request Rejected</h3>\nSubject: Clone Back Rejected\n\nDear Applicant, \n\nYour request {current.variables.request_id} has been rejected. Please contact the System Administrator for more information. \n\nThank you,\nSystem Administrator\n"},
{"cuid":"cld4u05mu008vpq24g67v9wg4","createdAt":"2023-01-21 00:04:36.87","updatedAt":"2023-01-21 00:04:37.859","userCuid":"cld9unimw001yucgucbtj659g","prompt":"2pm cst in gmt","action":"ask","response":"\n\n7pm GMT"},
{"cuid":"cld501mvj008ypq24v432dipj","createdAt":"2023-01-21 02:53:43.568","updatedAt":"2023-01-21 02:53:47.454","userCuid":"cld9unimw001yucgucbtj659g","prompt":"I was speaking with Amanda about this week, and we need to talk about SAM PRO.  One of the ways ServiceNow does licensing for SAM PRO is based on Servers (physical & virtual), and End User Compute (physical & virtual).  They only exclude Stolen, Retired, Absent status (which translates to asset status [Missing, Retired, and Missing] I think)\n\"\"\"\nRewrite the above to use the active voice and to be clear.","action":"ask","response":"\n\nAmanda and I need to discuss SAM PRO this week. ServiceNow licenses SAM PRO based on the number of physical and virtual servers, as well as physical and virtual end user compute devices, excluding assets with statuses of Missing, Retired, and Missing."},
{"cuid":"cld50a5oq0092pq24bywg20o1","createdAt":"2023-01-21 03:00:21.194","updatedAt":"2023-01-21 03:00:26.07","userCuid":"cld9unimw001yucgucbtj659g","prompt":"Hey Traci,\n\nAmanda is out this week and we need to get the quantity of Servers and End User Compute devices and their estimated yearly growth rate% to proceed with the SAM PRO pricing quote.\n\nServiceNow licenses SAM PRO based on the number of physical and virtual servers, as well as physical and virtual end user compute devices, excluding ci's with the status of Stolen, Retired, Absent (those translate to asset status of Retired, and Missing).\n\nMy numbers for those are;\nServers(on prem vm, cloud vm, on prem servers) : 50,187\nEnd User Compute(desktops/laptops/vdi's, etc): 141,784\n\nIf these numbers are incorrect, let's make a plan to correct the data.  I'm setting up this meetup to discuss.  \n\nOutcomes I'm looking for: Verification that these numbers are appropriate and an estimate growth %. \nIf not, let's make a plan to shore up these records in ServiceNow.\n\nI copied Amand and Cameron but I think it will jsut be the two of us if we cna't meet.\n\"\"\"\nRewrite the above to use the active voice and to be clear.  This should be in the form of a meeting summary and agenda.","action":"ask","response":"\n\nThis meeting is to discuss the quantity of Servers and End User Compute devices, and the estimated yearly growth rate for SAM PRO pricing quote. We need to verify that the numbers we have are correct (50,187 Servers and 141,784 End User Compute devices) and to estimate the growth rate. If the numbers are incorrect, we will make a plan to correct the data in ServiceNow. \n\nAgenda: \n1. Verify the numbers (50,187 Servers and 141,784 End User Compute devices).\n2. Estimate the growth rate.\n3. If the numbers are incorrect, make a plan to correct the data in ServiceNow."},
{"cuid":"cld50pyko0096pq246jocykei","createdAt":"2023-01-21 03:12:38.472","updatedAt":"2023-01-21 03:12:41.251","userCuid":"cld9unimx003iucguho1c4kb0","prompt":"\n// Prompt: Create a script that sets the assignment group to the Manager's group if the priority is 1.\n(function executeRule(current, previous) {\n    if (current.getValue('priority', '1')) {\n        current.setValue('group', current.manager.group + '');\n    }\n})(current, previous);\n// Prompt: when status changes, if closed, set active to false\n(function executeRule(current, previous) {\n    // condition current.status.changes()\n    if (current.status == 'closed_created' || current.status == 'closed_duplicate' || current.status == 'closed_invalid') {\n        current.active = false;\n    } else {\n        current.active = true;\n    }\n})(current, previous);\n// Prompt: when change request changes, set parent to change request\n(function executeRule(current, previous) {\n    // condition current.change_request.changes()\n    current.parent = current.change_request;\n})(current, previous);\n// Prompt: do not allow changes to others delegates\n(function executeRule(current, previous) {\n    // condition current.user != gs.getUserID() && !gs.hasRole('admin')\n    gs.addInfoMessage(gs.getMessage(\"Cannot assign or modify other users' Delegates\"));\n    current.setAbortAction(true);\n})(current, previous);\n// Prompt: get the bot icon for slack, and set it from the response\n(function executeRule(current, previous) {\n    try {\n        var req = new sn_ws.RESTMessageV2();\n        req.setEndpoint('https://slack.com/api/team.info');\n        req.setHttpMethod('get');\n        var e = new GlideEncryptionUtil();\n        var authToken = e.getClearPassword2('token_verification', 'token', current.provider_auth.outbound_message_creation);\n        if (JSUtil.notNil(authToken))\n            req.setRequestHeader('Authorization', 'Bearer ' + authToken);\n        var resp = req.execute();\n        var team_icon = JSON.parse(resp.getBody()).team.icon.image_88;\n        current.setValue(\"icon\", team_icon);\n    } catch (ex) {\n        gs.error('Error getting slack team info: ' + ex.getMessage());\n    }\n})(current, previous);\n// Prompt: when the start and end dates change, only allow dates where the start is before the end\n(function executeRule(current, previous) {\n    // condition current.start_date.changes() || current.end_date.changes()\n    if (!current.start_date.nil() && !current.end_date.nil() && current.start_date > current.end_date) {\n        current.setAbortAction(true);\n        gs.addErrorMessage(gs.getMessage(\"The start date cannot be after the end date\"));\n    }\n})(current, previous);\n// Prompt: when the date changes is empty, format it in the star trek format (YYYY.ElapsedDays) and set it in the star date field\n(function executeRule(current, previous) {\n    // condition current.date.changes()\n    if (!current.date.nil()) {\n        var date = new GlideDateTime(current.date);\n        var year = date.getYear();\n        var elapsedDays = date.getElapsed(date.getNumericValue());\n        current.star_date = year + '.' + elapsedDays;\n    }\n})(current, previous);\n// Prompt: Need to add new lines for options that allow to select dates for years 2020, 2021, 2022, 2023\n","action":"complete","response":"(function executeRule(current, previous) {\n    // condition current.year.changes()\n    if (!current.year.nil()) {\n        var year = current.year;\n        var date = new GlideDateTime();\n        date.setDate(1);\n        date.setMonth(1);\n        date.setYear(year);\n        var names = new Array();\n        var values = new Array();\n        var j = 1;\n        while (date.getYear() == year) {\n            values[values.length] = date.getValue();\n            names[names.length] = date.addDays(-1).shortDate();\n            date.addDays(-1);\n            j++;\n        }\n        for (var i = names.length - 1; i >= 0; i--) {\n            current.addOption(names[i], values[i]);\n        }\n    }\n})(current, previous);\n"},
{"cuid":"cld50qide0099pq24o6hnlsqs","createdAt":"2023-01-21 03:13:04.131","updatedAt":"2023-01-21 03:13:14.577","userCuid":"cld9unimx003iucguho1c4kb0","prompt":"function getDateFilterOptions() {\n\tanswer.add('001_Today@javascript:gs.daysAgoStart(0)@javascript:gs.daysAgoEnd(0)', gs.getMessage('Today'));\n\tanswer.add('005_Yesterday@javascript:gs.daysAgoStart(1)@javascript:gs.daysAgoEnd(1)', gs.getMessage('Yesterday'));\n\tanswer.add('010_Tomorrow@javascript:gs.daysAgoStart(-1)@javascript:gs.daysAgoEnd(-1)', gs.getMessage('Tomorrow'));\n\tanswer.add('015_This week@javascript:gs.beginningOfThisWeek()@javascript:gs.endOfThisWeek()', gs.getMessage('This Week'));\n\tanswer.add('020_Last week@javascript:gs.beginningOfLastWeek()@javascript:gs.endOfLastWeek()', gs.getMessage('Last Week'));\n\tanswer.add('025_Next week@javascript:gs.beginningOfNextWeek()@javascript:gs.endOfNextWeek()', gs.getMessage('Next Week'));\n\tanswer.add('030_This month@javascript:gs.beginningOfThisMonth()@javascript:gs.endOfThisMonth()', gs.getMessage('This month'));\n\tanswer.add('035_Last month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()', gs.getMessage('Last month'));\n\tanswer.add('040_Next month@javascript:gs.beginningOfNextMonth()@javascript:gs.endOfNextMonth()', gs.getMessage('Next month'));\n\tanswer.add('045_Last 3 months@javascript:gs.monthsAgoStart(3)@javascript:gs.endOfThisMonth()', gs.getMessage('Last 3 months'));\n\tanswer.add('050_Last 6 months@javascript:gs.monthsAgoStart(6)@javascript:gs.endOfThisMonth()', gs.getMessage('Last 6 months'));\n\tanswer.add('055_Last 9 months@javascript:gs.monthsAgoStart(9)@javascript:gs.endOfThisMonth()', gs.getMessage('Last 9 months'));\n\tanswer.add('060_Last 12 months@javascript:gs.monthsAgoStart(12)@javascript:gs.endOfThisMonth()', gs.getMessage('Last 12 months'));\n\tanswer.add('065_This quarter@javascript:gs.beginningOfThisQuarter()@javascript:gs.endOfThisQuarter()', gs.getMessage('This quarter'));\n\tanswer.add('070_Last quarter@javascript:gs.quartersAgoStart(1)@javascript:gs.quartersAgoEnd(1)', gs.getMessage('Last quarter'));\n\tanswer.add('075_Last 2 quarters@javascript:gs.quartersAgoStart(1)@javascript:gs.endOfThisQuarter()', gs.getMessage('Last 2 quarters'));\n\tanswer.add('080_Next quarter@javascript:gs.quartersAgoStart(-1)@javascript:gs.quartersAgoEnd(-1)', gs.getMessage('Next quarter'));\n\tanswer.add('085_Next 2 quarters@javascript:gs.quartersAgoStart(-1)@javascript:gs.quartersAgoEnd(-2)', gs.getMessage('Next 2 quarters'));\n\tanswer.add('090_This year@javascript:gs.beginningOfThisYear()@javascript:gs.endOfThisYear()', gs.getMessage('This year'));\n\tanswer.add('095_Next year@javascript:gs.beginningOfNextYear()@javascript:gs.endOfNextYear()', gs.getMessage('Next year'));\n\tanswer.add('100_Last year@javascript:gs.beginningOfLastYear()@javascript:gs.endOfLastYear()', gs.getMessage('Last year'));\n\tanswer.add('105_Last 2 years@javascript:gs.beginningOfLastYear()@javascript:gs.endOfThisYear()', gs.getMessage('Last 2 years'));\n\tanswer.add('110_Last 7 days@javascript:gs.daysAgoStart(7)@javascript:gs.daysAgoEnd(0)', gs.getMessage('Last 7 days'));\n\tanswer.add('115_Last 30 days@javascript:gs.daysAgoStart(30)@javascript:gs.daysAgoEnd(0)', gs.getMessage('Last 30 days'));\n\tanswer.add('120_Last 60 days@javascript:gs.daysAgoStart(60)@javascript:gs.daysAgoEnd(0)', gs.getMessage('Last 60 days'));\n\tanswer.add('125_Last 90 days@javascript:gs.daysAgoStart(90)@javascript:gs.daysAgoEnd(0)', gs.getMessage('Last 90 days'));\n\tanswer.add('130_Last 120 days@javascript:gs.daysAgoStart(120)@javascript:gs.daysAgoEnd(0)', gs.getMessage('Last 120 days'));\n\tanswer.add('135_Current hour@javascript:gs.hoursAgoStart(0)@javascript:gs.hoursAgoEnd(0)', gs.getMessage('Current hour'));\n\tanswer.add('140_Last hour@javascript:gs.hoursAgoStart(1)@javascript:gs.hoursAgoEnd(1)', gs.getMessage('Last hour'));\n\tanswer.add('145_Last 2 hours@javascript:gs.hoursAgo(2)@javascript:gs.hoursAgo(0)', gs.getMessage('Last 2 hours'));\n\tanswer.add('150_Current minute@javascript:gs.minutesAgoStart(0)@javascript:gs.minutesAgoEnd(0)', gs.getMessage('Current minute'));\n\tanswer.add('155_Last minute@javascript:gs.minutesAgoStart(1)@javascript:gs.minutesAgoEnd(1)', gs.getMessage('Last minute'));\n\tanswer.add('160_Last 15 minutes@javascript:gs.minutesAgoStart(15)@javascript:gs.minutesAgoEnd(0)', gs.getMessage('Last 15 minutes'));\n\tanswer.add('165_Last 30 minutes@javascript:gs.minutesAgoStart(30)@javascript:gs.minutesAgoEnd(0)', gs.getMessage('Last 30 minutes'));\n\tanswer.add('170_Last 45 minutes@javascript:gs.minutesAgoStart(45)@javascript:gs.minutesAgoEnd(0)', gs.getMessage('Last 45 minutes'));\n\tanswer.add('175_One year ago@javascript:gs.monthsAgo(12)@javascript:gs.endOfThisMonth()', gs.getMessage('One year ago'));\n\t\n}\n\"\"\"\ncurrent is tied to the sys_script record.\nExplain it like I'm five years old in the form of a list.\n1.","action":"explain","response":" function getDateFilterOptions() is created - It is going to take no arguments and will return an object\n2. answer.add is going to be called 15 times - It is going to add 15 items to the object created in step 1\n3. The first item being added will have the value of '001_Today@javascript:gs.daysAgoStart(0)@javascript:gs.daysAgoEnd(0)'\n4. The second item being added will have the value of '005_Yesterday@javascript:gs.daysAgoStart(1)@javascript:gs.daysAgoEnd(1)'\n5. This pattern continues until the fifteenth item is added\n6. Each item being added has a value and that value is a string made up of three parts\n7. The first part of the string is always a three digit number followed by an underscore\n8. The second part of the string is the name of the date range\n9. The third part of the string is always two javascript functions\n10. The first javascript function always starts with 'javascript:gs.daysAgoStart(' and ends with ')'\n11. The second javascript function always starts with 'javascript:gs.daysAgoEnd(' and ends with ')'\n12. The first javascript function is always going to have a number between the parentheses that is different than the number in the first part of the string\n13. The second javascript function is going to have a number between the parentheses that is always going to be one more than the number between the parentheses of the first javascript function\n14. The first part of the string is always going to be a unique identifier for that particular date range\n15. The name of the date range is going to be human readable\n16. The first and second javascript functions are going to return the start and end dates for the date range represented by the string"},
{"cuid":"cld50swif009fpq24dj3svm1u","createdAt":"2023-01-21 03:14:55.768","updatedAt":"2023-01-21 03:14:58.93","userCuid":"cld9unimx003iucguho1c4kb0","prompt":"\n// Prompt: Create a script that sets the assignment group to the Manager's group if the priority is 1.\n(function executeRule(current, previous) {\n    if (current.getValue('priority', '1')) {\n        current.setValue('group', current.manager.group + '');\n    }\n})(current, previous);\n// Prompt: when status changes, if closed, set active to false\n(function executeRule(current, previous) {\n    // condition current.status.changes()\n    if (current.status == 'closed_created' || current.status == 'closed_duplicate' || current.status == 'closed_invalid') {\n        current.active = false;\n    } else {\n        current.active = true;\n    }\n})(current, previous);\n// Prompt: when change request changes, set parent to change request\n(function executeRule(current, previous) {\n    // condition current.change_request.changes()\n    current.parent = current.change_request;\n})(current, previous);\n// Prompt: do not allow changes to others delegates\n(function executeRule(current, previous) {\n    // condition current.user != gs.getUserID() && !gs.hasRole('admin')\n    gs.addInfoMessage(gs.getMessage(\"Cannot assign or modify other users' Delegates\"));\n    current.setAbortAction(true);\n})(current, previous);\n// Prompt: get the bot icon for slack, and set it from the response\n(function executeRule(current, previous) {\n    try {\n        var req = new sn_ws.RESTMessageV2();\n        req.setEndpoint('https://slack.com/api/team.info');\n        req.setHttpMethod('get');\n        var e = new GlideEncryptionUtil();\n        var authToken = e.getClearPassword2('token_verification', 'token', current.provider_auth.outbound_message_creation);\n        if (JSUtil.notNil(authToken))\n            req.setRequestHeader('Authorization', 'Bearer ' + authToken);\n        var resp = req.execute();\n        var team_icon = JSON.parse(resp.getBody()).team.icon.image_88;\n        current.setValue(\"icon\", team_icon);\n    } catch (ex) {\n        gs.error('Error getting slack team info: ' + ex.getMessage());\n    }\n})(current, previous);\n// Prompt: when the start and end dates change, only allow dates where the start is before the end\n(function executeRule(current, previous) {\n    // condition current.start_date.changes() || current.end_date.changes()\n    if (!current.start_date.nil() && !current.end_date.nil() && current.start_date > current.end_date) {\n        current.setAbortAction(true);\n        gs.addErrorMessage(gs.getMessage(\"The start date cannot be after the end date\"));\n    }\n})(current, previous);\n// Prompt: when the date changes is empty, format it in the star trek format (YYYY.ElapsedDays) and set it in the star date field\n(function executeRule(current, previous) {\n    // condition current.date.changes()\n    if (!current.date.nil()) {\n        var date = new GlideDateTime(current.date);\n        var year = date.getYear();\n        var elapsedDays = date.getElapsed(date.getNumericValue());\n        current.star_date = year + '.' + elapsedDays;\n    }\n})(current, previous);\n// Prompt: Need to include date options for years 2020, 2021, 2022, 2023\n","action":"complete","response":"(function executeRule(current, previous) {\n    // condition current.date_options.nil()\n    if (current.date_options == '' || current.date_options == null) {\n        var date = new GlideDateTime(current.date);\n        var year = date.getYear();\n        current.date_options = '2020-' + (year + 1) + ', 2021-' + (year + 2) + ', 2022-' + (year + 3) + ', 2023-' + (year + 4);\n    }\n})(current, previous);\n"},
{"cuid":"cld50tad8009hpq24bf06fptb","createdAt":"2023-01-21 03:15:13.724","updatedAt":"2023-01-21 03:15:17.094","userCuid":"cld9unimx003iucguho1c4kb0","prompt":"Update this code based following this prompt, \"Need to include date options for years 2020, 2021, 2022, 2023\": (function executeRule(current, previous) {\n    // condition current.date_options.nil()\n    if (current.date_options == '' || current.date_options == null) {\n        var date = new GlideDateTime(current.date);\n        var year = date.getYear();\n        current.date_options = '2020-' + (year + 1) + ', 2021-' + (year + 2) + ', 2022-' + (year + 3) + ', 2023-' + (year + 4);\n    }\n})(current, previous);\n\n// Generated by scribe.monster ```","action":"edit","response":"\n\n(function executeRule(current, previous) {\n    // condition current.date_options.nil()\n    if (current.date_options == '' || current.date_options == null) {\n        var date = new GlideDateTime(current.date);\n        var year = date.getYear();\n        current.date_options = '2020-' + (year + 1) + ', 2021-' + (year + 2) + ', 2022-' + (year + 3) + ', 2023-' + (year + 4);\n    }\n})(current, previous);"},
{"cuid":"cld7ipujc00brpq24na2r1nrw","createdAt":"2023-01-22 21:11:58.681","updatedAt":"2023-01-22 21:12:07.843","userCuid":"cld9unimy004pucgu4tff4xl2","prompt":"give me some examples of gliderecord in servicenow\n\n\n\n","action":"ask","response":"\n1. Retrieve a specific record in a table:\nvar gr = new GlideRecord('incident');\ngr.get('number', 'INC00000');\n\n2. Retrieve all records in a table:\nvar gr = new GlideRecord('incident');\ngr.query();\n\n3. Retrieve records that match a query:\nvar gr = new GlideRecord('incident');\ngr.addQuery('active', true);\ngr.query();\n\n4. Update a record:\nvar gr = new GlideRecord('incident');\ngr.get('number', 'INC00000');\ngr.short_description = 'Updated description';\ngr.update();\n\n5. Insert a new record:\nvar gr = new GlideRecord('incident');\ngr.initialize();\ngr.short_description = 'New description';\ngr.insert();"},
{"cuid":"cld50x0cd009ppq24w41tbo2k","createdAt":"2023-01-21 03:18:07.358","updatedAt":"2023-01-21 03:18:13.277","userCuid":"cld9unimx003iucguho1c4kb0","prompt":"1. function getDateFilterOptions() is created - It is going to take no arguments and will return an object\n2. answer.add is going to be called 15 times - It is going to add 15 items to the object created in step 1\n3. The first item being added will have the value of '001_Today@javascript:gs.daysAgoStart(0)@javascript:gs.daysAgoEnd(0)'\n4. The second item being added will have the value of '005_Yesterday@javascript:gs.daysAgoStart(1)@javascript:gs.daysAgoEnd(1)'\n5. This pattern continues until the fifteenth item is added\n6. Each item being added has a value and that value is a string made up of three parts\n7. The first part of the string is always a three digit number followed by an underscore\n8. The second part of the string is the name of the date range\n9. The third part of the string is always two javascript functions\n10. The first javascript function always starts with 'javascript:gs.daysAgoStart(' and ends with ')'\n11. The second javascript function always starts with 'javascript:gs.daysAgoEnd(' and ends with ')'\n12. The first javascript function is always going to have a number between the parentheses that is different than the number in the first part of the string\n13. The second javascript function is going to have a number between the parentheses that is always going to be one more than the number between the parentheses of the first javascript function\n14. The first part of the string is always going to be a unique identifier for that particular date range\n15. The name of the date range is going to be human readable\n16. The first and second javascript functions are going to return the start and end dates for the date range represented by the string\n// Generated by scribe.monster\n\"\"\"\ncurrent is tied to the sys_script record.\nExplain it like I'm five years old in the form of a list.\n1.","action":"explain","response":" function getDateFilterOptions() is created - It is going to take no arguments and will return an object\n2. answer.add is going to be called 15 times - It is going to add 15 items to the object created in step 1\n3. The first item being added will have the value of '001_Today@javascript:gs.daysAgoStart(0)@javascript:gs.daysAgoEnd(0)'\n4. The second item being added will have the value of '005_Yesterday@javascript:gs.daysAgoStart(1)@javascript:gs.daysAgoEnd(1)'\n5. This pattern continues until the fifteenth item is added\n6. Each item being added has a value and that value is a string made up of three parts\n7. The first part of the string is always a three digit number followed by an underscore\n8. The second part of the string is the name of the date range\n9. The third part of the string is always two javascript functions\n10. The first javascript function always starts with 'javascript:gs.daysAgoStart(' and ends with ')'\n11. The second javascript function always starts with 'javascript:gs.daysAgoEnd(' and ends with ')'\n12. The first javascript function is always going to have a number between the parentheses that is different than the number in the first part of the string\n13. The second javascript function is going to have a number between the parentheses that is always going to be one more than the number between the parentheses of the first javascript function\n14. The first part of the string is always going to be a unique identifier for that particular date range\n15. The name of the date range is going to be human readable\n16. The first and second javascript functions are going to return the start and end dates for the date range represented by the string"},
{"cuid":"cld50x7lo009spq24zhiw9kfh","createdAt":"2023-01-21 03:18:16.764","updatedAt":"2023-01-21 03:18:23.807","userCuid":"cld9unimx003iucguho1c4kb0","prompt":"Update this code based following this prompt, \"Need to include date options for years 2020, 2021, 2022, 2023\": 1. function getDateFilterOptions() is created - It is going to take no arguments and will return an object\n2. answer.add is going to be called 15 times - It is going to add 15 items to the object created in step 1\n3. The first item being added will have the value of '001_Today@javascript:gs.daysAgoStart(0)@javascript:gs.daysAgoEnd(0)'\n4. The second item being added will have the value of '005_Yesterday@javascript:gs.daysAgoStart(1)@javascript:gs.daysAgoEnd(1)'\n5. This pattern continues until the fifteenth item is added\n6. Each item being added has a value and that value is a string made up of three parts\n7. The first part of the string is always a three digit number followed by an underscore\n8. The second part of the string is the name of the date range\n9. The third part of the string is always two javascript functions\n10. The first javascript function always starts with 'javascript:gs.daysAgoStart(' and ends with ')'\n11. The second javascript function always starts with 'javascript:gs.daysAgoEnd(' and ends with ')'\n12. The first javascript function is always going to have a number between the parentheses that is different than the number in the first part of the string\n13. The second javascript function is going to have a number between the parentheses that is always going to be one more than the number between the parentheses of the first javascript function\n14. The first part of the string is always going to be a unique identifier for that particular date range\n15. The name of the date range is going to be human readable\n16. The first and second javascript functions are going to return the start and end dates for the date range represented by the string\n// Generated by scribe.monster ```","action":"edit","response":"\n\nfunction getDateFilterOptions() {\n  let answer = {};\n  answer.add = function (value) {\n    this[value] = value;\n  };\n  answer.add('001_Today@javascript:gs.daysAgoStart(0)@javascript:gs.daysAgoEnd(0)');\n  answer.add('005_Yesterday@javascript:gs.daysAgoStart(1)@javascript:gs.daysAgoEnd(1)');\n  answer.add('010_Last_7_days@javascript:gs.daysAgoStart(7)@javascript:gs.daysAgoEnd(1)');\n  answer.add('015_Last_30_days@javascript:gs.daysAgoStart(30)@javascript:gs.daysAgoEnd(1)');\n  answer.add('020_Month_to_date@javascript:gs.monthAgoStart(0)@javascript:gs.monthAgoEnd(0)');\n  answer.add('025_Quarter_to_date@javascript:gs.quarterAgoStart(0)@javascript:gs.quarterAgoEnd(0)');\n  answer.add('030_Year_to_date@javascript:gs.yearAgoStart(0)@javascript:gs.yearAgoEnd(0)');\n  answer.add('035_Previous_fiscal_quarter@javascript:gs.beginningOfPreviousFiscalQuarter()@javascript:gs.endOfPreviousFiscalQuarter()');\n  answer.add('040_Previous_fiscal_year@javascript:gs.beginningOfPreviousFiscalYear()@javascript:gs.endOfPreviousFiscalYear()');\n  answer.add('045_Current_fiscal_quarter@javascript:gs.beginningOfCurrentFiscalQuarter()@javascript:gs.endOfCurrentFiscalQuarter()');\n  answer.add('050_Current_fiscal_year@javascript:gs.beginningOfCurrentFiscalYear()@javascript:gs.endOfCurrentFiscalYear()');\n  answer.add('055_Next_fiscal_quarter@javascript:gs.beginningOfNextFiscalQuarter()@javascript:gs.endOfNextFiscal"},
{"cuid":"cld51a41p009vpq244zcypk6f","createdAt":"2023-01-21 03:28:18.685","updatedAt":"2023-01-21 03:28:20.661","userCuid":"cld9unimx003iucguho1c4kb0","prompt":"function getDateFilterOptions() {\n\tanswer.add('001_Today@javascript:gs.daysAgoStart(0)@javascript:gs.daysAgoEnd(0)', gs.getMessage('Today'));\n\tanswer.add('005_Yesterday@javascript:gs.daysAgoStart(1)@javascript:gs.daysAgoEnd(1)', gs.getMessage('Yesterday'));\n\tanswer.add('010_Tomorrow@javascript:gs.daysAgoStart(-1)@javascript:gs.daysAgoEnd(-1)', gs.getMessage('Tomorrow'));\n\tanswer.add('015_This week@javascript:gs.beginningOfThisWeek()@javascript:gs.endOfThisWeek()', gs.getMessage('This Week'));\n\tanswer.add('020_Last week@javascript:gs.beginningOfLastWeek()@javascript:gs.endOfLastWeek()', gs.getMessage('Last Week'));\n\tanswer.add('025_Next week@javascript:gs.beginningOfNextWeek()@javascript:gs.endOfNextWeek()', gs.getMessage('Next Week'));\n\tanswer.add('030_This month@javascript:gs.beginningOfThisMonth()@javascript:gs.endOfThisMonth()', gs.getMessage('This month'));\n\tanswer.add('035_Last month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()', gs.getMessage('Last month'));\n\tanswer.add('040_Next month@javascript:gs.beginningOfNextMonth()@javascript:gs.endOfNextMonth()', gs.getMessage('Next month'));\n\tanswer.add('045_Last 3 months@javascript:gs.monthsAgoStart(3)@javascript:gs.endOfThisMonth()', gs.getMessage('Last 3 months'));\n\tanswer.add('050_Last 6 months@javascript:gs.monthsAgoStart(6)@javascript:gs.endOfThisMonth()', gs.getMessage('Last 6 months'));\n\tanswer.add('055_Last 9 months@javascript:gs.monthsAgoStart(9)@javascript:gs.endOfThisMonth()', gs.getMessage('Last 9 months'));\n\tanswer.add('060_Last 12 months@javascript:gs.monthsAgoStart(12)@javascript:gs.endOfThisMonth()', gs.getMessage('Last 12 months'));\n\tanswer.add('065_This quarter@javascript:gs.beginningOfThisQuarter()@javascript:gs.endOfThisQuarter()', gs.getMessage('This quarter'));\n\tanswer.add('070_Last quarter@javascript:gs.quartersAgoStart(1)@javascript:gs.quartersAgoEnd(1)', gs.getMessage('Last quarter'));\n\tanswer.add('075_Last 2 quarters@javascript:gs.quartersAgoStart(1)@javascript:gs.endOfThisQuarter()', gs.getMessage('Last 2 quarters'));\n\tanswer.add('080_Next quarter@javascript:gs.quartersAgoStart(-1)@javascript:gs.quartersAgoEnd(-1)', gs.getMessage('Next quarter'));\n\tanswer.add('085_Next 2 quarters@javascript:gs.quartersAgoStart(-1)@javascript:gs.quartersAgoEnd(-2)', gs.getMessage('Next 2 quarters'));\n\tanswer.add('090_This year@javascript:gs.beginningOfThisYear()@javascript:gs.endOfThisYear()', gs.getMessage('This year'));\n\tanswer.add('095_Next year@javascript:gs.beginningOfNextYear()@javascript:gs.endOfNextYear()', gs.getMessage('Next year'));\n\tanswer.add('100_Last year@javascript:gs.beginningOfLastYear()@javascript:gs.endOfLastYear()', gs.getMessage('Last year'));\n\tanswer.add('105_Last 2 years@javascript:gs.beginningOfLastYear()@javascript:gs.endOfThisYear()', gs.getMessage('Last 2 years'));\n\tanswer.add('110_Last 7 days@javascript:gs.daysAgoStart(7)@javascript:gs.daysAgoEnd(0)', gs.getMessage('Last 7 days'));\n\tanswer.add('115_Last 30 days@javascript:gs.daysAgoStart(30)@javascript:gs.daysAgoEnd(0)', gs.getMessage('Last 30 days'));\n\tanswer.add('120_Last 60 days@javascript:gs.daysAgoStart(60)@javascript:gs.daysAgoEnd(0)', gs.getMessage('Last 60 days'));\n\tanswer.add('125_Last 90 days@javascript:gs.daysAgoStart(90)@javascript:gs.daysAgoEnd(0)', gs.getMessage('Last 90 days'));\n\tanswer.add('130_Last 120 days@javascript:gs.daysAgoStart(120)@javascript:gs.daysAgoEnd(0)', gs.getMessage('Last 120 days'));\n\tanswer.add('135_Current hour@javascript:gs.hoursAgoStart(0)@javascript:gs.hoursAgoEnd(0)', gs.getMessage('Current hour'));\n\tanswer.add('140_Last hour@javascript:gs.hoursAgoStart(1)@javascript:gs.hoursAgoEnd(1)', gs.getMessage('Last hour'));\n\tanswer.add('145_Last 2 hours@javascript:gs.hoursAgo(2)@javascript:gs.hoursAgo(0)', gs.getMessage('Last 2 hours'));\n\tanswer.add('150_Current minute@javascript:gs.minutesAgoStart(0)@javascript:gs.minutesAgoEnd(0)', gs.getMessage('Current minute'));\n\tanswer.add('155_Last minute@javascript:gs.minutesAgoStart(1)@javascript:gs.minutesAgoEnd(1)', gs.getMessage('Last minute'));\n\tanswer.add('160_Last 15 minutes@javascript:gs.minutesAgoStart(15)@javascript:gs.minutesAgoEnd(0)', gs.getMessage('Last 15 minutes'));\n\tanswer.add('165_Last 30 minutes@javascript:gs.minutesAgoStart(30)@javascript:gs.minutesAgoEnd(0)', gs.getMessage('Last 30 minutes'));\n\tanswer.add('170_Last 45 minutes@javascript:gs.minutesAgoStart(45)@javascript:gs.minutesAgoEnd(0)', gs.getMessage('Last 45 minutes'));\n\tanswer.add('175_One year ago@javascript:gs.monthsAgo(12)@javascript:gs.endOfThisMonth()', gs.getMessage('One year ago'));\n\t// Ricardo Tizon - Added for yearly filtering\n\tanswer.add('300_Year 2021@javascript:gs.dateGenerate('2021-01-01','00:00:00')@javascript:gs.dateGenerate('2021-12-31','23:59:59')', gs.getMessage('2021'));\n\tanswer.add('310_Year 2022@javascript:gs.dateGenerate('2022-01-01','00:00:00')@javascript:gs.dateGenerate('2022-12-31','23:59:59')', gs.getMessage('2022'));\n\tanswer.add('320_Year 2022@javascript:gs.dateGenerate('2023-01-01','00:00:00')@javascript:gs.dateGenerate('2023-12-31','23:59:59')', gs.getMessage('2023'))\n\t\t\t   }\n\"\"\"\ncurrent is tied to the sys_script record.\nExplain it like I'm five years old in the form of a list.\n1.","action":"explain","response":" The function getDateFilterOptions() is called.\n2. The function create a list of dates that a user can select to filter on.\n3. The function returns the list of dates."},
{"cuid":"cld51aamu009ypq240zhtswcg","createdAt":"2023-01-21 03:28:27.222","updatedAt":"2023-01-21 03:28:29.111","userCuid":"cld9unimx003iucguho1c4kb0","prompt":"1. The function getDateFilterOptions() is called.\n2. The function create a list of dates that a user can select to filter on.\n3. The function returns the list of dates.\n// Generated by scribe.monster\n\"\"\"\ncurrent is tied to the sys_script record.\nExplain it like I'm five years old in the form of a list.\n1.","action":"explain","response":" The function getDateFilterOptions() is called.\n2. The function create a list of dates that a user can select to filter on.\n3. The function returns the list of dates."},
{"cuid":"cld533jh900a1pq24jbglobvv","createdAt":"2023-01-21 04:19:11.326","updatedAt":"2023-01-21 04:19:12.812","userCuid":"cld9unimw002gucgu13sg3h6i","prompt":"\n// Prompt: When the caller is set to jace, set the group to cab\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 'jace') { // when the new value is jace\n        g_form.setValue('assignment_group', 'cab'); // set the group to cab, replace w/sysid\n    }\n}\n// Prompt: If the book changes to read, set the date to today.\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n  if (isLoading || newValue === '') { return; }\n  if (newValue == 'read') { // when the new value is read\n    var now = new Date(); // make a variable for today\n    var dateInUserFormat = getDateTimeFromFormat(now, g_user_date_time_format); // get it in the users format\n    g_form.setValue('date', dateInUserFormat); // set the date to today\n  }\n}\n// Prompt: show me the groups the user picked is a member of\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    var userAjax = new GlideAjax('global.UserAjax'); // call the UserAjax Script Include\n    userAjax.addParam('sysparm_name', 'getGroups'); // call the getGroups function\n    userAjax.addParam('sysparm_obj', JSON.stringify({\"userId\": newValue})); // pass in the new value for the user\n    userAjax.getXML(function(response){\n        var responseDocument = response.responseXML.document.Element.getAttribute('answer'); //get the answer\n        var serverObj = JSON.parse(answer); // make it a json object\n        var groups = serverObj.groups.join(', '); // make it a string with commas\n        g_form.addInfoMessage(groupString); // show it on the form\n    })\n}\n// Prompt: when food quantity becomes zero, require reason\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 0) { // when the new value is zero\n        g_form.setMandatory('reason', true);\n    }\n}\n// Prompt: if the case type field is blood  type make  the assignment group field blood work\n    ","action":"complete","response":"function onChange(control, oldValue, newValue, isLoading, isTemplate) {\n        var type = g_form.getValue('type');\n        if (type == 'blood') {\n            g_form.setMandatory('assignment_group', true);\n        }\n    }\n"},
{"cuid":"cld599h0p00a3pq24gntb80qh","createdAt":"2023-01-21 07:11:45.77","updatedAt":"2023-01-21 07:11:47.464","userCuid":"cld9unimw001yucgucbtj659g","prompt":"what is 2pm cst in gmt\nLet’s think step by step.\n","action":"ask-step-by-step","response":"\n2pm CST is 1 hour behind GMT (CST is 6 hours behind GMT).\n\nSo, 2pm CST is equal to 3pm GMT."},
{"cuid":"cld7j2kjc00bupq249b324waw","createdAt":"2023-01-22 21:21:52.248","updatedAt":"2023-01-22 21:21:55.767","userCuid":"cld9unimy004pucgu4tff4xl2","prompt":"give me some examples of closures in js\n\n\n\n\n","action":"ask","response":"1. An anonymous function that has access to the external variables of its containing scope. \n2. A function that returns another function. \n3. A function that references variables from its parent scope. \n4. A function that has access to its own private variables. \n5. A function that is passed as an argument to another function. \n6. A function that uses the JavaScript keyword 'this' to access variables from its containing scope."},
{"cuid":"cld5e5kwt00a5pq249kaf2ghc","createdAt":"2023-01-21 09:28:42.27","updatedAt":"2023-01-21 09:29:22.12","userCuid":"cld9unimw002hucgu86rvhqzx","prompt":"\n<!--Fill out the below given this prompt \"create a badge access form\".-->\n\n<h1>Badge Access</h1>\n\n<h2>Fields to track badge access</h2>\n<ol>\n<li>Badge ID</li>\n<li>Badge Holder Name</li>\n<li>Date Issued</li>\n<li>Expiration Date</li>\n<li>Access Level</li>\n<li>Building Access</li>\n<li>Areas Access</li>\n<li>Doors Access</li>\n<li>Time Zone Restrictions</li>\n<li>Status (Active/Inactive)</li>\n</ol>\n\n<h2>Roles</h2>\nIdentify the roles people need to take to request, approve, and fulfill.\n<ul>\n<li>Request: Badge Holder</li>\n<li>Approve: Security/Administrative Personnel</li>\n<li>Fulfill: Security/Administrative Personnel</li>\n</ul>\n\n<h2>Self Service Form</h2>\n<ul>\n<li>Badge Holder Name</li>\n<li>Access Level</li>\n<li>Building Access</li>\n<li>Areas Access</li>\n<li>Doors Access</li>\n<li>Time Zone Restrictions</li>\n</ul>\n\n<h3>Process</h3>\n<div class=\"mermaid\">\ngraph TD\n  S0(Start)\n  A1(Approval for access)\n  T1(Task to fulfill access)\n  Sc1(Schedule expiration)\n  E0(End)\n\n  S0-->A1\n  A1--Rejected-->E0\n  A1--Approved-->T1\n  T1-->Sc1\n  Sc1-->E0\n</div>\n<h3>Integration</h3>\nCreate an integration between ServiceNow and BadgeSystem to automatically provision access.\n\nPossible paths for this.\n<ul>\n<li>BadgeSystem polls ServiceNow</li>\n  <ul>\n  <li>Every hour BadgeSystem hits the TableAPI for outstanding tasks.</li>\n  <li>Updates the tasks that automated work has started.</li>\n  <li>Processes the tasks.</li>\n  <li>If processing succeeds, close the task with success</li>\n  <li>Else Update the task that automation has failed</li>\n  </ul>\n<li>ServiceNow makes a rest call</li>\n  <li>When a task is ready to process e.g. state changes to ready, send a rest call to BadgeSystem</li>\n  <li>If processing succeeds, close the task with success</li>\n  <li>Else Update the task that automation has failed</li>\n</ul>\n<h3>Notifications</h3>\n\n<h4>Approval</h4>\nSubject: Badge Access Request for {current.variables.requested_for}\n\n{current.variables.requested_for} is requesting access to area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door}). Please review and approve or reject the request.\n\nThank you,\nSecurity Team\n\n<h4>Approved</h4>\nSubject: Badge Access Granted\n\nDear {current.variables.requested_for},\n\nYou have been granted access to area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door}). Your badge ID is {current.variables.badge_id} and it expires on {current.variables.expirationDate}.\n\nThank you,\nSecurity Team\n\n<h4>Rejected</h4>\nSubject: Badge Access Denied\n\nDear {current.variables.requested_for},\n\nYour request for access to area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door}) was denied. Please contact the Security Team for more information.\n\nThank you,\nSecurity Team\n\n<h4>Notice of expiring access</h4>\nSubject: Badge Access Expiring for area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door})\n\nDear {current.variables.requested_for},\n\nYour access to area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door}) expires in on on {current.variables.expirationDate}. If you still need this access please request it.\n\nThank you,\nSecurity Team\n\n<!--Fill out the below given this prompt \"Manage FOIA requests for contracts\".-->\n<h1>FOIA Request for Contracts </h1>\n\n<h2>Request Process</h2>\nCreate a process to allow for members of the public to submit FOIA requests for Contracts: \n<div class=\"mermaid\">\ngraph TD\n  S0((Start))\n  S1(Submit Request)\n  A2(Routing and receipt of  request)\n  A3(Review to determine if document is releasable)\n  T1(Obtain the requested document)\n  A4(Prepare releasable document)\n  A5(Approval to release)\n  T2(Produce requested document)\n  E0(End)\n\n  S0-->S1\n  S1-->A2\n  A2-->A3\n  A3--Yes-->T1\n  A3--No-->E0\n  T1-->A4\n  A4-->A5\n  A5--Yes-->T2\n  A5--No-->E0\n  T2-->E0\n</div>\n\n<h2>Roles</h2>\nIdentify any roles people need to take to request, approve, and fulfill.\n<ul>\n<li>Requester: Anyone can submit a request as long as the requirements are met.</li>\n<li>Approver: Agency representative or Agency FOIA Officer</li>\n<li>Fulfiller: Agency representative or Agency FOIA Officer</li>\n</ul>\n\n<h2>Self Service Form</h2>\nCreate fields for submitting a request in the ServiceNow Self Service Portal. \n<ol>\n<li>Requester Name</li>\n<li>Requester Phone</li>\n<li>Requester Email</li>\n<li>Agency Name</li>\n<li>Contract Number</li>\n<li>Brief description of the requested document</li>\n</ol>\n\n<h2>Notifications</h2>\n\n<h3>Request Submitted</h3>\nSubject: FOIA Request Submitted\n\nDear Applicant,\n\nYour FOIA request has been submitted. Your Request ID is: {current.variables.request_id}. Please note that your Request ID in all further correspondence.\n\nThank you,\nFOIA Office\n\n<h3>Request Received </h3>\nSubject: FOIA Request Received\n\nDear Agency Representative, \n\nA new FOIA request has been received. Please review the request and follow the process to respond. \n\nThank you, \nFOIA Office \n\n<h3>Request Approved </h3>\nSubject: FOIA Request Approved\n\nDear Agency Representative, \n\nFOIA Request {current.variables.request_id} has now been approved. Please proceed with preparing a releasable document. \n\nThank you,\nFOIA Office \n\n<h3>Request Rejected</h3>\nSubject: FOIA Request Rejected\n\nDear Applicant, \n\nYour FOIA Request {current.variables.request_id} has been rejected. Please contact the FOIA Representative for more information. \n\nThank you,\nFOIA Office\n<!--Fill out the below given this prompt \"Employee on boarding process\"-->","action":"docs-process-maker","response":"\n<h1>Employee Onboarding Process</h1>\n\n<h2>Process</h2>\nCreate a process for onboarding employees.\n\n<div class=\"mermaid\">\ngraph TD\n  S0(Start)\n  S1(Submit Request)\n  A2(Review Employee Information)\n  A3(Approval)\n  T1(Process Paperwork)\n  T2(Schedule Orientation)\n  A4(Orientation)\n  A5(Review Status)\n  E0(End)\n\n  S0-->S1\n  S1-->A2\n  A2-->A3\n  A3--Yes-->T1\n  A3--No-->E0\n  T1-->T2\n  T2-->A4\n  A4-->A5\n  A5--Yes-->E0\n  A5--No-->T1\n</div>\n\n<h2>Roles</h2>\nIdentify any roles people need to take to request, approve, and fulfill.\n<ul>\n<li>Requester: HR Recruiter</li>\n<li>Approver: HR Manager</li>\n<li>Fulfiller: HR Associate</li>\n</ul>\n\n<h2>Self Service Form</h2>\nCreate fields for submitting a request in the ServiceNow Self Service Portal.\n<ol>\n<li>Employee Name</li>\n<li>Starting Date</li>\n<li>HR Recruiter</li>\n<li>Position</li>\n<li>Department</li>\n<li>Manager</li>\n<li>Location</li>\n</ol>\n\n<h2>Notifications</h2>\n\n<h3>Approved</h3>\nSubject: Request Approved\n\nDear {current.variables.requested_for}, \n\nYour request for onboarding has been approved. Please report on {current.variables.start_date} for your orientation.\n\nThank you,\nHR \n\n<h3>Rejected</h3>\nSubject: Request Rejected\n\nDear {current.variables.requested_for}, \n\nYour request for onboarding has been rejected. Please contact {current.variables.requested_by} for more information.\n\nThank you,\nHR \n\n<h3>Orientation</h3>\nSubject: Orientation Scheduled\n\nDear {current.variables.requested_for},\n\nYour request for onboarding has been approved. Please report on {current.variables.start_date} for your orientation.\n\nThank you,\nHR\n\n<h3>Orientation Completed</h3>\nSubject: Orientation Completed\n\nDear {current.variables.requested_for},\n\nYour orientation has been completed. Please report to {current.variables.location} on {current.variables.start_date} to report for work.\n\nThank you,\nHR\n"},
{"cuid":"cld5ee3us00a7pq24paes5jxe","createdAt":"2023-01-21 09:35:20.068","updatedAt":"2023-01-21 09:35:22.913","userCuid":"cld9unimw002hucgu86rvhqzx","prompt":"(function executeRule(current, previous /*null when async*/) {\n\tgs.include('EvtMgmtAlertManagementCommons'); \n\tvar evtMgmtAlertManagementCommons = new EvtMgmtAlertManagementCommons(); \n\tif (evtMgmtAlertManagementCommons.activeLaunchApplicationExist(current)) {\n\t\tgs.addErrorMessage(gs.getMessage(\"Abort adding action \\\"{0}\\\", with URL \\\"{1}\\\". Same Launch Application display name or URL can't be added twice.\", [current.display_name, current.url]));\n\t\tcurrent.setAbortAction(true);\n\t}\t\n\n})(current, previous);\n\"\"\"\ncurrent is tied to the sys_script record.\nExplain it like I'm five years old in the form of a list.\n1.","action":"explain","response":" The rule is going to execute.\n2. It includes a script called EvtMgmtAlertManagementCommons.\n3. It creates a new object called EvtMgmtAlertManagementCommons.\n4. It runs a function called activeLaunchApplicationExist.\n5. If that function returns true, it adds an error message.\n6. It sets the current record to be aborted."},
{"cuid":"cld5ef66u00aapq24nqb6tspl","createdAt":"2023-01-21 09:36:09.75","updatedAt":"2023-01-21 09:36:13.831","userCuid":"cld9unimw002hucgu86rvhqzx","prompt":"Update this code based following this prompt, \"\": (function executeRule(current, previous /*null when async*/) {\n\tgs.include('EvtMgmtAlertManagementCommons'); \n\tvar evtMgmtAlertManagementCommons = new EvtMgmtAlertManagementCommons(); \n\tif (evtMgmtAlertManagementCommons.activeLaunchApplicationExist(current)) {\n\t\tgs.addErrorMessage(gs.getMessage(\"Abort adding action \\\"{0}\\\", with URL \\\"{1}\\\". Same Launch Application display name or URL can't be added twice.\", [current.display_name, current.url]));\n\t\tcurrent.setAbortAction(true);\n\t}\t\n\n})(current, previous); ```","action":"edit","response":"\n\n(function executeRule(current, previous /*null when async*/) {\n\tgs.include('EvtMgmtAlertManagementCommons'); \n\tvar evtMgmtAlertManagementCommons = new EvtMgmtAlertManagementCommons(); \n\tif (evtMgmtAlertManagementCommons.activeLaunchApplicationExist(current)) {\n\t\tgs.addErrorMessage(gs.getMessage(\"Abort adding action \\\"{0}\\\", with URL \\\"{1}\\\". Same Launch Application display name or URL can't be added twice.\", [current.display_name, current.url]));\n\t\tcurrent.setAbortAction(true);\n\t}\t\n\n})(current, previous);"},
{"cuid":"cld68ykdb00adpq24umbg1e2y","createdAt":"2023-01-21 23:51:03.071","updatedAt":"2023-01-21 23:51:06.466","userCuid":"cld9unimw001tucgu1zwz247x","prompt":"\n// Prompt: When the caller is set to jace, set the group to cab\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 'jace') { // when the new value is jace\n        g_form.setValue('assignment_group', 'cab'); // set the group to cab, replace w/sysid\n    }\n}\n// Prompt: If the book changes to read, set the date to today.\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n  if (isLoading || newValue === '') { return; }\n  if (newValue == 'read') { // when the new value is read\n    var now = new Date(); // make a variable for today\n    var dateInUserFormat = getDateTimeFromFormat(now, g_user_date_time_format); // get it in the users format\n    g_form.setValue('date', dateInUserFormat); // set the date to today\n  }\n}\n// Prompt: show me the groups the user picked is a member of\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    var userAjax = new GlideAjax('global.UserAjax'); // call the UserAjax Script Include\n    userAjax.addParam('sysparm_name', 'getGroups'); // call the getGroups function\n    userAjax.addParam('sysparm_obj', JSON.stringify({\"userId\": newValue})); // pass in the new value for the user\n    userAjax.getXML(function(response){\n        var responseDocument = response.responseXML.document.Element.getAttribute('answer'); //get the answer\n        var serverObj = JSON.parse(answer); // make it a json object\n        var groups = serverObj.groups.join(', '); // make it a string with commas\n        g_form.addInfoMessage(groupString); // show it on the form\n    })\n}\n// Prompt: when food quantity becomes zero, require reason\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 0) { // when the new value is zero\n        g_form.setMandatory('reason', true);\n    }\n}\n// Prompt: set reference field assignment group to blood work if case type blood type is set\n    ","action":"complete","response":"function onChange(control, oldValue, newValue, isLoading, isTemplate) {\n        if (isLoading || newValue === '') { return; }\n        if (newValue == 'Blood Type') { // when the new value is blood type\n            g_form.setValue('assignment_group', 'blood_work'); // set the group to blood work, replace w/sysid\n        }\n    }\n"},
{"cuid":"cld6abg9h00ahpq24oiazopx9","createdAt":"2023-01-22 00:29:03.894","updatedAt":"2023-01-22 00:29:09.911","userCuid":"cld9unimy004sucgu6as7b6g0","prompt":"write a script to fetch the user details from server","action":"complete","response":" and display them in the page.\n\n// 3. write a script to display only those user who are having age > 30.\n\n// 4. write a script to display only those users having age between 15 and 30.\n\n// 5. write a script to display only those users who are having age greater than their names length.\n\n// 6. write a script to find the longest name and longest last name.\n\n// 7. find the most active user.\n\n// 8. find the most active user’s name.\n\n// 9. write a script to find the most active user by joining all the users’ names.\n\n// 10. write a script to find the most active user by joining all the users’ names length.\n\n// 11. write a script to find the most active user by joining all the users’ names length and first letter.\n\n// 12. write a script to find the most active user by joining all the users’ names length and first letter of last name.\n\n// 13. write a script to find the most active user by joining all the users’ names length and first letter of last name and first letter of name.\n\n// 14. write a script to find the most active user by joining all the users’ names length and first letter of last name and first letter of name and last name.\n\n// 15. write a script to find the most active user by joining all the users’ names length and first letter of last name and first letter of name and last name and age.\n\n// 16. write a script to find the most active user by joining all the users’ names length and first letter of last name and first letter of name and last name and age and gender.\n\n// 17. write a script to find the most active user by joining all the users’ names length and first letter of last name and first letter of name and last name and age and gender and email id.\n\n// 18. write a script to find the most active user by joining all the users’ names length and first letter of last name and first letter of name and last name and age and gender and email id and phone number.\n\n// 19. write a script to find the most active user by joining all the users’ names length and first letter of last name and first letter of"},
{"cuid":"cld6jlnc800akpq247lrpuro0","createdAt":"2023-01-22 04:48:56.168","updatedAt":"2023-01-22 04:49:01.772","userCuid":"cld9unimw001yucgucbtj659g","prompt":"<!--Prompt: Sequence between alice and john-->\n<div class=\"mermaid\">\nsequenceDiagram\n    Alice->>+John: Hello John, how are you?\n    Alice->>+John: John, can you hear me?\n    John-->>-Alice: Hi Alice, I can hear you!\n    John-->>-Alice: I feel great!\n</div>\n<!--Prompt: Flow with one task, no approvals-->\n<div class=\"mermaid\">\nflowchart\n  S0(Start)\n  T1(Task 1)\n  E0(End)\n  S0-->T1\n  T1-->E0\n</div>\n<!--Prompt: Flow with two tasks, no approvals in parellel-->\n<div class=\"mermaid\">\nflowchart\n  S0(Start)\n  T1(Task 1)\n  T2(Task 2)\n  E0(End)\n  S0-->T1\n  S0-->T2\n  T1-->E0\n  T2-->E0\n</div>\n<!--Prompt: Flow with two tasks, no approvals in serial-->\n<div class=\"mermaid\">\nflowchart\n  S0(Start)\n  T1(Task 1)\n  T2(Task 2)\n  E0(End)\n  S0-->T1\n  T1-->T2\n  T2-->E0\n</div>\n<!--Prompt: Flow with one tasks and one approval-->\n<div class=\"mermaid\">\nflowchart\n  S0(Start)\n  A1(Approval 1)\n  T1(Task 1)\n  E0(End)\n  S0-->A1\n  A1--Rejected-->E0\n  A1--Approved-->T1\n  T1-->E0\n</div>\n<!--Prompt: Flow with two tasks, and an approvals in serial-->\n<div class=\"mermaid\">\nflowchart\n  S0(Start)\n  A1(Approval 1)\n  T1(Task 1)\n  T2(Task 2)\n  E0(End)\n  S0-->A1\n  A1--Rejected-->E0\n  A1--Approved-->T1\n  T1-->T2\n  T2-->E0\n</div>\n<!--Prompt: Flow with two approvals in serial, and one task-->\n<div class=\"mermaid\">\nflowchart\n  S0(Start)\n  A1(Approval 1)\n  A2(Approval 2)\n  T1(Task 1)\n  E0(End)\n  S0-->A1\n  A1--Rejected-->E0\n  A1--Approved-->A2\n  A2--Rejected-->E0\n  A2--Approved-->T1\n  T1-->E0\n</div>\n<!--Prompt: Flow with two tasks, and two approvals in serial-->\n<div class=\"mermaid\">\nflowchart\n  S0(Start)\n  A1(Approval 1)\n  A2(Approval 2)\n  T1(Task 1)\n  T2(Task 2)\n  E0(End)\n  S0-->A1\n  A1--Rejected-->E0\n  A1--Approved-->A2\n  A2--Rejected-->E0\n  A2--Approved-->T1\n  T1-->T2\n  T2-->E0\n</div>\n<!--Prompt: pie chart of pets adopted by volunteers-->\n<div class=\"mermaid\">\npie title Pets adopted by volunteers\n  \"Dogs\" : 386\n  \"Cats\" : 85\n  \"Rats\" : 15\n</div>\n<!--Prompt: ServiceNow Certificate Integration Sequence Diagram-->\n<div class=\"mermaid\">\nsequenceDiagram\n  participant ui as User Interactions\n  participant sn as Servicenow\n  participant ms as MidServer\n  participant co as Certificate Authority\n  ui->>sn: User Requests Cert\n  sn->>ms: Run generate-csr-key.js\n  ms->>co: CSR,KEY, and Enrolls Cert\n  co->>sn: Returns Order #\n  loop Download\n  sn->>sn: Waits 2 minutes\n  sn->>ms: Run download-zip-and-upload-cert.js\n  ms->>co: Download Cert\n  co->>sn: Cert Processing\n  end\n  co->>ms: Cert Downloaded\n  ms->>ms: Generate CRT\n  ms->>ms: Generate PFX\n  ms->>ms: Zip CRT, PFX, P7B\n  ms->>sn: Send Zip to SN\n  sn->>ui: Notify user with zip file\n</div>\n<!--Prompt: Show the flow of interactions between a user and an e-commerce website when placing an order.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>E-commerce Website: Place Order\n    E-commerce Website->>Payment Gateway: Verify Payment\n    Payment Gateway->>E-commerce Website: Payment Approved\n    E-commerce Website->>Logistics Company: Prepare Shipment\n    Logistics Company->>E-commerce Website: Shipment Prepared\n    E-commerce Website->>User: Order Confirmation\n</div>\n<!-- Prompt: Illustrate the communication between a mobile app and a server during the login process.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>Mobile App: Login\n    Mobile App->>Server: Send Login Credentials\n    Server->>Authentication Service: Verify Login Credentials\n    Authentication Service->>Server: Credentials Verified\n    Server->>Mobile App: Login Successful\n</div>\n<!-- Prompt: Depict the sequence of events that occur when a user searches for a product on a search engine.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>Search Engine: Search\n    Search Engine->>Search Service: Get Results\n    Search Service->>Index: Retrieve Matches\n    Index->>Search Service: Return Matches\n    Search Service->>Search Engine: Send Results\n    Search Engine->>User: Display Results\n</div>\n<!-- Prompt: Show the interactions between different modules within a banking system during a money transfer operation.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>Banking System: Transfer Money\n    Banking System->>Account Service: Check Balance\n    Account Service->>Banking System: Return Balance\n    Banking System->>Security Service: Verify Transaction\n    Security Service->>Banking System: Transaction Verified\n    Banking System->>Account Service: Deduct Funds\n    Account Service->>Banking System: Funds Deducted\n    Banking System->>Account Service: Add Funds\n    Account Service->>Banking System: Funds Added\n    Banking System->>User: Transaction Complete\n</div>\n<!-- Prompt: Create a sequence diagram that demonstrates the process of video streaming from a server to a client.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>Video Player: Play\n    Video Player->>Server: Request Video\n    Server->>Video Service: Get Video\n    Video Service->>Server: Return Video\n    Server->>Video Player: Send Video\n    Video Player->>User: Display Video\n</div>\n<!-- Prompt: Describe the flow of interactions between a user, a website, and a payment gateway during an online transaction.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>E-commerce Website: Buy Item\n    E-commerce Website->>Payment Gateway: Verify Payment\n    Payment Gateway->>User: Payment Approval\n    User->>E-commerce Website: Confirm Purchase\n    E-commerce Website->>Payment Gateway: Payment Confirmed\n    Payment Gateway->>E-commerce Website: Payment Received\n</div>\n<!-- Prompt: Illustrate the sequence of events that occur when a user logs in to a social media platform.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>Social Media Platform: Login\n    Social Media Platform->>Authentication Service: Verify Login Credentials\n    Authentication Service->>Social Media Platform: Credentials Verified\n    Social Media Platform->>User: Login Successful\n</div>\n<!-- Prompt: Depict the communication between a client and a server during a file upload process.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>Client: Upload file\n    Client->>Server: Send File\n    Server->>File Service: Save File\n    File Service->>Server: File Saved\n    Server->>Client: File Upload Successful\n</div>\n<!-- Prompt: Create a sequence diagram that demonstrates the process of sending an email using an email client.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>Email Client: Compose email\n    Email Client->>SMTP Server: Send email\n    SMTP Server->>MTA: Transfer email\n    MTA->>MDA: Deliver email\n    MDA->>Recipients email client: Display email\n</div>\nA pie chart showing the percentage of global energy consumption by source (fossil fuels, nuclear, hydro, solar, etc.):-->\n<div class=\"mermaid\">\npie\n   \"Fossil Fuels\" : 45,\n   \"Nuclear\" : 20,\n   \"Hydro\" : 10,\n   \"Solar\" : 15,\n   \"Other\" : 10\n</div>\n<!-- Prompt: A pie chart showing the distribution of expenses in a household budget:-->\n<div class=\"mermaid\">\n  pie\n    \"Rent/Mortgage\" : 30,\n    \"Utilities\" : 10,\n    \"Food\" : 20,\n    \"Transportation\" : 15,\n    \"Entertainment\" : 10,\n    \"Savings\" : 15\n</div>\n<!-- Prompt: A pie chart showing the market share of different smartphone brands:-->\n<div class=\"mermaid\">\n  pie\n    \"Samsung\" : 30,\n    \"Apple\" : 20,\n    \"Huawei\" : 15,\n    \"Xiaomi\" : 10,\n    \"Other\" : 25\n</div>\n<!-- Prompt: A pie chart showing the proportion of students in a school by grade level:-->\n<div class=\"mermaid\">\n  pie\n    \"Kindergarten\" : 10,\n    \"Elementary\" : 25,\n    \"Middle School\" : 20,\n    \"High School\" : 30,\n    \"Other\" : 15\n</div>\n<!-- Prompt: A pie chart showing the percentage of website traffic by source (direct, search, referral, social):-->\n<div class=\"mermaid\">\n  pie\n    \"Direct\" : 40,\n    \"Search\" : 25,\n    \"Referral\" : 20,\n    \"Social\" : 15\n</div>\n<!-- Prompt: Scribe Monster's key functions \n\n1. AMA: Unfettered access to ask questions\n\t1. Simple Terms - No shot\n\t2. Pirate - No shot\n\t3. Step by Step - No shot\n2. Summarization\n\t1. Cliffnotes - No Shot\n\t2. Highlights - No shot\n\t3. Deepdive - No shot\n3. Docs - Generate Documentation for work\n\t1. Process Maker - few shot\n\t2. Product Requirements - few shot\n\t3. Diagrams - few shot\n\nWhen someone uses one of those, ScribeMonster modifies the prompt, and asks OpenAI and returns the result to the user.-->","action":"docs-diagram","response":"\n<div class=\"mermaid\">\nsequenceDiagram\n\tScribeMonster->>OpenAI: [Process Maker]\n\tParticipant User\n\tUser->>ScribeMonster: Here is my Process Maker\n\tScribeMonster->>OpenAI: [Process Maker]\n\tOpenAI->>ScribeMonster: Here is the result\n\tScribeMonster->>User: Here is the result\n</div>\n"},
{"cuid":"cld6kwjgm00anpq247ath0jfy","createdAt":"2023-01-22 05:25:23.975","updatedAt":"2023-01-22 05:25:29.907","userCuid":"cld9unimw001yucgucbtj659g","prompt":"<!--Prompt: Sequence between alice and john-->\n<div class=\"mermaid\">\nsequenceDiagram\n    Alice->>+John: Hello John, how are you?\n    Alice->>+John: John, can you hear me?\n    John-->>-Alice: Hi Alice, I can hear you!\n    John-->>-Alice: I feel great!\n</div>\n<!--Prompt: Flow with one task, no approvals-->\n<div class=\"mermaid\">\nflowchart\n  S0(Start)\n  T1(Task 1)\n  E0(End)\n  S0-->T1\n  T1-->E0\n</div>\n<!--Prompt: Flow with two tasks, no approvals in parellel-->\n<div class=\"mermaid\">\nflowchart\n  S0(Start)\n  T1(Task 1)\n  T2(Task 2)\n  E0(End)\n  S0-->T1\n  S0-->T2\n  T1-->E0\n  T2-->E0\n</div>\n<!--Prompt: Flow with two tasks, no approvals in serial-->\n<div class=\"mermaid\">\nflowchart\n  S0(Start)\n  T1(Task 1)\n  T2(Task 2)\n  E0(End)\n  S0-->T1\n  T1-->T2\n  T2-->E0\n</div>\n<!--Prompt: Flow with one tasks and one approval-->\n<div class=\"mermaid\">\nflowchart\n  S0(Start)\n  A1(Approval 1)\n  T1(Task 1)\n  E0(End)\n  S0-->A1\n  A1--Rejected-->E0\n  A1--Approved-->T1\n  T1-->E0\n</div>\n<!--Prompt: Flow with two tasks, and an approvals in serial-->\n<div class=\"mermaid\">\nflowchart\n  S0(Start)\n  A1(Approval 1)\n  T1(Task 1)\n  T2(Task 2)\n  E0(End)\n  S0-->A1\n  A1--Rejected-->E0\n  A1--Approved-->T1\n  T1-->T2\n  T2-->E0\n</div>\n<!--Prompt: Flow with two approvals in serial, and one task-->\n<div class=\"mermaid\">\nflowchart\n  S0(Start)\n  A1(Approval 1)\n  A2(Approval 2)\n  T1(Task 1)\n  E0(End)\n  S0-->A1\n  A1--Rejected-->E0\n  A1--Approved-->A2\n  A2--Rejected-->E0\n  A2--Approved-->T1\n  T1-->E0\n</div>\n<!--Prompt: Flow with two tasks, and two approvals in serial-->\n<div class=\"mermaid\">\nflowchart\n  S0(Start)\n  A1(Approval 1)\n  A2(Approval 2)\n  T1(Task 1)\n  T2(Task 2)\n  E0(End)\n  S0-->A1\n  A1--Rejected-->E0\n  A1--Approved-->A2\n  A2--Rejected-->E0\n  A2--Approved-->T1\n  T1-->T2\n  T2-->E0\n</div>\n<!--Prompt: pie chart of pets adopted by volunteers-->\n<div class=\"mermaid\">\npie title Pets adopted by volunteers\n  \"Dogs\" : 386\n  \"Cats\" : 85\n  \"Rats\" : 15\n</div>\n<!--Prompt: ServiceNow Certificate Integration Sequence Diagram-->\n<div class=\"mermaid\">\nsequenceDiagram\n  participant ui as User Interactions\n  participant sn as Servicenow\n  participant ms as MidServer\n  participant co as Certificate Authority\n  ui->>sn: User Requests Cert\n  sn->>ms: Run generate-csr-key.js\n  ms->>co: CSR,KEY, and Enrolls Cert\n  co->>sn: Returns Order #\n  loop Download\n  sn->>sn: Waits 2 minutes\n  sn->>ms: Run download-zip-and-upload-cert.js\n  ms->>co: Download Cert\n  co->>sn: Cert Processing\n  end\n  co->>ms: Cert Downloaded\n  ms->>ms: Generate CRT\n  ms->>ms: Generate PFX\n  ms->>ms: Zip CRT, PFX, P7B\n  ms->>sn: Send Zip to SN\n  sn->>ui: Notify user with zip file\n</div>\n<!--Prompt: Show the flow of interactions between a user and an e-commerce website when placing an order.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>E-commerce Website: Place Order\n    E-commerce Website->>Payment Gateway: Verify Payment\n    Payment Gateway->>E-commerce Website: Payment Approved\n    E-commerce Website->>Logistics Company: Prepare Shipment\n    Logistics Company->>E-commerce Website: Shipment Prepared\n    E-commerce Website->>User: Order Confirmation\n</div>\n<!-- Prompt: Illustrate the communication between a mobile app and a server during the login process.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>Mobile App: Login\n    Mobile App->>Server: Send Login Credentials\n    Server->>Authentication Service: Verify Login Credentials\n    Authentication Service->>Server: Credentials Verified\n    Server->>Mobile App: Login Successful\n</div>\n<!-- Prompt: Depict the sequence of events that occur when a user searches for a product on a search engine.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>Search Engine: Search\n    Search Engine->>Search Service: Get Results\n    Search Service->>Index: Retrieve Matches\n    Index->>Search Service: Return Matches\n    Search Service->>Search Engine: Send Results\n    Search Engine->>User: Display Results\n</div>\n<!-- Prompt: Show the interactions between different modules within a banking system during a money transfer operation.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>Banking System: Transfer Money\n    Banking System->>Account Service: Check Balance\n    Account Service->>Banking System: Return Balance\n    Banking System->>Security Service: Verify Transaction\n    Security Service->>Banking System: Transaction Verified\n    Banking System->>Account Service: Deduct Funds\n    Account Service->>Banking System: Funds Deducted\n    Banking System->>Account Service: Add Funds\n    Account Service->>Banking System: Funds Added\n    Banking System->>User: Transaction Complete\n</div>\n<!-- Prompt: Create a sequence diagram that demonstrates the process of video streaming from a server to a client.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>Video Player: Play\n    Video Player->>Server: Request Video\n    Server->>Video Service: Get Video\n    Video Service->>Server: Return Video\n    Server->>Video Player: Send Video\n    Video Player->>User: Display Video\n</div>\n<!-- Prompt: Describe the flow of interactions between a user, a website, and a payment gateway during an online transaction.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>E-commerce Website: Buy Item\n    E-commerce Website->>Payment Gateway: Verify Payment\n    Payment Gateway->>User: Payment Approval\n    User->>E-commerce Website: Confirm Purchase\n    E-commerce Website->>Payment Gateway: Payment Confirmed\n    Payment Gateway->>E-commerce Website: Payment Received\n</div>\n<!-- Prompt: Illustrate the sequence of events that occur when a user logs in to a social media platform.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>Social Media Platform: Login\n    Social Media Platform->>Authentication Service: Verify Login Credentials\n    Authentication Service->>Social Media Platform: Credentials Verified\n    Social Media Platform->>User: Login Successful\n</div>\n<!-- Prompt: Depict the communication between a client and a server during a file upload process.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>Client: Upload file\n    Client->>Server: Send File\n    Server->>File Service: Save File\n    File Service->>Server: File Saved\n    Server->>Client: File Upload Successful\n</div>\n<!-- Prompt: Create a sequence diagram that demonstrates the process of sending an email using an email client.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>Email Client: Compose email\n    Email Client->>SMTP Server: Send email\n    SMTP Server->>MTA: Transfer email\n    MTA->>MDA: Deliver email\n    MDA->>Recipients email client: Display email\n</div>\nA pie chart showing the percentage of global energy consumption by source (fossil fuels, nuclear, hydro, solar, etc.):-->\n<div class=\"mermaid\">\npie\n   \"Fossil Fuels\" : 45,\n   \"Nuclear\" : 20,\n   \"Hydro\" : 10,\n   \"Solar\" : 15,\n   \"Other\" : 10\n</div>\n<!-- Prompt: A pie chart showing the distribution of expenses in a household budget:-->\n<div class=\"mermaid\">\n  pie\n    \"Rent/Mortgage\" : 30,\n    \"Utilities\" : 10,\n    \"Food\" : 20,\n    \"Transportation\" : 15,\n    \"Entertainment\" : 10,\n    \"Savings\" : 15\n</div>\n<!-- Prompt: A pie chart showing the market share of different smartphone brands:-->\n<div class=\"mermaid\">\n  pie\n    \"Samsung\" : 30,\n    \"Apple\" : 20,\n    \"Huawei\" : 15,\n    \"Xiaomi\" : 10,\n    \"Other\" : 25\n</div>\n<!-- Prompt: A pie chart showing the proportion of students in a school by grade level:-->\n<div class=\"mermaid\">\n  pie\n    \"Kindergarten\" : 10,\n    \"Elementary\" : 25,\n    \"Middle School\" : 20,\n    \"High School\" : 30,\n    \"Other\" : 15\n</div>\n<!-- Prompt: A pie chart showing the percentage of website traffic by source (direct, search, referral, social):-->\n<div class=\"mermaid\">\n  pie\n    \"Direct\" : 40,\n    \"Search\" : 25,\n    \"Referral\" : 20,\n    \"Social\" : 15\n</div>\n<!-- Prompt: create a flow of the diagram\nsequenceDiagram\n\tScribeMonster->>OpenAI: [Categorize Prompt]\n\tOpenAI->>ScribeMonster: Category\n\tScribeMonster->>Third-Parties: Ask for data\n\tThirdParties->>ScribeMonster: Here's the data\n\tScribeMonster->>OpenAI: [Modified Prompt]\n\tOpenAI->>ScribeMonster: Here is the result\n```-->","action":"docs-diagram","response":"\n<div class=\"mermaid\">\n  sequenceDiagram\n    ScribeMonster->>OpenAI: [Categorize Prompt]\n    OpenAI->>ScribeMonster: Category\n    ScribeMonster->>Third-Parties: Ask for data\n    ThirdParties->>ScribeMonster: Here's the data\n    ScribeMonster->>OpenAI: [Modified Prompt]\n    OpenAI->>ScribeMonster: Here is the result\n</div>\n"},
{"cuid":"cld7j660t00bwpq24fen9jzch","createdAt":"2023-01-22 21:24:40.061","updatedAt":"2023-01-22 21:24:42.941","userCuid":"cld9unimy004pucgu4tff4xl2","prompt":"what is the business rule in servicenow\n\n\n\n\n","action":"ask","response":"A business rule in ServiceNow is a server-side script that runs when a record is displayed, inserted, updated, or deleted, or when a table is queried. Business rules can be set for any table, but are most commonly used for incident, problem, change, and task tables. Business rules can do a variety of things, including setting field values, sending notifications, or running scheduled scripts."},
{"cuid":"cld6mjbi700aqpq24wclgu3gs","createdAt":"2023-01-22 06:11:06.367","updatedAt":"2023-01-22 06:11:24.459","userCuid":"cld9unimw001yucgucbtj659g","prompt":"\n<!--Fill out the below given this prompt \"create a badge access form\".-->\n\n<h1>Badge Access</h1>\n\n<h2>Fields to track badge access</h2>\n<ol>\n<li>Badge ID</li>\n<li>Badge Holder Name</li>\n<li>Date Issued</li>\n<li>Expiration Date</li>\n<li>Access Level</li>\n<li>Building Access</li>\n<li>Areas Access</li>\n<li>Doors Access</li>\n<li>Time Zone Restrictions</li>\n<li>Status (Active/Inactive)</li>\n</ol>\n\n<h2>Roles</h2>\nIdentify the roles people need to take to request, approve, and fulfill.\n<ul>\n<li>Request: Badge Holder</li>\n<li>Approve: Security/Administrative Personnel</li>\n<li>Fulfill: Security/Administrative Personnel</li>\n</ul>\n\n<h2>Self Service Form</h2>\n<ul>\n<li>Badge Holder Name</li>\n<li>Access Level</li>\n<li>Building Access</li>\n<li>Areas Access</li>\n<li>Doors Access</li>\n<li>Time Zone Restrictions</li>\n</ul>\n\n<h3>Process</h3>\n<div class=\"mermaid\">\ngraph TD\n  S0(Start)\n  A1(Approval for access)\n  T1(Task to fulfill access)\n  Sc1(Schedule expiration)\n  E0(End)\n\n  S0-->A1\n  A1--Rejected-->E0\n  A1--Approved-->T1\n  T1-->Sc1\n  Sc1-->E0\n</div>\n<h3>Integration</h3>\nCreate an integration between ServiceNow and BadgeSystem to automatically provision access.\n\nPossible paths for this.\n<ul>\n<li>BadgeSystem polls ServiceNow</li>\n  <ul>\n  <li>Every hour BadgeSystem hits the TableAPI for outstanding tasks.</li>\n  <li>Updates the tasks that automated work has started.</li>\n  <li>Processes the tasks.</li>\n  <li>If processing succeeds, close the task with success</li>\n  <li>Else Update the task that automation has failed</li>\n  </ul>\n<li>ServiceNow makes a rest call</li>\n  <li>When a task is ready to process e.g. state changes to ready, send a rest call to BadgeSystem</li>\n  <li>If processing succeeds, close the task with success</li>\n  <li>Else Update the task that automation has failed</li>\n</ul>\n<h3>Notifications</h3>\n\n<h4>Approval</h4>\nSubject: Badge Access Request for {current.variables.requested_for}\n\n{current.variables.requested_for} is requesting access to area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door}). Please review and approve or reject the request.\n\nThank you,\nSecurity Team\n\n<h4>Approved</h4>\nSubject: Badge Access Granted\n\nDear {current.variables.requested_for},\n\nYou have been granted access to area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door}). Your badge ID is {current.variables.badge_id} and it expires on {current.variables.expirationDate}.\n\nThank you,\nSecurity Team\n\n<h4>Rejected</h4>\nSubject: Badge Access Denied\n\nDear {current.variables.requested_for},\n\nYour request for access to area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door}) was denied. Please contact the Security Team for more information.\n\nThank you,\nSecurity Team\n\n<h4>Notice of expiring access</h4>\nSubject: Badge Access Expiring for area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door})\n\nDear {current.variables.requested_for},\n\nYour access to area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door}) expires in on on {current.variables.expirationDate}. If you still need this access please request it.\n\nThank you,\nSecurity Team\n\n<!--Fill out the below given this prompt \"Manage FOIA requests for contracts\".-->\n<h1>FOIA Request for Contracts </h1>\n\n<h2>Request Process</h2>\nCreate a process to allow for members of the public to submit FOIA requests for Contracts: \n<div class=\"mermaid\">\ngraph TD\n  S0((Start))\n  S1(Submit Request)\n  A2(Routing and receipt of  request)\n  A3(Review to determine if document is releasable)\n  T1(Obtain the requested document)\n  A4(Prepare releasable document)\n  A5(Approval to release)\n  T2(Produce requested document)\n  E0(End)\n\n  S0-->S1\n  S1-->A2\n  A2-->A3\n  A3--Yes-->T1\n  A3--No-->E0\n  T1-->A4\n  A4-->A5\n  A5--Yes-->T2\n  A5--No-->E0\n  T2-->E0\n</div>\n\n<h2>Roles</h2>\nIdentify any roles people need to take to request, approve, and fulfill.\n<ul>\n<li>Requester: Anyone can submit a request as long as the requirements are met.</li>\n<li>Approver: Agency representative or Agency FOIA Officer</li>\n<li>Fulfiller: Agency representative or Agency FOIA Officer</li>\n</ul>\n\n<h2>Self Service Form</h2>\nCreate fields for submitting a request in the ServiceNow Self Service Portal. \n<ol>\n<li>Requester Name</li>\n<li>Requester Phone</li>\n<li>Requester Email</li>\n<li>Agency Name</li>\n<li>Contract Number</li>\n<li>Brief description of the requested document</li>\n</ol>\n\n<h2>Notifications</h2>\n\n<h3>Request Submitted</h3>\nSubject: FOIA Request Submitted\n\nDear Applicant,\n\nYour FOIA request has been submitted. Your Request ID is: {current.variables.request_id}. Please note that your Request ID in all further correspondence.\n\nThank you,\nFOIA Office\n\n<h3>Request Received </h3>\nSubject: FOIA Request Received\n\nDear Agency Representative, \n\nA new FOIA request has been received. Please review the request and follow the process to respond. \n\nThank you, \nFOIA Office \n\n<h3>Request Approved </h3>\nSubject: FOIA Request Approved\n\nDear Agency Representative, \n\nFOIA Request {current.variables.request_id} has now been approved. Please proceed with preparing a releasable document. \n\nThank you,\nFOIA Office \n\n<h3>Request Rejected</h3>\nSubject: FOIA Request Rejected\n\nDear Applicant, \n\nYour FOIA Request {current.variables.request_id} has been rejected. Please contact the FOIA Representative for more information. \n\nThank you,\nFOIA Office\n<!--Fill out the below given this prompt \"User asks ScribeMonster a question\nScribeMonster asks OpenAI (ada-ft) to categorize the prompt\nScribeMonster uses that categorization to sanitize the prompt for API queries to third parties\nScribeMonster asks OpenAI (ada-ft2) to identify the best result data from the third parties\nScribeMonster asks OpenAI (davinci) to answer the question with the context of the response from the API.\nScribeMonster returns the response to the user.\n\"-->","action":"docs-process-maker","response":"\n<h1>ScribeMonster</h1>\n<div class=\"mermaid\">\ngraph TD\n  S0(Start)\n  A1(User asks ScribeMonster a question)\n  A2(ScribeMonster asks OpenAI (ada-ft) to categorize the prompt)\n  A3(ScribeMonster uses that categorization to sanitize the prompt for API queries to third parties)\n  A4(ScribeMonster asks OpenAI (ada-ft2) to identify the best result data from the third parties)\n  A5(ScribeMonster asks OpenAI (davinci) to answer the question with the context of the response from the API.)\n  A6(ScribeMonster returns the response to the user.)\n  E0(End)\n\n  S0-->A1\n  A1-->A2\n  A2-->A3\n  A3-->A4\n  A4-->A5\n  A5-->A6\n  A6-->E0\n</div>\n\n<h2>Roles</h2>\nIdentify the roles people need to take to request, approve, and fulfill.\n<ul>\n<li>Requester: User</li>\n<li>Approver: Internal Team</li>\n<li>Fulfiller: Internal Team</li>\n</ul>\n\n<h2>Notifications</h2>\n\n<h3>Request Submitted</h3>\nSubject: Question Submitted\n\nDear Customer,\n\nYour question has been submitted. Your Request ID is: {current.variables.request_id}. Please note that your Request ID in all further correspondence.\n\nThank you,\nScribeMonster Team\n\n<h3>Request Received </h3>\nSubject: Question Received\n\nDear ScribeMonster Team, \n\nA new question has been received. Please review the request and follow the process to respond. \n\nThank you, \nScribeMonster Team \n\n<h3>Request Approved </h3>\nSubject: Question Approved\n\nDear ScribeMonster Team, \n\nQuestion {current.variables.request_id} has now been approved. Please proceed with preparing a releasable document. \n\nThank you,\nScribeMonster Team \n\n<h3>Request Rejected</h3>\nSubject: Question Rejected\n\nDear Customer, \n\nYour Question {current.variables.request_id} has been rejected. Please contact the ScribeMonster team for more information. \n\nThank you,\nScribeMonster Team"},
{"cuid":"cld6xlzqv00aspq24smas4p3q","createdAt":"2023-01-22 11:21:06.871","updatedAt":"2023-01-22 11:21:09.622","userCuid":"cld9unimw001yucgucbtj659g","prompt":"asdf","action":"complete","response":"\");\n        assertThat(this.isValidPassword, is(false));\n    }\n\n    @Test\n    public void isValidPasswordShouldReturnFalseGivenPasswordIsNull() {\n        this.testPassword = null;\n        this.isValidPassword = this.passwordValidator.isValidPassword(this.testPassword);\n        assertThat(this.isValidPassword, is(false));\n    }\n\n    @Test\n    public void isValidPasswordShouldReturnFalseGivenPasswordIsEmpty() {\n        this.testPassword = \"\";\n        this.isValidPassword = this.passwordValidator.isValidPassword(this.testPassword);\n        assertThat(this.isValidPassword, is(false));\n    }\n}"},
{"cuid":"cld7hc2gy00awpq24prs3dmxw","createdAt":"2023-01-22 20:33:16.163","updatedAt":"2023-01-22 20:33:21.149","userCuid":"cld9unimy005lucgu5ixhalk5","prompt":"","action":"ask","response":"A young man died after being attacked by a group of youths in Glasgow city centre.\n\nA young man died after being attacked by a group of youths in Glasgow city centre.\n\nThe 22-year-old was set upon by a number of teenagers outside McDonald's on Sauchiehall Street at around 4.30pm on Sunday.\n\nHe was taken to the city's Royal Infirmary but police later confirmed he had died.\n\nA 15-year-old boy has been arrested in connection with the incident.\n\nDetective Inspector John Preshaw said: \"This is a tragic incident and a family has lost a son as a result of this attack.\n\n\"I am appealing to anyone who witnessed the incident to contact us so that we can establish the full circumstances.\"\n\nPress Association"},
{"cuid":"cld7hcax800b0pq249louo734","createdAt":"2023-01-22 20:33:27.116","updatedAt":"2023-01-22 20:33:28.365","userCuid":"cld9unimy005lucgu5ixhalk5","prompt":"who founded ServiceNow?","action":"ask","response":"\n\nServiceNow was founded in 2004 by Fred Luddy."},
{"cuid":"cld7hm7fc00b4pq244zv69y4i","createdAt":"2023-01-22 20:41:09.144","updatedAt":"2023-01-22 20:41:10.41","userCuid":"cld9unimy005lucgu5ixhalk5","prompt":"var Test = Class.create();\nTest.prototype = {\n    initialize: function() {\n    },\n\t\n\t// Update\n\n    type: 'Test'\n};\n\"\"\"\nExplain this Script Include like I'm five years old in the form of a list.\n1.","action":"explain","response":" The 'Test' class is created.\n2. An 'initialize' function is created for the 'Test' class.\n3. A 'type' property is created for the 'Test' class and set to 'Test'."},
{"cuid":"cld7ify4d00b7pq24w7q4g00j","createdAt":"2023-01-22 21:04:16.765","updatedAt":"2023-01-22 21:04:21.519","userCuid":"cld9unimy004pucgu4tff4xl2","prompt":"write simple glideajax\n","action":"ask","response":"\nglideajax('myScript', 'myOperation', {\n    parameters: {\n        ID: '12345'\n    },\n    callback: function(response) {\n        //Process the response\n    }\n});"},
{"cuid":"cld7igwz000bapq24q1yiccc4","createdAt":"2023-01-22 21:05:01.933","updatedAt":"2023-01-22 21:05:04.355","userCuid":"cld9unimy004pucgu4tff4xl2","prompt":"write closure js\n","action":"ask","response":"\nfunction closure() {\n    let count = 0;\n    return function() {\n        count++;\n        return count;\n    }\n}\n\nlet myClosure = closure();\nconsole.log(myClosure()); //1\nconsole.log(myClosure()); //2"},
{"cuid":"cld7ihr9j00bcpq24qyt5btkg","createdAt":"2023-01-22 21:05:41.191","updatedAt":"2023-01-22 21:05:43.11","userCuid":"cld9unimy004pucgu4tff4xl2","prompt":"write business rule to prevent all changes\n\n","action":"ask","response":"\nNo changes to any data can be made unless they are first approved by an authorized supervisor."},
{"cuid":"cld7ii7ys00bfpq24g8ad9rwq","createdAt":"2023-01-22 21:06:02.837","updatedAt":"2023-01-22 21:06:08.169","userCuid":"cld9unimy004pucgu4tff4xl2","prompt":"write servicenow business rule to prevent all changes\n\n","action":"ask","response":"\n\n//Business Rule Name: Prevent All Changes\n\n//Table: [Table Name]\n\n//When: Before\n\n//Condition: 1=1 \n\n//Action:\n\n//Abort Script: true\n\n//Abort Message: All changes to this record have been prevented."},
{"cuid":"cld7ij1g000bhpq24tw85bvrh","createdAt":"2023-01-22 21:06:41.04","updatedAt":"2023-01-22 21:06:47.151","userCuid":"cld9unimy004pucgu4tff4xl2","prompt":"write servicenow glideajax example\n\n","action":"ask","response":"\nGlideAjax is a ServiceNow JavaScript class that allows developers to make asynchronous Ajax requests from client-side scripts.\n\nBelow is an example of using GlideAjax to make an asynchronous request for a list of records from a table in ServiceNow:\n\n// Create the GlideAjax object\nvar ga = new GlideAjax('TableNameAjax');\n\n// Set the parameters of the request\nga.addParam('sysparm_action', 'getRecords');\nga.addParam('sysparm_query', 'active=true');\n\n// Execute the request and handle the response\nga.getXML(function(response) {\n   // Parse the response XML\n   var records = response.responseXML.getElementsByTagName('record');\n   // Do something with the records\n   // ...\n});"},
{"cuid":"cld7iokuh00bkpq24dpjs2b18","createdAt":"2023-01-22 21:10:59.466","updatedAt":"2023-01-22 21:11:06.07","userCuid":"cld9unimy004pucgu4tff4xl2","prompt":"what is the try fetch in javascript\n\n","action":"ask","response":"\nTry/Fetch is an API in JavaScript that allows you to make asynchronous requests. It is used to asynchronously fetch resources from a server or from the local computer. Try/Fetch works by sending a request to a server and then waiting for a response. When the response is received, the promise is either resolved or rejected. If the request is successful, the promise is resolved with the response data. If the request fails, the promise is rejected."},
{"cuid":"cld7iotb800bmpq244o3ncb5g","createdAt":"2023-01-22 21:11:10.436","updatedAt":"2023-01-22 21:11:15.463","userCuid":"cld9unimy004pucgu4tff4xl2","prompt":"what is the try catch in javascript\n\n","action":"ask","response":"\nThe try/catch statement is used to handle errors in JavaScript. It consists of two blocks: the try block and the catch block. The try block contains code that may throw an error, and the catch block contains code that executes when an error is thrown. The try/catch statement can be used to handle errors, prevent your code from crashing, and display more helpful error messages to the user."},
{"cuid":"cld7ipaw500bopq24fekx2b02","createdAt":"2023-01-22 21:11:33.222","updatedAt":"2023-01-22 21:11:38.011","userCuid":"cld9unimy004pucgu4tff4xl2","prompt":"give me some examples\n\n\n","action":"ask","response":"1. Classroom rules: Respect others, raise your hand to speak, stay on task, follow instructions, be kind.\n2. Workplace policies: Be on time, dress appropriately, use appropriate language, follow safety procedures, take scheduled breaks.\n3. Social etiquette: Greet others with a smile, be courteous, use polite language, offer to help when possible, say \"please\" and \"thank you\".\n4. Driving regulations: Follow the speed limit, obey traffic signals, yield to pedestrians, use turn signals, keep a safe distance.\n5. Household chores: Do the dishes, take out the trash, vacuum the floor, mow the lawn, dust the furniture."},
{"cuid":"cld7k5doc00bzpq24mjqfpife","createdAt":"2023-01-22 21:52:02.94","updatedAt":"2023-01-22 21:52:06.87","userCuid":"cld9unimy005lucgu5ixhalk5","prompt":"var DeleteFilteredUtils = Class.create();\nDeleteFilteredUtils.prototype = Object.extendsObject(AbstractAjaxProcessor, {\n\tdeleteRecords: function() {\n\t\tvar table = this.getParameter('sysparm_table_name');\n\t\tvar qstrenc = this.getParameter('sysparm_query_string');\n\t\tvar qstr = decodeURI(qstrenc);\n\t\tvar dotWalked = false;\n\t\tif (qstr.indexOf('.') >= 0) dotWalked = true;\n\t\t\t\n\t\tvar gr = new GlideRecord(table);\n\t\tif (!gr.isValid()) return;\n\t\tif (!gr.canDelete())return;\n\t\t\t\n\t\tgr.addEncodedQuery(qstr);\n\t\tgr.query();\n\t\t\n\t\tif (!dotWalked){\n\t\t\tvar count = gr.getRowCount();\n\t\t\tgr.deleteMultiple();\n\t\t\treturn count;\n\t\t}\n\t\telse{\n\t\t\tvar count = gr.getRowCount();\n\t\t\twhile (gr.next()){\n\t\t\t\tgr.deleteRecord();\n\t\t\t}\n\t\t\treturn count;\n\t\t}\n\t}\n});\n\"\"\"\nExplain this Script Include like I'm five years old in the form of a list.\n1.","action":"explain","response":" The DeleteFilteredUtils.prototype is creating a new class called DeleteFilteredUtils.  \n2. This class is going to allow us to delete records from a particular table. \n3. In order to do this, we need to pass in the name of the table and the query string. \n4. The query string will be used to determine which records to delete. \n5. Once we have the table and query string, we can create a GlideRecord object. \n6. This GlideRecord object will be used to delete the records from the table. \n7. Finally, we return the number of records that were deleted."},
{"cuid":"cld7kbspo00c3pq24dhfe5cvb","createdAt":"2023-01-22 21:57:02.365","updatedAt":"2023-01-22 21:57:06.554","userCuid":"cld9unimy005lucgu5ixhalk5","prompt":"Update this code based following this prompt, \"Generate JSDOC\": 1. The DeleteFilteredUtils.prototype is creating a new class called DeleteFilteredUtils.  \n2. This class is going to allow us to delete records from a particular table. \n3. In order to do this, we need to pass in the name of the table and the query string. \n4. The query string will be used to determine which records to delete. \n5. Once we have the table and query string, we can create a GlideRecord object. \n6. This GlideRecord object will be used to delete the records from the table. \n7. Finally, we return the number of records that were deleted.\n// Generated by scribe.monster ```","action":"edit","response":"\n\n/**\n * Class for deleting filtered records from a particular table.\n * @param {string} tableName - The name of the table from which to delete records.\n * @param {string} queryString - The query string to use for determining which records to delete.\n */\nfunction DeleteFilteredUtils(tableName, queryString) {\n  /**\n   * Deletes records from a particular table.\n   * @return {number} The number of records that were deleted.\n   */\n  this.deleteRecords = function() {\n    var gr = new GlideRecord(tableName);\n    gr.addEncodedQuery(queryString);\n    var numDeleted = gr.deleteMultiple();\n    return numDeleted;\n  };\n}"},
{"cuid":"cld7kcwup00c7pq24rmxzrkzm","createdAt":"2023-01-22 21:57:54.385","updatedAt":"2023-01-22 21:58:04.424","userCuid":"cld9unimy005lucgu5ixhalk5","prompt":"Update this code based following this prompt, \"Generate JSDOC\": var DeleteFilteredUtils = Class.create();\nDeleteFilteredUtils.prototype = Object.extendsObject(AbstractAjaxProcessor, {\n\tdeleteRecords: function() {\n\t\tvar table = this.getParameter('sysparm_table_name');\n\t\tvar qstrenc = this.getParameter('sysparm_query_string');\n\t\tvar qstr = decodeURI(qstrenc);\n\t\tvar dotWalked = false;\n\t\tif (qstr.indexOf('.') >= 0) dotWalked = true;\n\t\t\t\n\t\tvar gr = new GlideRecord(table);\n\t\tif (!gr.isValid()) return;\n\t\tif (!gr.canDelete())return;\n\t\t\t\n\t\tgr.addEncodedQuery(qstr);\n\t\tgr.query();\n\t\t\n\t\tif (!dotWalked){\n\t\t\tvar count = gr.getRowCount();\n\t\t\tgr.deleteMultiple();\n\t\t\treturn count;\n\t\t}\n\t\telse{\n\t\t\tvar count = gr.getRowCount();\n\t\t\twhile (gr.next()){\n\t\t\t\tgr.deleteRecord();\n\t\t\t}\n\t\t\treturn count;\n\t\t}\n\t}\n}); ```","action":"edit","response":"\n\n/**\n * Class that contains methods for deleting records.\n */\nvar DeleteFilteredUtils = Class.create();\n\n/**\n * Extends the AbstractAjaxProcessor class.\n */\nDeleteFilteredUtils.prototype = Object.extendsObject(AbstractAjaxProcessor, {\n\t\n\t/**\n\t * Deletes the specified records.\n\t * \n\t * @param {string} sysparm_table_name The name of the table to delete records from\n\t * @param {string} sysparm_query_string The encoded query string used to specify which records to delete\n\t * \n\t * @returns {number} The number of deleted records\n\t */\n\tdeleteRecords: function() {\n\t\tvar table = this.getParameter('sysparm_table_name');\n\t\tvar qstrenc = this.getParameter('sysparm_query_string');\n\t\tvar qstr = decodeURI(qstrenc);\n\t\tvar dotWalked = false;\n\t\tif (qstr.indexOf('.') >= 0) dotWalked = true;\n\t\t\t\n\t\tvar gr = new GlideRecord(table);\n\t\tif (!gr.isValid()) return;\n\t\tif (!gr.canDelete())return;\n\t\t\t\n\t\tgr.addEncodedQuery(qstr);\n\t\tgr.query();\n\t\t\n\t\tif (!dotWalked){\n\t\t\tvar count = gr.getRowCount();\n\t\t\tgr.deleteMultiple();\n\t\t\treturn count;\n\t\t}\n\t\telse{\n\t\t\tvar count = gr.getRowCount();\n\t\t\twhile (gr.next()){\n\t\t\t\tgr.deleteRecord();\n\t\t\t}\n\t\t\treturn count;\n\t\t}\n\t}\n});"},
{"cuid":"cld7kll5l00capq24y50eple2","createdAt":"2023-01-22 22:04:39.13","updatedAt":"2023-01-22 22:04:41.505","userCuid":"cld9unimy005lucgu5ixhalk5","prompt":"Update this code based following this prompt, \"Explain code\": var DeleteFilteredUtils = Class.create();\nDeleteFilteredUtils.prototype = Object.extendsObject(AbstractAjaxProcessor, {\n\tdeleteRecords: function() {\n\t\tvar table = this.getParameter('sysparm_table_name');\n\t\tvar qstrenc = this.getParameter('sysparm_query_string');\n\t\tvar qstr = decodeURI(qstrenc);\n\t\tvar dotWalked = false;\n\t\tif (qstr.indexOf('.') >= 0) dotWalked = true;\n\t\t\t\n\t\tvar gr = new GlideRecord(table);\n\t\tif (!gr.isValid()) return;\n\t\tif (!gr.canDelete())return;\n\t\t\t\n\t\tgr.addEncodedQuery(qstr);\n\t\tgr.query();\n\t\t\n\t\tif (!dotWalked){\n\t\t\tvar count = gr.getRowCount();\n\t\t\tgr.deleteMultiple();\n\t\t\treturn count;\n\t\t}\n\t\telse{\n\t\t\tvar count = gr.getRowCount();\n\t\t\twhile (gr.next()){\n\t\t\t\tgr.deleteRecord();\n\t\t\t}\n\t\t\treturn count;\n\t\t}\n\t}\n}); ```","action":"edit","response":"\n\nThis code deletes records from a specified table based on a query string. If the query string contains a '.', the code will loop through and delete each record individually. Otherwise, it will delete all records that match the query in one go."},
{"cuid":"cld7km2sb00ccpq24a8r2n506","createdAt":"2023-01-22 22:05:01.979","updatedAt":"2023-01-22 22:05:03.459","userCuid":"cld9unimy005lucgu5ixhalk5","prompt":"Update this code based following this prompt, \"Generate code\": This code deletes records from a specified table based on a query string. If the query string contains a '.', the code will loop through and delete each record individually. Otherwise, it will delete all records that match the query in one go.\n// Generated by scribe.monster ```","action":"edit","response":"\n\nDELETE FROM table WHERE queryString = '.';\n\nfor (let i = 0; i < queryString.length; i++) {\n  DELETE FROM table WHERE queryString = queryString[i];\n}"},
{"cuid":"cld7knct300cfpq246zd1ls74","createdAt":"2023-01-22 22:06:01.623","updatedAt":"2023-01-22 22:06:03.708","userCuid":"cld9unimy005lucgu5ixhalk5","prompt":"\n// Prompt: Class pattern\nvar ClassPattern = Class.create();\n\nClassPattern.prototype = {\n   initialize : function() {\n   },\n\n   myFunction : function() {\n      //Put function code here\n   },\n\n   _privateFunction: function() {\n       //Put private function code here\n   },\n\n   type : 'ClassPattern'\n};\n// Prompt: Function Pattern\n// FunctionPattern\nvar doSomething = function() {\n  // Put function code here\n}\n// Prompt: Namespace Pattern\nvar NamespacePattern = {\n    doSomething: function() {\n        // Put function code here\n    },\n\n    doSomethingElse: function() {\n        // Put other function code here\n    }\n};\n// Prompt: Module Pattern\nvar ModulePattern = (function() {\n    var privateVariable;\n\n    function myFunction() {\n        // Put function code here\n    }\n\n    function privateFunction() {\n        // Put private function code here\n    }\n\n    return {\n        'myFunction': myFunction\n    }\n})();\n// Prompt: given a table and query, delete the records\n","action":"complete","response":"function deleteRows(table, query) {\n    for(var i = table.rows.length - 1; i > 0; i--) {\n        var row = table.rows[i];\n        var allCells = row.cells;\n        var shouldDelete = true;\n\n        for(var j = 0; j < allCells.length; j++) {\n            if(allCells[j].textContent.toLowerCase().indexOf(query) < 0) {\n                shouldDelete = false;\n            }\n        }\n\n        if(shouldDelete) {\n            table.deleteRow(i);\n        }\n    }\n}\n"},
{"cuid":"cld7kpay000cjpq24ne9fbh52","createdAt":"2023-01-22 22:07:32.521","updatedAt":"2023-01-22 22:07:34.946","userCuid":"cld9unimy005lucgu5ixhalk5","prompt":"\n// Prompt: Class pattern\nvar ClassPattern = Class.create();\n\nClassPattern.prototype = {\n   initialize : function() {\n   },\n\n   myFunction : function() {\n      //Put function code here\n   },\n\n   _privateFunction: function() {\n       //Put private function code here\n   },\n\n   type : 'ClassPattern'\n};\n// Prompt: Function Pattern\n// FunctionPattern\nvar doSomething = function() {\n  // Put function code here\n}\n// Prompt: Namespace Pattern\nvar NamespacePattern = {\n    doSomething: function() {\n        // Put function code here\n    },\n\n    doSomethingElse: function() {\n        // Put other function code here\n    }\n};\n// Prompt: Module Pattern\nvar ModulePattern = (function() {\n    var privateVariable;\n\n    function myFunction() {\n        // Put function code here\n    }\n\n    function privateFunction() {\n        // Put private function code here\n    }\n\n    return {\n        'myFunction': myFunction\n    }\n})();\n// Prompt: create a function that receives two parameters, a table name and a query string. Delete the filtered records from the table and return the number of deleted records\n","action":"complete","response":"function deleteRecords(table, query) {\n  var numberOfRecordsDeleted = 0;\n  var querySolution = getQuerySolution(query);\n  var db = openDatabase(\"mydb\", \"1.0\", \"Demo\", 2 * 1024 * 1024);\n  db.transaction(function (tx) {\n    tx.executeSql('DELETE FROM ' + table + ' WHERE ' + querySolution.columnName + ' ' + querySolution.operator + ' \"' + querySolution.value + '\"', [], function (tx, results) {\n      numberOfRecordsDeleted = results.rowsAffected;\n    });\n  });\n  return numberOfRecordsDeleted;\n}\n"},
{"cuid":"cld7kpskl00clpq24kjwn1rc8","createdAt":"2023-01-22 22:07:55.365","updatedAt":"2023-01-22 22:08:01.349","userCuid":"cld9unimy005lucgu5ixhalk5","prompt":"\n// Prompt: Class pattern\nvar ClassPattern = Class.create();\n\nClassPattern.prototype = {\n   initialize : function() {\n   },\n\n   myFunction : function() {\n      //Put function code here\n   },\n\n   _privateFunction: function() {\n       //Put private function code here\n   },\n\n   type : 'ClassPattern'\n};\n// Prompt: Function Pattern\n// FunctionPattern\nvar doSomething = function() {\n  // Put function code here\n}\n// Prompt: Namespace Pattern\nvar NamespacePattern = {\n    doSomething: function() {\n        // Put function code here\n    },\n\n    doSomethingElse: function() {\n        // Put other function code here\n    }\n};\n// Prompt: Module Pattern\nvar ModulePattern = (function() {\n    var privateVariable;\n\n    function myFunction() {\n        // Put function code here\n    }\n\n    function privateFunction() {\n        // Put private function code here\n    }\n\n    return {\n        'myFunction': myFunction\n    }\n})();\n// Prompt: in ServiceNow, create a function that receives two parameters, a table name and a query string. Delete the filtered records from the table and return the number of deleted records\n","action":"complete","response":"function deleteAllRecords(tableName, query) {\n    var result = [];\n\n    var request = new sn_ws.SOAPMessageV2('<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">' +\n                                          '<soap:Header/>' +\n                                          '<soap:Body>' +\n                                          '<GetRecords xmlns=\"http://www.servicenow.com/soap/workflow\">' +\n                                          '<sysparm_query>' + query + '</sysparm_query>' +\n                                          '<sysparm_table_name>' + tableName + '</sysparm_table_name>' +\n                                          '</GetRecords>' +\n                                          '</soap:Body>' +\n                                          '</soap:Envelope>');\n\n    result = sn_ws.WSUtils.invoke(request, '/api/now/v2/table/' + tableName + '/', 'GET', true);\n\n    var xml = result.getBody().toString();\n    var json = new XMLSerializer().serializeToString(result.getBody());\n    var obj = JSON.parse(json);\n    var deleted = 0;\n\n    for(var i in obj.result.records) {\n        var sysId = obj.result.records[i].sys_id;\n        var request = new sn_ws.SOAPMessageV2('<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">' +\n                                              '<soap:Header/>'"},
{"cuid":"cld7sqwui00copq24hfqxcsxh","createdAt":"2023-01-23 01:52:44.49","updatedAt":"2023-01-23 01:52:47.357","userCuid":"cld9unimy004pucgu4tff4xl2","prompt":"What is the Hardware asset management\n\n\n\n\n","action":"ask","response":"\nHardware asset management is the process of tracking, managing, and monitoring the physical hardware components of an organization. This includes items such as computers, printers, servers, routers, and other hardware devices. It is important for organizations to track and manage their hardware assets in order to prevent theft, maximize the use of their hardware, and ensure that hardware is up-to-date."},
{"cuid":"cld7sryqd00cspq24fr13v6gf","createdAt":"2023-01-23 01:53:33.59","updatedAt":"2023-01-23 01:53:45.923","userCuid":"cld9unimy004pucgu4tff4xl2","prompt":"How work vulnerability response in Servicenow\n\n\n\n\n","action":"ask","response":"Vulnerability response in ServiceNow involves a comprehensive approach to identify, assess, and resolve security vulnerabilities. This includes identifying assets and potential threats, creating policies and procedures for responding to threats, and managing the response and resolution process.\n\nThe first step in vulnerability response is to identify assets and potential threats. This includes identifying vulnerable systems, applications, and network infrastructure, and conducting regular vulnerability scans to detect and assess security threats.\n\nThe next step is to create policies and procedures for responding to threats. This includes defining roles and responsibilities, assigning tasks, and creating a security incident response plan.\n\nOnce the policies and procedures have been created, the response and resolution process can begin. This includes analyzing the identified threats, determining the appropriate response and resolution action, and coordinating the response.\n\nFinally, the response and resolution process must be monitored and managed to ensure that the threats are resolved and the security posture is maintained. This includes tracking the progress of the response and resolution process, and reporting any issues or concerns."},
{"cuid":"cld7ssc7b00cvpq24p18zecx0","createdAt":"2023-01-23 01:53:51.047","updatedAt":"2023-01-23 01:53:53.98","userCuid":"cld9unimy004pucgu4tff4xl2","prompt":"How work vulnerability responce in Servicenow\n\n\n\n\n","action":"ask","response":"\nIn ServiceNow, vulnerability response is an automated process of responding to vulnerabilities in an organization’s IT infrastructure. It includes a set of activities that are performed to detect, assess, and respond to potential threats or vulnerabilities. These activities can include patching systems, installing security updates, and implementing security measures to mitigate any potential risks. The vulnerability response process in ServiceNow also includes reporting and tracking the security incidents and updating the security posture of the organization."},
{"cuid":"cld8n686500czpq24nf6zjm3k","createdAt":"2023-01-23 16:04:27.485","updatedAt":"2023-01-23 16:04:39.899","userCuid":"cld9unimy004pucgu4tff4xl2","prompt":"servicenow ci matching rules\n","action":"ask","response":"\n1. Name Matching Rule: This rule is used to match CI records when the name of the CI matches exactly. \n\n2. Model Matching Rule: This rule is used to match CI records when the model of the CI matches exactly. \n\n3. Serial Number Matching Rule: This rule is used to match CI records when the serial number of the CI matches exactly. \n\n4. Category Matching Rule: This rule is used to match CI records when the category of the CI matches exactly. \n\n5. Manufacturer Matching Rule: This rule is used to match CI records when the manufacturer of the CI matches exactly. \n\n6. Tag Matching Rule: This rule is used to match CI records when the tag of the CI matches exactly. \n\n7. Location Matching Rule: This rule is used to match CI records when the location of the CI matches exactly."},
{"cuid":"cld91vgn200e7pq24jxrrv6g3","createdAt":"2023-01-23 22:55:59.486","updatedAt":"2023-01-23 22:56:02.163","userCuid":"cld9unimw000wucguenaahfdy","prompt":"function onChange(control, oldValue, newValue, isLoading, isTemplate) {\n   if (isLoading || newValue === '') {\n      return;\n   }\n\tvar dispatch = g_form.getValue('u_dispatch');\n\tvar group = g_form.getValue('assignment_group');\n\t\tif(dispatch=='true' && group==''){\n\t\tg_form.setValue('assignment_group',\"f3e1717c8771f010fc0321f6cebb3533\");\n\t\t\n\t}\n   //Type appropriate comment here, and begin script below\n   \n}\n// Generated by scribe.monster\n\"\"\"\nThe onChange function runs on the form.\nExplain it like I'm five years old in the form of a list.\n1.","action":"explain","response":" onChange is a function that runs on the form.\n2. onChange checks if the dispatch checkbox is checked.\n3. onChange checks if the assignment group field is blank.\n4. onChange sets the assignment group field to the group \"f3e1717c8771f010fc0321f6cebb3533\" if dispatch is checked and the assignment group field is blank."},
{"cuid":"cld8urm8n00d1pq246fxc03ni","createdAt":"2023-01-23 19:37:02.807","updatedAt":"2023-01-23 19:37:04.498","userCuid":"cld9unimw001tucgu1zwz247x","prompt":"\n// Prompt: Create a script that sets the assignment group to the Manager's group if the priority is 1.\n(function executeRule(current, previous) {\n    if (current.getValue('priority', '1')) {\n        current.setValue('group', current.manager.group + '');\n    }\n})(current, previous);\n// Prompt: when status changes, if closed, set active to false\n(function executeRule(current, previous) {\n    // condition current.status.changes()\n    if (current.status == 'closed_created' || current.status == 'closed_duplicate' || current.status == 'closed_invalid') {\n        current.active = false;\n    } else {\n        current.active = true;\n    }\n})(current, previous);\n// Prompt: when change request changes, set parent to change request\n(function executeRule(current, previous) {\n    // condition current.change_request.changes()\n    current.parent = current.change_request;\n})(current, previous);\n// Prompt: do not allow changes to others delegates\n(function executeRule(current, previous) {\n    // condition current.user != gs.getUserID() && !gs.hasRole('admin')\n    gs.addInfoMessage(gs.getMessage(\"Cannot assign or modify other users' Delegates\"));\n    current.setAbortAction(true);\n})(current, previous);\n// Prompt: get the bot icon for slack, and set it from the response\n(function executeRule(current, previous) {\n    try {\n        var req = new sn_ws.RESTMessageV2();\n        req.setEndpoint('https://slack.com/api/team.info');\n        req.setHttpMethod('get');\n        var e = new GlideEncryptionUtil();\n        var authToken = e.getClearPassword2('token_verification', 'token', current.provider_auth.outbound_message_creation);\n        if (JSUtil.notNil(authToken))\n            req.setRequestHeader('Authorization', 'Bearer ' + authToken);\n        var resp = req.execute();\n        var team_icon = JSON.parse(resp.getBody()).team.icon.image_88;\n        current.setValue(\"icon\", team_icon);\n    } catch (ex) {\n        gs.error('Error getting slack team info: ' + ex.getMessage());\n    }\n})(current, previous);\n// Prompt: when the start and end dates change, only allow dates where the start is before the end\n(function executeRule(current, previous) {\n    // condition current.start_date.changes() || current.end_date.changes()\n    if (!current.start_date.nil() && !current.end_date.nil() && current.start_date > current.end_date) {\n        current.setAbortAction(true);\n        gs.addErrorMessage(gs.getMessage(\"The start date cannot be after the end date\"));\n    }\n})(current, previous);\n// Prompt: when the date changes is empty, format it in the star trek format (YYYY.ElapsedDays) and set it in the star date field\n(function executeRule(current, previous) {\n    // condition current.date.changes()\n    if (!current.date.nil()) {\n        var date = new GlideDateTime(current.date);\n        var year = date.getYear();\n        var elapsedDays = date.getElapsed(date.getNumericValue());\n        current.star_date = year + '.' + elapsedDays;\n    }\n})(current, previous);\n// Prompt: dynamically update a field on a record created from a record producer\n","action":"complete","response":"(function executeRule(current, previous) {\n    // condition current.isRecordProducer() && current.record_producer_field.changes()\n    if (current.record_producer_field.nil()) {\n        current.record_producer_field = current.number;\n    }\n})(current, previous);\n"},
{"cuid":"cld8utg0j00d4pq24skvwm8gb","createdAt":"2023-01-23 19:38:28.051","updatedAt":"2023-01-23 19:38:29.57","userCuid":"cld9unimw001tucgu1zwz247x","prompt":"\n// Prompt: Create a script that sets the assignment group to the Manager's group if the priority is 1.\n(function executeRule(current, previous) {\n    if (current.getValue('priority', '1')) {\n        current.setValue('group', current.manager.group + '');\n    }\n})(current, previous);\n// Prompt: when status changes, if closed, set active to false\n(function executeRule(current, previous) {\n    // condition current.status.changes()\n    if (current.status == 'closed_created' || current.status == 'closed_duplicate' || current.status == 'closed_invalid') {\n        current.active = false;\n    } else {\n        current.active = true;\n    }\n})(current, previous);\n// Prompt: when change request changes, set parent to change request\n(function executeRule(current, previous) {\n    // condition current.change_request.changes()\n    current.parent = current.change_request;\n})(current, previous);\n// Prompt: do not allow changes to others delegates\n(function executeRule(current, previous) {\n    // condition current.user != gs.getUserID() && !gs.hasRole('admin')\n    gs.addInfoMessage(gs.getMessage(\"Cannot assign or modify other users' Delegates\"));\n    current.setAbortAction(true);\n})(current, previous);\n// Prompt: get the bot icon for slack, and set it from the response\n(function executeRule(current, previous) {\n    try {\n        var req = new sn_ws.RESTMessageV2();\n        req.setEndpoint('https://slack.com/api/team.info');\n        req.setHttpMethod('get');\n        var e = new GlideEncryptionUtil();\n        var authToken = e.getClearPassword2('token_verification', 'token', current.provider_auth.outbound_message_creation);\n        if (JSUtil.notNil(authToken))\n            req.setRequestHeader('Authorization', 'Bearer ' + authToken);\n        var resp = req.execute();\n        var team_icon = JSON.parse(resp.getBody()).team.icon.image_88;\n        current.setValue(\"icon\", team_icon);\n    } catch (ex) {\n        gs.error('Error getting slack team info: ' + ex.getMessage());\n    }\n})(current, previous);\n// Prompt: when the start and end dates change, only allow dates where the start is before the end\n(function executeRule(current, previous) {\n    // condition current.start_date.changes() || current.end_date.changes()\n    if (!current.start_date.nil() && !current.end_date.nil() && current.start_date > current.end_date) {\n        current.setAbortAction(true);\n        gs.addErrorMessage(gs.getMessage(\"The start date cannot be after the end date\"));\n    }\n})(current, previous);\n// Prompt: when the date changes is empty, format it in the star trek format (YYYY.ElapsedDays) and set it in the star date field\n(function executeRule(current, previous) {\n    // condition current.date.changes()\n    if (!current.date.nil()) {\n        var date = new GlideDateTime(current.date);\n        var year = date.getYear();\n        var elapsedDays = date.getElapsed(date.getNumericValue());\n        current.star_date = year + '.' + elapsedDays;\n    }\n})(current, previous);\n// Prompt: use a business rule on record created from record producer\n","action":"complete","response":"(function executeRule(current, previous) {\n    // condition current.changes() && current.sys_created_on\n    if (current.sys_created_on.nil()) {\n        var change_set = current.getChangeSet();\n        current.setValue('sys_created_on', new GlideDateTime());\n    }\n})(current, previous);\n"},
{"cuid":"cld8z4xsd00d6pq246mf6emou","createdAt":"2023-01-23 21:39:22.766","updatedAt":"2023-01-23 21:39:24.463","userCuid":"cld9unimy004kucgu07nfahsg","prompt":"\n// Prompt: When the caller is set to jace, set the group to cab\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 'jace') { // when the new value is jace\n        g_form.setValue('assignment_group', 'cab'); // set the group to cab, replace w/sysid\n    }\n}\n// Prompt: If the book changes to read, set the date to today.\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n  if (isLoading || newValue === '') { return; }\n  if (newValue == 'read') { // when the new value is read\n    var now = new Date(); // make a variable for today\n    var dateInUserFormat = getDateTimeFromFormat(now, g_user_date_time_format); // get it in the users format\n    g_form.setValue('date', dateInUserFormat); // set the date to today\n  }\n}\n// Prompt: show me the groups the user picked is a member of\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    var userAjax = new GlideAjax('global.UserAjax'); // call the UserAjax Script Include\n    userAjax.addParam('sysparm_name', 'getGroups'); // call the getGroups function\n    userAjax.addParam('sysparm_obj', JSON.stringify({\"userId\": newValue})); // pass in the new value for the user\n    userAjax.getXML(function(response){\n        var responseDocument = response.responseXML.document.Element.getAttribute('answer'); //get the answer\n        var serverObj = JSON.parse(answer); // make it a json object\n        var groups = serverObj.groups.join(', '); // make it a string with commas\n        g_form.addInfoMessage(groupString); // show it on the form\n    })\n}\n// Prompt: when food quantity becomes zero, require reason\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 0) { // when the new value is zero\n        g_form.setMandatory('reason', true);\n    }\n}\n// Prompt: copy body_location in u_oa_body_part\n    ","action":"complete","response":"function onChange(control, oldValue, newValue, isLoading, isTemplate) {\n            if (isLoading || newValue === '') { return; }\n            if (newValue == '1') { // when the new value is 1\n                var body_location_value = g_form.getValue('body_location');\n                g_form.setValue('u_oa_body_part', body_location_value);\n            }\n    }\n"},
{"cuid":"cld8z5pcs00d9pq24ermmidec","createdAt":"2023-01-23 21:39:58.493","updatedAt":"2023-01-23 21:40:00.075","userCuid":"cld9unimy004kucgu07nfahsg","prompt":"function onChange(control, oldValue, newValue, isLoading, isTemplate) {\n            if (isLoading || newValue === '') { return; }\n            if (newValue == '1') { // when the new value is 1\n                var body_location_value = g_form.getValue('body_location');\n                g_form.setValue('u_oa_body_part', body_location_value);\n            }\n    }\n\n// Generated by scribe.monster\n\"\"\"\nThe onChange function runs on the form.\nExplain it like I'm five years old in the form of a list.\n1.","action":"explain","response":" When you change the value of the 'body_location' field, the 'u_oa_body_part' field changes to the same value."},
{"cuid":"cld8z5zhl00dbpq24xu9zcjre","createdAt":"2023-01-23 21:40:11.626","updatedAt":"2023-01-23 21:40:12.573","userCuid":"cld9unimy004kucgu07nfahsg","prompt":"1. When you change the value of the 'body_location' field, the 'u_oa_body_part' field changes to the same value.\n// Generated by scribe.monster\n\"\"\"\nThe onChange function runs on the form.\nExplain it like I'm five years old in the form of a list.\n1.","action":"explain","response":" When you change the value of the 'body_location' field, the 'u_oa_body_part' field changes to the same value."},
{"cuid":"cld90kf6m00depq24cexuxiv7","createdAt":"2023-01-23 22:19:24.766","updatedAt":"2023-01-23 22:19:27.392","userCuid":"cld9unimy004pucgu4tff4xl2","prompt":"servicenow gliderecord for incident\n\n\n\n","action":"ask","response":"\n\nvar gr = new GlideRecord('incident');\ngr.addQuery('active', true);\ngr.query();\nwhile (gr.next()) {\n   // Process the incident record\n}"},
{"cuid":"cld910x7900dhpq24mj94wfse","createdAt":"2023-01-23 22:32:14.613","updatedAt":"2023-01-23 22:32:15.467","userCuid":"cld9unimw000wucguenaahfdy","prompt":"Update this code based following this prompt, \"set configuration item to parent incident configuration item\": function onChange(control, oldValue, newValue, isLoading, isTemplate) {\n   if (isLoading || newValue === '') {\n      return;\n   }\n\tvar dispatch = g_form.getValue('u_dispatch');\n\tvar group = g_form.getValue('assignment_group');\n\tif(dispatch=='true' && group==''){\n\t\tg_form.setValue('assignment_group',\"f3e1717c8771f010fc0321f6cebb3533\");}\n   //Type appropriate comment here, and begin script below\n   \n} ```","action":"edit","response":""},
{"cuid":"cld9111xo00dkpq242rv73vfe","createdAt":"2023-01-23 22:32:20.748","updatedAt":"2023-01-23 22:32:23.181","userCuid":"cld9unimw000wucguenaahfdy","prompt":"Update this code based following this prompt, \"set configuration item to parent incident configuration item\": // Generated by scribe.monster ```","action":"edit","response":"javascript function setConfigItemToParentIncidentConfigItem(configItem, parentIncidentConfigItem) { var configItemID = configItem.getID(); var parentIncidentConfigItemID = parentIncidentConfigItem.getID(); var configItem = new GlideRecord('cmdb_ci'); configItem.get(configItemID); configItem.parent = parentIncidentConfigItemID; } "},
{"cuid":"cld9143w000dmpq24l7fn9s9s","createdAt":"2023-01-23 22:34:43.249","updatedAt":"2023-01-23 22:34:47.991","userCuid":"cld9unimw000wucguenaahfdy","prompt":"function onChange(control, oldValue, newValue, isLoading, isTemplate) {\n   if (isLoading || newValue === '') {\n      return;\n   }\n\tvar dispatch = g_form.getValue('u_dispatch');\n\tvar group = g_form.getValue('assignment_group');\n\tif(dispatch=='true' && group==''){\n\t\tg_form.setValue('assignment_group',\"f3e1717c8771f010fc0321f6cebb3533\");}\n   //Type appropriate comment here, and begin script below\n   \n}\n\"\"\"\nThe onChange function runs on the form.\nExplain it like I'm five years old in the form of a list.\n1.","action":"explain","response":" The first line says \"when the user changes the value of the control (field) on the form, run the onChange function.\"\n2. The second line says \"if the form is loading (initializing) or the new value is blank (empty), don't do anything.\"\n3. The third line says \"get the values of the 'u_dispatch' and 'assignment_group' fields.\"\n4. The fourth line says \"if the 'u_dispatch' field is 'true' and the 'assignment_group' field is blank, set the 'assignment_group' field to 'f3e1717c8771f010fc0321f6cebb3533'.\""},
{"cuid":"cld914fob00dppq24z6q8j7m4","createdAt":"2023-01-23 22:34:58.524","updatedAt":"2023-01-23 22:35:02.65","userCuid":"cld9unimw000wucguenaahfdy","prompt":"Update this code based following this prompt, \"\": 1. The first line says \"when the user changes the value of the control (field) on the form, run the onChange function.\"\n2. The second line says \"if the form is loading (initializing) or the new value is blank (empty), don't do anything.\"\n3. The third line says \"get the values of the 'u_dispatch' and 'assignment_group' fields.\"\n4. The fourth line says \"if the 'u_dispatch' field is 'true' and the 'assignment_group' field is blank, set the 'assignment_group' field to 'f3e1717c8771f010fc0321f6cebb3533'.\"\n// Generated by scribe.monster ```","action":"edit","response":"\n\nif (input === \"u_dispatch\" && newValue != \"\") {\n  if (input.loading || newValue === \"\") {\n    return;\n  }\n  getValue(\"u_dispatch\");\n  getValue(\"assignment_group\");\n  if (u_dispatch.value === \"true\" && assignment_group.value === \"\") {\n    setValue(\"assignment_group\", \"f3e1717c8771f010fc0321f6cebb3533\");\n  }\n}"},
{"cuid":"cld91568v00dspq24su9a9sr1","createdAt":"2023-01-23 22:35:32.959","updatedAt":"2023-01-23 22:35:34.967","userCuid":"cld9unimw000wucguenaahfdy","prompt":"Update this code based following this prompt, \"set configuration item to parent incident configuration item\": if (input === \"u_dispatch\" && newValue != \"\") {\n  if (input.loading || newValue === \"\") {\n    return;\n  }\n  getValue(\"u_dispatch\");\n  getValue(\"assignment_group\");\n  if (u_dispatch.value === \"true\" && assignment_group.value === \"\") {\n    setValue(\"assignment_group\", \"f3e1717c8771f010fc0321f6cebb3533\");\n  }\n}\n// Generated by scribe.monster ```","action":"edit","response":"\n\nif (input === \"u_dispatch\" && newValue != \"\") {\n  if (input.loading || newValue === \"\") {\n    return;\n  }\n  getValue(\"u_dispatch\");\n  getValue(\"assignment_group\");\n  if (u_dispatch.value === \"true\" && assignment_group.value === \"\") {\n    setValue(\"assignment_group\", gs.getProperty('parent.incident.configuration_item'));\n  }\n}"},
{"cuid":"cld9191h500dvpq24wxmybeia","createdAt":"2023-01-23 22:38:33.402","updatedAt":"2023-01-23 22:38:37.031","userCuid":"cld9unimw000wucguenaahfdy","prompt":"Update this code based following this prompt, \"add an additional condition that sets the task configuration item to the parent incident configuration item\": function onChange(control, oldValue, newValue, isLoading, isTemplate) {\n   if (isLoading || newValue === '') {\n      return;\n   }\n\tvar dispatch = g_form.getValue('u_dispatch');\n\tvar group = g_form.getValue('assignment_group');\n\tif(dispatch=='true' && group==''){\n\t\tg_form.setValue('assignment_group',\"f3e1717c8771f010fc0321f6cebb3533\");}\n   //Type appropriate comment here, and begin script below\n   \n} ```","action":"edit","response":"\n\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n   if (isLoading || newValue === '') {\n      return;\n   }\n\tvar dispatch = g_form.getValue('u_dispatch');\n\tvar group = g_form.getValue('assignment_group');\n\tvar ci = g_form.getValue('u_parent_incident');\n\tif(dispatch=='true' && group==''){\n\t\tg_form.setValue('assignment_group',\"f3e1717c8771f010fc0321f6cebb3533\");\n\t\tg_form.setValue('config_item',ci);\n\t}\n   //Type appropriate comment here, and begin script below\n   \n}"},
{"cuid":"cld91h21900dzpq2450l0bt1v","createdAt":"2023-01-23 22:44:47.373","updatedAt":"2023-01-23 22:44:49.318","userCuid":"cld9unimw000wucguenaahfdy","prompt":"function onChange(control, oldValue, newValue, isLoading, isTemplate) {\n   if (isLoading || newValue === '') {\n      return;\n   }\n\tvar dispatch = g_form.getValue('u_dispatch');\n\tvar group = g_form.getValue('assignment_group');\n\tvar ci = g_form.getValue('incident.cmdb_ci');\n\tif(dispatch=='true' && group==''){\n\t\tg_form.setValue('assignment_group',\"f3e1717c8771f010fc0321f6cebb3533\");\n\t\tg_form.setValue('config_item',ci);\n\t}\n   //Type appropriate comment here, and begin script below\n   \n}\n// Generated by scribe.monster\n\"\"\"\nThe onChange function runs on the form.\nExplain it like I'm five years old in the form of a list.\n1.","action":"explain","response":" The onChange function runs on the form when the user makes a change.\n2. The onChange function checks to see if the user has selected the 'dispatch' option.\n3. If the user has selected the 'dispatch' option, the onChange function will set the 'assignment_group' to 'f3e1717c8771f010fc0321f6cebb3533'\n4. The onChange function will also set the 'config_item' to the 'incident.cmdb_ci'"},
{"cuid":"cld91qdiw00e2pq243i5y998t","createdAt":"2023-01-23 22:52:02.168","updatedAt":"2023-01-23 22:52:04.991","userCuid":"cld9unimw000wucguenaahfdy","prompt":"function onChange(control, oldValue, newValue, isLoading, isTemplate) {\n   if (isLoading || newValue === '') {\n      return;\n   }\n\tvar dispatch = g_form.getValue('u_dispatch');\n\tvar group = g_form.getValue('assignment_group');\n\tvar ci = g_form.getValue('incident.cmdb_ci');\n\tif(dispatch=='true' && group==''){\n\t\tg_form.setValue('assignment_group',\"f3e1717c8771f010fc0321f6cebb3533\");\n\t\ttask.cmdb_ci = incident.cmdb_ci;\n\t}\n   //Type appropriate comment here, and begin script below\n   \n}\n// Generated by scribe.monster\n\"\"\"\nThe onChange function runs on the form.\nExplain it like I'm five years old in the form of a list.\n1.","action":"explain","response":" The onChange function runs when the input for u_dispatch changes.\n2. The onChange function checks if the input for u_dispatch is true.\n3. If the input for u_dispatch is true, the onChange function sets the input for assignment_group to \"f3e1717c8771f010fc0321f6cebb3533\"."},
{"cuid":"cld91u70u00e4pq24szzwidzd","createdAt":"2023-01-23 22:55:00.367","updatedAt":"2023-01-23 22:55:01.628","userCuid":"cld9unimw000wucguenaahfdy","prompt":"\n// Prompt: When the caller is set to jace, set the group to cab\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 'jace') { // when the new value is jace\n        g_form.setValue('assignment_group', 'cab'); // set the group to cab, replace w/sysid\n    }\n}\n// Prompt: If the book changes to read, set the date to today.\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n  if (isLoading || newValue === '') { return; }\n  if (newValue == 'read') { // when the new value is read\n    var now = new Date(); // make a variable for today\n    var dateInUserFormat = getDateTimeFromFormat(now, g_user_date_time_format); // get it in the users format\n    g_form.setValue('date', dateInUserFormat); // set the date to today\n  }\n}\n// Prompt: show me the groups the user picked is a member of\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    var userAjax = new GlideAjax('global.UserAjax'); // call the UserAjax Script Include\n    userAjax.addParam('sysparm_name', 'getGroups'); // call the getGroups function\n    userAjax.addParam('sysparm_obj', JSON.stringify({\"userId\": newValue})); // pass in the new value for the user\n    userAjax.getXML(function(response){\n        var responseDocument = response.responseXML.document.Element.getAttribute('answer'); //get the answer\n        var serverObj = JSON.parse(answer); // make it a json object\n        var groups = serverObj.groups.join(', '); // make it a string with commas\n        g_form.addInfoMessage(groupString); // show it on the form\n    })\n}\n// Prompt: when food quantity becomes zero, require reason\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 0) { // when the new value is zero\n        g_form.setMandatory('reason', true);\n    }\n}\n// Prompt: set configuration item to incident configuration item\n    ","action":"complete","response":"        var answer = g_form.getValue('configuration_item');\n            answer = answer.replace(/^sys_configuration_item\\./,'');\n            g_form.setValue('incident_configuration_item', answer);\n"},
{"cuid":"cld91y1fi00elpq24nv8eu13c","createdAt":"2023-01-23 22:57:59.743","updatedAt":"2023-01-23 22:58:03.711","userCuid":"cld9unimw000wucguenaahfdy","prompt":"\n// Prompt: When the caller is set to jace, set the group to cab\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 'jace') { // when the new value is jace\n        g_form.setValue('assignment_group', 'cab'); // set the group to cab, replace w/sysid\n    }\n}\n// Prompt: If the book changes to read, set the date to today.\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n  if (isLoading || newValue === '') { return; }\n  if (newValue == 'read') { // when the new value is read\n    var now = new Date(); // make a variable for today\n    var dateInUserFormat = getDateTimeFromFormat(now, g_user_date_time_format); // get it in the users format\n    g_form.setValue('date', dateInUserFormat); // set the date to today\n  }\n}\n// Prompt: show me the groups the user picked is a member of\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    var userAjax = new GlideAjax('global.UserAjax'); // call the UserAjax Script Include\n    userAjax.addParam('sysparm_name', 'getGroups'); // call the getGroups function\n    userAjax.addParam('sysparm_obj', JSON.stringify({\"userId\": newValue})); // pass in the new value for the user\n    userAjax.getXML(function(response){\n        var responseDocument = response.responseXML.document.Element.getAttribute('answer'); //get the answer\n        var serverObj = JSON.parse(answer); // make it a json object\n        var groups = serverObj.groups.join(', '); // make it a string with commas\n        g_form.addInfoMessage(groupString); // show it on the form\n    })\n}\n// Prompt: when food quantity becomes zero, require reason\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 0) { // when the new value is zero\n        g_form.setMandatory('reason', true);\n    }\n}\n// Prompt: set configuration item to parent incident configuration item\n    ","action":"complete","response":"function onChange(control, oldValue, newValue, isLoading, isTemplate){\n        if (isLoading || newValue === '') { return; }\n        if (newValue != null && newValue != ''){\n            var configurationItem = new GlideRecord('u_configuration_item');\n            configurationItem.addQuery('u_parent_incident_number', newValue);\n            if (configurationItem.query()){\n                g_form.setValue('u_configuration_item', configurationItem.u_configuration_item);\n            }\n        }\n    }\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 'no') { // when the new value is no\n        g_form.setMandatory('u_incident_type', true);\n        g_form.setMandatory('u_incident_subtype', true);\n    } \n}\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 'yes') { // when the new value is yes\n        g_form.setMandatory('u_incident_type', false);\n        g_form.setMandatory('u_incident_subtype', false);\n    } \n}\n"},
{"cuid":"cld93flgw00enpq24dh0htfp9","createdAt":"2023-01-23 23:39:38.48","updatedAt":"2023-01-23 23:39:40.524","userCuid":"cld9unimw001yucgucbtj659g","prompt":"I'm working on getting the number of users for the SaaS application with the highest number of users, typically this is Office 365 and the estimate yearly growth rate.  \nThis number will help ServiceNow give us a timely quote for the Software Asset Management Professional (SAM PRO) offering they have.\n\"\"\" \nRewrite the above in the active voice.","action":"ask","response":"\n\nServiceNow needs the number of users for the SaaS application with the highest number of users, typically Office 365, and its estimate yearly growth rate in order to provide us with a timely quote for their Software Asset Management Professional (SAM PRO) offering."},
{"cuid":"cld93huxy00eqpq24qm48fgoc","createdAt":"2023-01-23 23:41:24.07","updatedAt":"2023-01-23 23:41:27.1","userCuid":"cld9unimw001yucgucbtj659g","prompt":"From Jace To: Mike Rameriz, Toly Xiong\nCC: Cameron, Amanada\nSubject: Estmating Licensing dependent on Office365 Subscribtions\nHey Micheal and Toly,\n\nServiceNow needs the number of users for the SaaS application with the highest number of users, typically Office 365, and its estimate yearly growth rate in order to provide us with a timely quote for their Software Asset Management Professional (SAM PRO) offering.\n\"\"\"\nAbove is an email, please add a call to action that is easy to follow and address for Michael and Toly.","action":"ask","response":"\n\nPlease provide the requested information for ServiceNow as soon as possible so we can get the quote for their SAM PRO offering."},
{"cuid":"cld93iff500etpq24gpr113zd","createdAt":"2023-01-23 23:41:50.61","updatedAt":"2023-01-23 23:41:53.15","userCuid":"cld9unimw001yucgucbtj659g","prompt":"Please provide the requested information for ServiceNow as soon as possible so we can get the quote for their SAM PRO offering.\n\"\"\"\nWrite the above in the active voice.","action":"ask","response":"\n\nPlease provide us with the necessary information for ServiceNow's SAM PRO offering as soon as possible so we can get a quote."},
{"cuid":"cld93ju9000expq24jz6qcj3v","createdAt":"2023-01-23 23:42:56.485","updatedAt":"2023-01-23 23:42:57.961","userCuid":"cld9unimw001yucgucbtj659g","prompt":"Please provide the user count and estimated yearly growth % for ServiceNow as soon as possible so we can get the quote for their SAM PRO offering. \n\"\"\"\nWrite the above in the active voice.","action":"ask","response":"\n\nPlease get the quote for ServiceNow's SAM PRO offering as soon as possible by providing the user count and estimated yearly growth %."},
{"cuid":"cld940qqm00f0pq24im4hxt2s","createdAt":"2023-01-23 23:56:05.087","updatedAt":"2023-01-23 23:56:12.696","userCuid":"cld9unimw001yucgucbtj659g","prompt":"Hey Michael and Toly,\n\nServiceNow needs the number of users for the SaaS application with the highest number of users, typically Office 365, and its estimate yearly growth rate in order to provide us with a timely quote for their Software Asset Management Professional (SAM PRO) offering.\n\nPlease provide the user count and estimated yearly growth % for ServiceNow as soon as possible so we can get the quote for their SAM PRO offering.\n\nSuggestion from Cameron: I am part of the ServiceNow team under Amanda Bentley and we're trying to get a quote from a vendor on a new Software Asset Management suite, which requires us having the number of users licensed for Office 365, and an estimate of yearly growth percentage.  These numbers can be somewhat swag, but would appreciate a quick response so we can provide this to the vendor and move forward.\n\n\"\"\"\nAbove is an email and a suggestion to change it, please rewrite the email with cameron's suggestion in mind.\n\nHey","action":"ask","response":" Michael and Toly,\n\nWe are part of the ServiceNow team under Amanda Bentley and we need to obtain a quote from a vendor for a new Software Asset Management suite. In order to do so, we need to provide them with the user count and estimated yearly growth % for Office 365. While these numbers can be somewhat of an estimation, we would appreciate a prompt response so we can provide these details to the vendor and move forward with the quote. \n\nThanks, \nThe ServiceNow Team"},
{"cuid":"cld9463a600f2pq24vroifjmt","createdAt":"2023-01-24 00:00:14.622","updatedAt":"2023-01-24 00:00:18.758","userCuid":"cld9unimw001yucgucbtj659g","prompt":"Hey Michael and Toly,\n\nI am part of the ServiceNow team under Amanda Bentley and we need to obtain a quote from a vendor for a new Software Asset Management suite. In order to do so, we need to provide them with the user count and estimated yearly growth % for Office 365. While these numbers can be somewhat of an estimation, we would appreciate a prompt response so we can provide these details to the vendor and move forward with the quote.\n \nThanks,\n\nJace\n\"\"\"\nCreate 5 subjects for the email above.\n1.","action":"ask","response":" Requesting Quote for Software Asset Management Suite\n2. Need User Count and Estimated Yearly Growth %\n3. Deadline for Prompt Response\n4. Providing Details to Vendor\n5. Moving Forward with Quote"},
{"cuid":"cld946nw300f4pq246ccdqih8","createdAt":"2023-01-24 00:00:41.331","updatedAt":"2023-01-24 00:00:44.965","userCuid":"cld9unimw001yucgucbtj659g","prompt":"Hey Michael and Toly,\n\nI am part of the ServiceNow team under Amanda Bentley and we need to obtain a quote from a vendor for a new Software Asset Management suite. In order to do so, we need to provide them with the user count and estimated yearly growth % for Office 365. While these numbers can be somewhat of an estimation, we would appreciate a prompt response so we can provide these details to the vendor and move forward with the quote.\n \nThanks,\n\nJace\n\"\"\"\nCreate 5 soft subjects for the email above.\n1.","action":"ask","response":" Request for Quote\n2. Need for User Count and Growth %\n3. Software Asset Management Suite\n4. Estimate Office 365 Figures\n5. Prompt Response Requested"},
{"cuid":"cld9ethbn00gepq244w0jcgwn","createdAt":"2023-01-24 04:58:22.067","updatedAt":"2023-01-24 04:58:27.367","userCuid":"cld9unimw000wucguenaahfdy","prompt":"\n// Prompt: Deletes current record after confirmation.\nvar ajaxHelper;\nvar objSysId;\nvar tblName;\nvar dlg;\nvar returnUrl;\nvar fromRelList;\nvar module;\nvar listQuery;\nvar stackName = null;\n\nfunction confirmAndDeleteFromForm() {   \n    objSysId = g_form.getUniqueValue();\n    tblName = g_form.getTableName();\n    fromRelList = g_form.getParameter('sysparm_from_related_list');\n    module = g_form.getParameter('sysparm_userpref_module');\n    listQuery = g_form.getParameter('sysparm_record_list');\n    stackName = g_form.getParameter('sysparm_nameofstack');\n\n    ajaxHelper = new GlideAjax('DeleteRecordAjax');\n    ajaxHelper.addParam('sysparm_name', 'getCascadeDeleteTables');\n    ajaxHelper.addParam('sysparm_obj_id', objSysId);\n    ajaxHelper.addParam('sysparm_table_name', tblName);\n    ajaxHelper.addParam('sysparm_nameofstack', stackName);\n    ajaxHelper.getXMLAnswer(getCascadeDelTablesDoneForm.bind(this), null, null); \n}\n\nfunction getCascadeDelTablesDoneForm(answer, s) {\n    \n    var ansrArray = answer.split(';');\n    returnUrl = ansrArray[0];\n    var objList = ansrArray[2];\n    dlg = new GlideDialogWindow('delete_confirm_form');\n    dlg.setTitle('Confirmation');\n    if(objList == null) {\n       dlg.setWidth(275);\n    } else {\n       dlg.setWidth(450);\n    }\n    dlg.setPreference('sysparm_obj_id', objSysId);\n    dlg.setPreference('sysparm_table_name', tblName);\n    dlg.setPreference('sysparm_delobj_list', objList);  \n    dlg.setPreference('sysparm_parent_form', this);\n    dlg.render();\n    \n}\n\nfunction deleteCompleted() {\n    dlg.destroy();\n    var w = getTopWindow();\n    cbField = w.document.getElementById('glide_dialog_form_target_' + tblName);\n    if(cbField != null) {\n        // this is a dialog form, make sure the completion callback is called\n        cbField.value = 'sysverb_delete:' + objSysId;\n        cbField.onchange();\n        \n       // dismiss the dialog form\n       var elem = window.parent.document.getElementById('body_FormDialog');\n       if (elem)\n           new GlideWindow().locate(elem).destroy();\n    } else {\n        // this is a regular form, use the return URL to back to the correct view, where possible\n        if (returnUrl != 'null') {\n            window.location.href = returnUrl;\n        } else {           \n            // this is just the default case, in case everything else blows up, should never happen!\n            window.location.href = window.location.protocol + '/' + window.location.host + '/' + tblName + '_list.do?sysparm_userpref_module=' + module + '&sysparm_query=' + listQuery + '&sysparm_cancelable=true';\n        }        \n    }\t   \n}\n// Prompt: if dispatch is true and state is open, set state to In progress\n","action":"complete","response":"function validate_action(dispatch, state) {\n\tif ((dispatch == true) && (state == 'Open')) {\n\t\treturn true;\n\t} \n\telse {\n\t\talert ('Only Open incidents can be assigned to a technician');\n\t\treturn false;\n\t}\n}\n\nfunction validate_assign_to_group(sys_id) {\n    var ajax = new GlideAjax('IncidentAjax');\n    ajax.addParam('sysparm_name', 'validate_assign_to_group');\n    ajax.addParam('sysparm_group', g_form.getValue('assignment_group'));\n    ajax.addParam('sysparm_incident', sys_id);\n    ajax.getXMLAnswer(validate_assign_to_group_done);\n}\n\nfunction validate_assign_to_group_done(response) {\n\tif (response.indexOf('true') != -1) {\n\t\tg_form.setValue('assignment_group', response.split('true')[1]);\n\t} else {\n\t\talert('The selected group is not allowed to assign to this incident. The group has been disallowed.');\n\t\tg_form.setValue('assignment_group', '');\n\t}\n}\n\nfunction validate_assign_to_pool(sys_id) {\n    if (g_form.getValue('assignment_group') == '') {\n        g_form.setValue('assignment_group', g_form.getValue('business_service'));\n    }\n    var ajax = new GlideAjax('IncidentAjax');\n    ajax.addParam('sysparm_name', 'validate_assign_to_pool');\n    ajax.addParam('sysparm_group', g_form.getValue('assignment_group'));\n    ajax.addParam('sysparm_incident', sys_id);\n    ajax.getXMLAnswer(validate_assign_to_group_done);\n}"},
{"cuid":"cld98rrck00f8pq24ey0kaegj","createdAt":"2023-01-24 02:09:04.053","updatedAt":"2023-01-24 02:09:07.763","userCuid":"cld9unimw000wucguenaahfdy","prompt":"Update this code based following this prompt, \"set configuration item to parent incident configuration item\": function onChange(control, oldValue, newValue, isLoading, isTemplate){\n        if (isLoading || newValue === '') { return; }\n        if (newValue != null && newValue != ''){\n            var configurationItem = new GlideRecord('u_configuration_item');\n            configurationItem.addQuery('u_parent_incident_number', newValue);\n            if (configurationItem.query()){\n                g_form.setValue('u_configuration_item', configurationItem.u_configuration_item);\n            }\n        }\n    }\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 'no') { // when the new value is no\n        g_form.setMandatory('u_incident_type', true);\n        g_form.setMandatory('u_incident_subtype', true);\n    } \n}\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 'yes') { // when the new value is yes\n        g_form.setMandatory('u_incident_type', false);\n        g_form.setMandatory('u_incident_subtype', false);\n    } \n}\n\n// Generated by scribe.monster ```","action":"edit","response":"js\nif (isLoading || newValue === '') { return; }\nif (newValue != null && newValue != '') {\n    var configurationItem = new GlideRecord('u_configuration_item');\n    configurationItem.addQuery('u_parent_incident_number', newValue);\n    if (configurationItem.query()) {\n        g_form.setValue('u_configuration_item', configurationItem.u_configuration_item);\n    }\n}"},
{"cuid":"cld98t8ug00fbpq24yz09dlus","createdAt":"2023-01-24 02:10:13.385","updatedAt":"2023-01-24 02:10:14.573","userCuid":"cld9unimw000wucguenaahfdy","prompt":"\n// Prompt: When the caller is set to jace, set the group to cab\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 'jace') { // when the new value is jace\n        g_form.setValue('assignment_group', 'cab'); // set the group to cab, replace w/sysid\n    }\n}\n// Prompt: If the book changes to read, set the date to today.\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n  if (isLoading || newValue === '') { return; }\n  if (newValue == 'read') { // when the new value is read\n    var now = new Date(); // make a variable for today\n    var dateInUserFormat = getDateTimeFromFormat(now, g_user_date_time_format); // get it in the users format\n    g_form.setValue('date', dateInUserFormat); // set the date to today\n  }\n}\n// Prompt: show me the groups the user picked is a member of\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    var userAjax = new GlideAjax('global.UserAjax'); // call the UserAjax Script Include\n    userAjax.addParam('sysparm_name', 'getGroups'); // call the getGroups function\n    userAjax.addParam('sysparm_obj', JSON.stringify({\"userId\": newValue})); // pass in the new value for the user\n    userAjax.getXML(function(response){\n        var responseDocument = response.responseXML.document.Element.getAttribute('answer'); //get the answer\n        var serverObj = JSON.parse(answer); // make it a json object\n        var groups = serverObj.groups.join(', '); // make it a string with commas\n        g_form.addInfoMessage(groupString); // show it on the form\n    })\n}\n// Prompt: when food quantity becomes zero, require reason\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 0) { // when the new value is zero\n        g_form.setMandatory('reason', true);\n    }\n}\n// Prompt: get parent incident cmdb_ci\n    ","action":"complete","response":"var incident = new GlideRecord('cmdb_ci_incident');\n    incident.get(g_form.getValue('u_incident'));\n    var parent = incident.getElement('u_parent');\n\n"},
{"cuid":"cld9bqrad00ffpq24t9eg4vcd","createdAt":"2023-01-24 03:32:16.165","updatedAt":"2023-01-24 03:32:21.862","userCuid":"cld9unimy005nucgu0ll1gbfr","prompt":"When assignment group changes to service desk make additional comments mandatory and make state in progress","action":"complete","response":"(4) for the same for all the assignments</li>\n\t\t\t\t\t<li class=\"list-group-item\">When assignment group changes to service desk make additional comments mandatory and make state in progress(4) for the same for all the assignments</li>\n\t\t\t\t</ul>\n\t\t\t\t\n\t\t\t\t<hr>\n\n\t\t\t\t<ul class=\"list-group\">\n\t\t\t\t\t<li class=\"list-group-item\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</li>\n\t\t\t\t\t<li class=\"list-group-item\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</li>\n\t\t\t\t\t<li class=\"list-group-item\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim"},
{"cuid":"cld9c137p00fhpq24d7shf98w","createdAt":"2023-01-24 03:40:18.182","updatedAt":"2023-01-24 03:40:18.96","userCuid":"cld9unimy005nucgu0ll1gbfr","prompt":"Update this code based following this prompt, \"When assignment group changes to Service Desk make Additional Comments mandatory\": function onChange(control, oldValue, newValue, isLoading, isTemplate) {\n   if (isLoading || newValue === '') {\n      return;\n   }\n\n   //Type appropriate comment here, and begin script below\n   \n} ```","action":"edit","response":""},
{"cuid":"cld9c1lwc00fjpq24lcol6qz9","createdAt":"2023-01-24 03:40:42.396","updatedAt":"2023-01-24 03:40:44.155","userCuid":"cld9unimy005nucgu0ll1gbfr","prompt":"\n// Prompt: When the caller is set to jace, set the group to cab\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 'jace') { // when the new value is jace\n        g_form.setValue('assignment_group', 'cab'); // set the group to cab, replace w/sysid\n    }\n}\n// Prompt: If the book changes to read, set the date to today.\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n  if (isLoading || newValue === '') { return; }\n  if (newValue == 'read') { // when the new value is read\n    var now = new Date(); // make a variable for today\n    var dateInUserFormat = getDateTimeFromFormat(now, g_user_date_time_format); // get it in the users format\n    g_form.setValue('date', dateInUserFormat); // set the date to today\n  }\n}\n// Prompt: show me the groups the user picked is a member of\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    var userAjax = new GlideAjax('global.UserAjax'); // call the UserAjax Script Include\n    userAjax.addParam('sysparm_name', 'getGroups'); // call the getGroups function\n    userAjax.addParam('sysparm_obj', JSON.stringify({\"userId\": newValue})); // pass in the new value for the user\n    userAjax.getXML(function(response){\n        var responseDocument = response.responseXML.document.Element.getAttribute('answer'); //get the answer\n        var serverObj = JSON.parse(answer); // make it a json object\n        var groups = serverObj.groups.join(', '); // make it a string with commas\n        g_form.addInfoMessage(groupString); // show it on the form\n    })\n}\n// Prompt: when food quantity becomes zero, require reason\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 0) { // when the new value is zero\n        g_form.setMandatory('reason', true);\n    }\n}\n// Prompt: When assignment group changes to Service Desk make Additional Comments mandatory\n    ","action":"complete","response":"// and when it's not Service Desk, un-mandatory\n    function onChange(control, oldValue, newValue, isLoading, isTemplate) {\n        if (isLoading || newValue === '') { return; }\n        if (newValue == 'Service Desk') { // when the new value is Service Desk\n            g_form.setMandatory('additional_comments', true);\n        } else {\n            g_form.setMandatory('additional_comments', false);\n        }\n    }\n\n"},
{"cuid":"cld9eud6a00gipq24qh2bw91a","createdAt":"2023-01-24 04:59:03.346","updatedAt":"2023-01-24 04:59:07.977","userCuid":"cld9unimw000wucguenaahfdy","prompt":"\n// Prompt: Deletes current record after confirmation.\nvar ajaxHelper;\nvar objSysId;\nvar tblName;\nvar dlg;\nvar returnUrl;\nvar fromRelList;\nvar module;\nvar listQuery;\nvar stackName = null;\n\nfunction confirmAndDeleteFromForm() {   \n    objSysId = g_form.getUniqueValue();\n    tblName = g_form.getTableName();\n    fromRelList = g_form.getParameter('sysparm_from_related_list');\n    module = g_form.getParameter('sysparm_userpref_module');\n    listQuery = g_form.getParameter('sysparm_record_list');\n    stackName = g_form.getParameter('sysparm_nameofstack');\n\n    ajaxHelper = new GlideAjax('DeleteRecordAjax');\n    ajaxHelper.addParam('sysparm_name', 'getCascadeDeleteTables');\n    ajaxHelper.addParam('sysparm_obj_id', objSysId);\n    ajaxHelper.addParam('sysparm_table_name', tblName);\n    ajaxHelper.addParam('sysparm_nameofstack', stackName);\n    ajaxHelper.getXMLAnswer(getCascadeDelTablesDoneForm.bind(this), null, null); \n}\n\nfunction getCascadeDelTablesDoneForm(answer, s) {\n    \n    var ansrArray = answer.split(';');\n    returnUrl = ansrArray[0];\n    var objList = ansrArray[2];\n    dlg = new GlideDialogWindow('delete_confirm_form');\n    dlg.setTitle('Confirmation');\n    if(objList == null) {\n       dlg.setWidth(275);\n    } else {\n       dlg.setWidth(450);\n    }\n    dlg.setPreference('sysparm_obj_id', objSysId);\n    dlg.setPreference('sysparm_table_name', tblName);\n    dlg.setPreference('sysparm_delobj_list', objList);  \n    dlg.setPreference('sysparm_parent_form', this);\n    dlg.render();\n    \n}\n\nfunction deleteCompleted() {\n    dlg.destroy();\n    var w = getTopWindow();\n    cbField = w.document.getElementById('glide_dialog_form_target_' + tblName);\n    if(cbField != null) {\n        // this is a dialog form, make sure the completion callback is called\n        cbField.value = 'sysverb_delete:' + objSysId;\n        cbField.onchange();\n        \n       // dismiss the dialog form\n       var elem = window.parent.document.getElementById('body_FormDialog');\n       if (elem)\n           new GlideWindow().locate(elem).destroy();\n    } else {\n        // this is a regular form, use the return URL to back to the correct view, where possible\n        if (returnUrl != 'null') {\n            window.location.href = returnUrl;\n        } else {           \n            // this is just the default case, in case everything else blows up, should never happen!\n            window.location.href = window.location.protocol + '/' + window.location.host + '/' + tblName + '_list.do?sysparm_userpref_module=' + module + '&sysparm_query=' + listQuery + '&sysparm_cancelable=true';\n        }        \n    }\t   \n}\n// Prompt: if u_dispatch is true and state is open, set state to In progress\n","action":"complete","response":"var ajaxHelper;\nvar tblName;\nvar objSysId;\nvar stackName;\nvar cbField;\n\nfunction uDispatchCheck() {\n    tblName = g_form.getTableName();\n    objSysId = g_form.getUniqueValue();\n    stackName = g_form.getParameter('sysparm_nameofstack');\n    \n    ajaxHelper = new GlideAjax('u_dispatch_check');\n    ajaxHelper.addParam('sysparm_name', 'u_dispatch_check');\n    ajaxHelper.addParam('sysparm_table_name', tblName);\n    ajaxHelper.addParam('sysparm_obj_id', objSysId);\n    ajaxHelper.addParam('sysparm_nameofstack', stackName);\n    ajaxHelper.getXMLAnswer(checkForUDone.bind(this), null, null); \n}\n\nfunction checkForUDone(answer, s) {\n    var ansrArray = answer.split(';');\n    if (ansrArray[0] == \"true\") {\n        if (ansrArray[1] == \"open\") {\n            var cbField = getTopWindow().document.getElementById('glide_dialog_form_target_' + tblName);\n            if(cbField != null) {\n                // this is a dialog form, make sure the completion callback is called\n                cbField.value = 'sysverb_u_dispatch:' + objSysId;\n                cbField.onchange();\n                // dismiss the dialog form\n                var elem = window.parent.document.getElementById('body_FormDialog');\n                if (elem)\n                    new GlideWindow().locate(elem).destroy();\n            } else {\n                // this is a regular form, use the return URL to back to the correct view, where possible\n                if (ansrArray[2] != 'null') {\n                    window.location.href = ansrArray[2];\n                } else {\n                    // this is just the default case, in case everything else blows up,"},
{"cuid":"cld9c7von00fmpq24k5ahxbmt","createdAt":"2023-01-24 03:45:35.016","updatedAt":"2023-01-24 03:45:36.569","userCuid":"cld9unimx004cucgudurz9li3","prompt":"\n// Prompt: Create a script that sets the assignment group to the Manager's group if the priority is 1.\n(function executeRule(current, previous) {\n    if (current.getValue('priority', '1')) {\n        current.setValue('group', current.manager.group + '');\n    }\n})(current, previous);\n// Prompt: when status changes, if closed, set active to false\n(function executeRule(current, previous) {\n    // condition current.status.changes()\n    if (current.status == 'closed_created' || current.status == 'closed_duplicate' || current.status == 'closed_invalid') {\n        current.active = false;\n    } else {\n        current.active = true;\n    }\n})(current, previous);\n// Prompt: when change request changes, set parent to change request\n(function executeRule(current, previous) {\n    // condition current.change_request.changes()\n    current.parent = current.change_request;\n})(current, previous);\n// Prompt: do not allow changes to others delegates\n(function executeRule(current, previous) {\n    // condition current.user != gs.getUserID() && !gs.hasRole('admin')\n    gs.addInfoMessage(gs.getMessage(\"Cannot assign or modify other users' Delegates\"));\n    current.setAbortAction(true);\n})(current, previous);\n// Prompt: get the bot icon for slack, and set it from the response\n(function executeRule(current, previous) {\n    try {\n        var req = new sn_ws.RESTMessageV2();\n        req.setEndpoint('https://slack.com/api/team.info');\n        req.setHttpMethod('get');\n        var e = new GlideEncryptionUtil();\n        var authToken = e.getClearPassword2('token_verification', 'token', current.provider_auth.outbound_message_creation);\n        if (JSUtil.notNil(authToken))\n            req.setRequestHeader('Authorization', 'Bearer ' + authToken);\n        var resp = req.execute();\n        var team_icon = JSON.parse(resp.getBody()).team.icon.image_88;\n        current.setValue(\"icon\", team_icon);\n    } catch (ex) {\n        gs.error('Error getting slack team info: ' + ex.getMessage());\n    }\n})(current, previous);\n// Prompt: when the start and end dates change, only allow dates where the start is before the end\n(function executeRule(current, previous) {\n    // condition current.start_date.changes() || current.end_date.changes()\n    if (!current.start_date.nil() && !current.end_date.nil() && current.start_date > current.end_date) {\n        current.setAbortAction(true);\n        gs.addErrorMessage(gs.getMessage(\"The start date cannot be after the end date\"));\n    }\n})(current, previous);\n// Prompt: when the date changes is empty, format it in the star trek format (YYYY.ElapsedDays) and set it in the star date field\n(function executeRule(current, previous) {\n    // condition current.date.changes()\n    if (!current.date.nil()) {\n        var date = new GlideDateTime(current.date);\n        var year = date.getYear();\n        var elapsedDays = date.getElapsed(date.getNumericValue());\n        current.star_date = year + '.' + elapsedDays;\n    }\n})(current, previous);\n// Prompt: write a business rule to display table name on record creation \n","action":"complete","response":"// (Cannot use this function because of the variable context\n//(function executeRule(current, previous) {\n//    // condition current.changes()\n//    gs.addInfoMessage('Created: ' + current.table_name);\n//})(current, previous);\n"},
{"cuid":"cld9cnywg00frpq24vzw5y5fw","createdAt":"2023-01-24 03:58:05.68","updatedAt":"2023-01-24 03:58:08.46","userCuid":"cld9unimw000wucguenaahfdy","prompt":"function checkUpstreamWork() {\n   var gajax = new GlideAjax(\"SMTaskDependency\");\n   gajax.addParam(\"sysparm_name\", \"checkUpstreamTasks\");\n   gajax.addParam(\"state_flow_id\", \"b48e00ead7201100158ba6859e6103c7\");\n   gajax.addParam(\"sysparm_uuid\", g_form.getUniqueValue());\n   gajax.getXMLAnswer(ajaxResponse);\n}\n\nfunction ajaxResponse(response) {\n   if (response == 'true')\n      showDialogWork();\n   else {\n    gsftSubmit(null, g_form.getFormElement(), gel('start_work').value);\n\tvar ajax = new GlideAjax('GeolocationAJAX');\n    ajax.addParam('sysparm_name', 'checkTracking');\n\tajax.addParam('sysparm_usersysid', g_user.userID);\n\tajax.getXML(function(response){\n\tvar isUserTracked = response.responseXML.documentElement.getAttribute(\"answer\");\n\tvar result = isUserTracked.split(',');\n\tif(result[0] == 'true') {\n\tnavigator.geolocation.getCurrentPosition(\n\tfunction (position) {\n\tvar ajax = new GlideAjax('GeolocationAJAX');\n\tajax.addParam('sysparm_name', 'storeGeolocationHistory');\n\tajax.addParam('sysparm_usersysid', g_user.userID);\n\tajax.addParam('sysparm_latitude', position.coords.latitude);\n\tajax.addParam('sysparm_longitude', position.coords.longitude);\n\tajax.addParam('sysparm_action', 'Start Work');\n\tajax.addParam('sysparm_task', g_form.getUniqueValue());\n\tajax.getXML();\n\t\t\t});\n\t\t}\n\t});\n   }\n }\n\nfunction showDialogWork() {\n    var dialogClass;\n    try {\n    dialogClass = GlideModal;\n    } catch(e) {\n   dialogClass = GlideDialogWindow;\n    }\n    var dialog = new dialogClass(\"sm_open_task_upstream_work\"); //Render the dialog containing the UI Page 'task_comments_dialog'\n    dialog.setTitle(\"Are you sure?\"); //Set the dialog title\n    dialog.setPreference(\"sys_id\", g_form.getUniqueValue());\n    dialog.setPreference(\"short_text\", \"Open task dependencies still remain, are you sure you would like to start work?\");\n    dialog.setPreference('state_flow_id', 'b48e00ead7201100158ba6859e6103c7');\n    dialog.render(); //Open the dialog\n}\n\nif (typeof window == 'undefined')\n\tserverStartWork();\n\nfunction serverStartWork() {\n\tnew global.StateFlow().processFlow(current, 'b48e00ead7201100158ba6859e6103c7', 'manual');\n\t//Moving redirect from state flow to UI action\n\taction.setRedirectURL(current);\n}\n\"\"\"\nExplain the above code step-by-step in simple english.","action":"explain","response":"\n\nThe code above is checking if there are any open tasks that are dependent on the current task. If there are, a dialog box pops up asking the user if they are sure they want to start work on the current task. If the user clicks 'Yes', the task is marked as 'In Progress' and the user is redirected to the task. If the user clicks 'No', nothing happens."},
{"cuid":"cld9cpu5x00ftpq24u8udzzl9","createdAt":"2023-01-24 03:59:32.853","updatedAt":"2023-01-24 03:59:34.797","userCuid":"cld9unimx004cucgudurz9li3","prompt":"gs.getSession().isInteractive() && !(gs.hasRole(\"admin\") || gs.hasRole(\"user_admin\"))\nexplain this condition\n","action":"ask","response":"\nThis condition checks to see if the user is in an interactive session and does not have either the \"admin\" or \"user_admin\" role. If this is true, then the condition evaluates to true."},
{"cuid":"cld9cxjbi00fvpq24a7w8sp6k","createdAt":"2023-01-24 04:05:32.046","updatedAt":"2023-01-24 04:05:34.399","userCuid":"cld9unimw000wucguenaahfdy","prompt":"\n// Prompt: Deletes current record after confirmation.\nvar ajaxHelper;\nvar objSysId;\nvar tblName;\nvar dlg;\nvar returnUrl;\nvar fromRelList;\nvar module;\nvar listQuery;\nvar stackName = null;\n\nfunction confirmAndDeleteFromForm() {   \n    objSysId = g_form.getUniqueValue();\n    tblName = g_form.getTableName();\n    fromRelList = g_form.getParameter('sysparm_from_related_list');\n    module = g_form.getParameter('sysparm_userpref_module');\n    listQuery = g_form.getParameter('sysparm_record_list');\n    stackName = g_form.getParameter('sysparm_nameofstack');\n\n    ajaxHelper = new GlideAjax('DeleteRecordAjax');\n    ajaxHelper.addParam('sysparm_name', 'getCascadeDeleteTables');\n    ajaxHelper.addParam('sysparm_obj_id', objSysId);\n    ajaxHelper.addParam('sysparm_table_name', tblName);\n    ajaxHelper.addParam('sysparm_nameofstack', stackName);\n    ajaxHelper.getXMLAnswer(getCascadeDelTablesDoneForm.bind(this), null, null); \n}\n\nfunction getCascadeDelTablesDoneForm(answer, s) {\n    \n    var ansrArray = answer.split(';');\n    returnUrl = ansrArray[0];\n    var objList = ansrArray[2];\n    dlg = new GlideDialogWindow('delete_confirm_form');\n    dlg.setTitle('Confirmation');\n    if(objList == null) {\n       dlg.setWidth(275);\n    } else {\n       dlg.setWidth(450);\n    }\n    dlg.setPreference('sysparm_obj_id', objSysId);\n    dlg.setPreference('sysparm_table_name', tblName);\n    dlg.setPreference('sysparm_delobj_list', objList);  \n    dlg.setPreference('sysparm_parent_form', this);\n    dlg.render();\n    \n}\n\nfunction deleteCompleted() {\n    dlg.destroy();\n    var w = getTopWindow();\n    cbField = w.document.getElementById('glide_dialog_form_target_' + tblName);\n    if(cbField != null) {\n        // this is a dialog form, make sure the completion callback is called\n        cbField.value = 'sysverb_delete:' + objSysId;\n        cbField.onchange();\n        \n       // dismiss the dialog form\n       var elem = window.parent.document.getElementById('body_FormDialog');\n       if (elem)\n           new GlideWindow().locate(elem).destroy();\n    } else {\n        // this is a regular form, use the return URL to back to the correct view, where possible\n        if (returnUrl != 'null') {\n            window.location.href = returnUrl;\n        } else {           \n            // this is just the default case, in case everything else blows up, should never happen!\n            window.location.href = window.location.protocol + '/' + window.location.host + '/' + tblName + '_list.do?sysparm_userpref_module=' + module + '&sysparm_query=' + listQuery + '&sysparm_cancelable=true';\n        }        \n    }\t   \n}\n// Prompt: set state of task to in progress\n","action":"complete","response":"\nfunction setTaskInProgress() {\n    var taskId = g_form.getUniqueValue();\n    var processId = g_form.getValue('process');\n    var state = '2';\n    var ajax = new GlideAjax('SetTaskStateAjax');\n    ajax.addParam('sysparm_name', 'setTaskState');\n    ajax.addParam('sysparm_task_id', taskId);\n    ajax.addParam('sysparm_process_id', processId);\n    ajax.addParam('sysparm_state', state);\n    ajax.getXMLAnswer(null, null, null);\n}\n\n"},
{"cuid":"cld9d17k400fxpq24kf8hzmvx","createdAt":"2023-01-24 04:08:23.428","updatedAt":"2023-01-24 04:08:26.166","userCuid":"cld9unimw000wucguenaahfdy","prompt":"function setTaskInProgress() {\n    var taskId = g_form.getUniqueValue();\n    var processId = g_form.getValue('process');\n    var state = '2';\n    var ajax = new GlideAjax('SetTaskStateAjax');\n    ajax.addParam('sysparm_name', 'setTaskState');\n    ajax.addParam('sysparm_task_id', taskId);\n    ajax.addParam('sysparm_process_id', processId);\n    ajax.addParam('sysparm_state', state);\n    ajax.getXMLAnswer(null, null, null);\n}\n\"\"\"\nExplain the above code step-by-step in simple english.","action":"explain","response":"\n\nThe code above is a function that sets a task to be in progress. It takes the task id and process id from the form, and sets the state to '2', which means in progress. It then makes an AJAX call to the SetTaskStateAjax function, passing in the task id, process id, and state. This will update the task in the system."},
{"cuid":"cld9mf1pk00ihpq24711znr4w","createdAt":"2023-01-24 08:31:05.576","updatedAt":"2023-01-24 08:31:06.487","userCuid":"cld9unimw000wucguenaahfdy","prompt":"function setState() {\n    var incidentTask = new GlideRecord('task');\n    task.get(g_form.getUniqueValue());\n    task.setValue('state', 2);\n    task.update();\n}\n\"\"\"\nExplain the above code step-by-step in simple english.","action":"explain","response":"\n\nThe code above sets the state of an incident task to \"2\", which means \"In Progress\"."},
{"cuid":"cld9mhcyb00ikpq24qjsc0v8p","createdAt":"2023-01-24 08:32:53.459","updatedAt":"2023-01-24 08:32:55.685","userCuid":"cld9unimw000wucguenaahfdy","prompt":"function setState() {\n    var Task = new GlideRecord('task');\n    task.get(g_form.getUniqueValue());\n    task.setValue('state', 2);\n    task.update();\n}\n\"\"\"\nExplain the above code step-by-step in simple english.","action":"explain","response":"\n\nThe code above sets the state of a task to '2' using a GlideRecord.\n\nFirst, a new GlideRecord is created for the 'task' table.\n\nNext, the task with the unique ID that is stored in the 'g_form' object is retrieved.\n\nFinally, the 'state' field of the task is set to '2' and the task is updated."},
{"cuid":"cld9d5iyt00fzpq2487qe0zy7","createdAt":"2023-01-24 04:11:44.837","updatedAt":"2023-01-24 04:11:46.966","userCuid":"cld9unimw000wucguenaahfdy","prompt":"\n// Prompt: Deletes current record after confirmation.\nvar ajaxHelper;\nvar objSysId;\nvar tblName;\nvar dlg;\nvar returnUrl;\nvar fromRelList;\nvar module;\nvar listQuery;\nvar stackName = null;\n\nfunction confirmAndDeleteFromForm() {   \n    objSysId = g_form.getUniqueValue();\n    tblName = g_form.getTableName();\n    fromRelList = g_form.getParameter('sysparm_from_related_list');\n    module = g_form.getParameter('sysparm_userpref_module');\n    listQuery = g_form.getParameter('sysparm_record_list');\n    stackName = g_form.getParameter('sysparm_nameofstack');\n\n    ajaxHelper = new GlideAjax('DeleteRecordAjax');\n    ajaxHelper.addParam('sysparm_name', 'getCascadeDeleteTables');\n    ajaxHelper.addParam('sysparm_obj_id', objSysId);\n    ajaxHelper.addParam('sysparm_table_name', tblName);\n    ajaxHelper.addParam('sysparm_nameofstack', stackName);\n    ajaxHelper.getXMLAnswer(getCascadeDelTablesDoneForm.bind(this), null, null); \n}\n\nfunction getCascadeDelTablesDoneForm(answer, s) {\n    \n    var ansrArray = answer.split(';');\n    returnUrl = ansrArray[0];\n    var objList = ansrArray[2];\n    dlg = new GlideDialogWindow('delete_confirm_form');\n    dlg.setTitle('Confirmation');\n    if(objList == null) {\n       dlg.setWidth(275);\n    } else {\n       dlg.setWidth(450);\n    }\n    dlg.setPreference('sysparm_obj_id', objSysId);\n    dlg.setPreference('sysparm_table_name', tblName);\n    dlg.setPreference('sysparm_delobj_list', objList);  \n    dlg.setPreference('sysparm_parent_form', this);\n    dlg.render();\n    \n}\n\nfunction deleteCompleted() {\n    dlg.destroy();\n    var w = getTopWindow();\n    cbField = w.document.getElementById('glide_dialog_form_target_' + tblName);\n    if(cbField != null) {\n        // this is a dialog form, make sure the completion callback is called\n        cbField.value = 'sysverb_delete:' + objSysId;\n        cbField.onchange();\n        \n       // dismiss the dialog form\n       var elem = window.parent.document.getElementById('body_FormDialog');\n       if (elem)\n           new GlideWindow().locate(elem).destroy();\n    } else {\n        // this is a regular form, use the return URL to back to the correct view, where possible\n        if (returnUrl != 'null') {\n            window.location.href = returnUrl;\n        } else {           \n            // this is just the default case, in case everything else blows up, should never happen!\n            window.location.href = window.location.protocol + '/' + window.location.host + '/' + tblName + '_list.do?sysparm_userpref_module=' + module + '&sysparm_query=' + listQuery + '&sysparm_cancelable=true';\n        }        \n    }\t   \n}\n// Prompt: set status to in progress\n","action":"complete","response":"function setInProgress() {\n    var ajaxHelper = new GlideAjax('SetStatusAjax');\n    ajaxHelper.addParam('sysparm_name', 'setInProgress');\n    ajaxHelper.addParam('sysparm_table', g_form.getTableName());\n    ajaxHelper.addParam('sysparm_sys_id', g_form.getUniqueValue());\n    ajaxHelper.getXMLAnswer(setInProgressDone);\n}\n\nfunction setInProgressDone(answer, s) {\n    // nothing to do here\n}\n\n"},
{"cuid":"cld9d6qt200g2pq2411tt6cy5","createdAt":"2023-01-24 04:12:41.654","updatedAt":"2023-01-24 04:12:43.131","userCuid":"cld9unimw000wucguenaahfdy","prompt":"\n// Prompt: Deletes current record after confirmation.\nvar ajaxHelper;\nvar objSysId;\nvar tblName;\nvar dlg;\nvar returnUrl;\nvar fromRelList;\nvar module;\nvar listQuery;\nvar stackName = null;\n\nfunction confirmAndDeleteFromForm() {   \n    objSysId = g_form.getUniqueValue();\n    tblName = g_form.getTableName();\n    fromRelList = g_form.getParameter('sysparm_from_related_list');\n    module = g_form.getParameter('sysparm_userpref_module');\n    listQuery = g_form.getParameter('sysparm_record_list');\n    stackName = g_form.getParameter('sysparm_nameofstack');\n\n    ajaxHelper = new GlideAjax('DeleteRecordAjax');\n    ajaxHelper.addParam('sysparm_name', 'getCascadeDeleteTables');\n    ajaxHelper.addParam('sysparm_obj_id', objSysId);\n    ajaxHelper.addParam('sysparm_table_name', tblName);\n    ajaxHelper.addParam('sysparm_nameofstack', stackName);\n    ajaxHelper.getXMLAnswer(getCascadeDelTablesDoneForm.bind(this), null, null); \n}\n\nfunction getCascadeDelTablesDoneForm(answer, s) {\n    \n    var ansrArray = answer.split(';');\n    returnUrl = ansrArray[0];\n    var objList = ansrArray[2];\n    dlg = new GlideDialogWindow('delete_confirm_form');\n    dlg.setTitle('Confirmation');\n    if(objList == null) {\n       dlg.setWidth(275);\n    } else {\n       dlg.setWidth(450);\n    }\n    dlg.setPreference('sysparm_obj_id', objSysId);\n    dlg.setPreference('sysparm_table_name', tblName);\n    dlg.setPreference('sysparm_delobj_list', objList);  \n    dlg.setPreference('sysparm_parent_form', this);\n    dlg.render();\n    \n}\n\nfunction deleteCompleted() {\n    dlg.destroy();\n    var w = getTopWindow();\n    cbField = w.document.getElementById('glide_dialog_form_target_' + tblName);\n    if(cbField != null) {\n        // this is a dialog form, make sure the completion callback is called\n        cbField.value = 'sysverb_delete:' + objSysId;\n        cbField.onchange();\n        \n       // dismiss the dialog form\n       var elem = window.parent.document.getElementById('body_FormDialog');\n       if (elem)\n           new GlideWindow().locate(elem).destroy();\n    } else {\n        // this is a regular form, use the return URL to back to the correct view, where possible\n        if (returnUrl != 'null') {\n            window.location.href = returnUrl;\n        } else {           \n            // this is just the default case, in case everything else blows up, should never happen!\n            window.location.href = window.location.protocol + '/' + window.location.host + '/' + tblName + '_list.do?sysparm_userpref_module=' + module + '&sysparm_query=' + listQuery + '&sysparm_cancelable=true';\n        }        \n    }\t   \n}\n// Prompt: set state to in progress\n","action":"complete","response":"function setStateToInProgress() {\n    var subject = g_form.getValue('state');\n    var note = g_form.getValue('state_reason');\n    var updateStateString = 'In Progress';  \n    if (subject.toLowerCase() == 'open' && note.includes('in progress') == false) {\n        g_form.setValue('state_reason', note + ' [In Progress]');\n    }\n    g_form.setValue('state', updateStateString);\n}\n\n"},
{"cuid":"cld9d8fx600g4pq245q3pyjng","createdAt":"2023-01-24 04:14:00.859","updatedAt":"2023-01-24 04:14:05.866","userCuid":"cld9unimw000wucguenaahfdy","prompt":"\n// Prompt: Deletes current record after confirmation.\nvar ajaxHelper;\nvar objSysId;\nvar tblName;\nvar dlg;\nvar returnUrl;\nvar fromRelList;\nvar module;\nvar listQuery;\nvar stackName = null;\n\nfunction confirmAndDeleteFromForm() {   \n    objSysId = g_form.getUniqueValue();\n    tblName = g_form.getTableName();\n    fromRelList = g_form.getParameter('sysparm_from_related_list');\n    module = g_form.getParameter('sysparm_userpref_module');\n    listQuery = g_form.getParameter('sysparm_record_list');\n    stackName = g_form.getParameter('sysparm_nameofstack');\n\n    ajaxHelper = new GlideAjax('DeleteRecordAjax');\n    ajaxHelper.addParam('sysparm_name', 'getCascadeDeleteTables');\n    ajaxHelper.addParam('sysparm_obj_id', objSysId);\n    ajaxHelper.addParam('sysparm_table_name', tblName);\n    ajaxHelper.addParam('sysparm_nameofstack', stackName);\n    ajaxHelper.getXMLAnswer(getCascadeDelTablesDoneForm.bind(this), null, null); \n}\n\nfunction getCascadeDelTablesDoneForm(answer, s) {\n    \n    var ansrArray = answer.split(';');\n    returnUrl = ansrArray[0];\n    var objList = ansrArray[2];\n    dlg = new GlideDialogWindow('delete_confirm_form');\n    dlg.setTitle('Confirmation');\n    if(objList == null) {\n       dlg.setWidth(275);\n    } else {\n       dlg.setWidth(450);\n    }\n    dlg.setPreference('sysparm_obj_id', objSysId);\n    dlg.setPreference('sysparm_table_name', tblName);\n    dlg.setPreference('sysparm_delobj_list', objList);  \n    dlg.setPreference('sysparm_parent_form', this);\n    dlg.render();\n    \n}\n\nfunction deleteCompleted() {\n    dlg.destroy();\n    var w = getTopWindow();\n    cbField = w.document.getElementById('glide_dialog_form_target_' + tblName);\n    if(cbField != null) {\n        // this is a dialog form, make sure the completion callback is called\n        cbField.value = 'sysverb_delete:' + objSysId;\n        cbField.onchange();\n        \n       // dismiss the dialog form\n       var elem = window.parent.document.getElementById('body_FormDialog');\n       if (elem)\n           new GlideWindow().locate(elem).destroy();\n    } else {\n        // this is a regular form, use the return URL to back to the correct view, where possible\n        if (returnUrl != 'null') {\n            window.location.href = returnUrl;\n        } else {           \n            // this is just the default case, in case everything else blows up, should never happen!\n            window.location.href = window.location.protocol + '/' + window.location.host + '/' + tblName + '_list.do?sysparm_userpref_module=' + module + '&sysparm_query=' + listQuery + '&sysparm_cancelable=true';\n        }        \n    }\t   \n}\n// Prompt: set current task state to 2\n","action":"complete","response":"var ajaxHelper;\nvar objSysId;\nvar tblName;\nvar dlg;\nvar returnUrl;\nvar fromRelList;\nvar module;\nvar listQuery;\nvar stackName = null;\n\nfunction confirmAndDeleteFromTaskList() {   \n    objSysId = g_form.getUniqueValue();\n    tblName = g_form.getTableName();\n    fromRelList = g_form.getParameter('sysparm_from_related_list');\n    module = g_form.getParameter('sysparm_userpref_module');\n    listQuery = g_form.getParameter('sysparm_record_list');\n    stackName = g_form.getParameter('sysparm_nameofstack');\n\n    ajaxHelper = new GlideAjax('DeleteRecordAjax');\n    ajaxHelper.addParam('sysparm_name', 'getCascadeDeleteTables');\n    ajaxHelper.addParam('sysparm_obj_id', objSysId);\n    ajaxHelper.addParam('sysparm_table_name', tblName);\n    ajaxHelper.addParam('sysparm_nameofstack', stackName);\n    ajaxHelper.getXMLAnswer(getCascadeDelTablesDoneTaskList.bind(this), null, null); \n}\n\nfunction getCascadeDelTablesDoneTaskList(answer, s) {\n    \n    var ansrArray = answer.split(';');\n    returnUrl = ansrArray[0];\n    var objList = ansrArray[2];\n    dlg = new GlideDialogWindow('delete_confirm_form');\n    dlg.setTitle('Confirmation');\n    if(objList == null) {\n       dlg.setWidth(275);\n    } else {\n       dlg.setWidth(450);\n    }\n    dlg.setPreference('sysparm_obj_id', objSysId);\n    dlg.setPreference('sysparm_table_name', tblName);\n    dlg.setPreference('sys"},
{"cuid":"cld9d9iwv00g7pq24hzscti8g","createdAt":"2023-01-24 04:14:51.391","updatedAt":"2023-01-24 04:14:53.847","userCuid":"cld9unimw000wucguenaahfdy","prompt":"\n// Prompt: Deletes current record after confirmation.\nvar ajaxHelper;\nvar objSysId;\nvar tblName;\nvar dlg;\nvar returnUrl;\nvar fromRelList;\nvar module;\nvar listQuery;\nvar stackName = null;\n\nfunction confirmAndDeleteFromForm() {   \n    objSysId = g_form.getUniqueValue();\n    tblName = g_form.getTableName();\n    fromRelList = g_form.getParameter('sysparm_from_related_list');\n    module = g_form.getParameter('sysparm_userpref_module');\n    listQuery = g_form.getParameter('sysparm_record_list');\n    stackName = g_form.getParameter('sysparm_nameofstack');\n\n    ajaxHelper = new GlideAjax('DeleteRecordAjax');\n    ajaxHelper.addParam('sysparm_name', 'getCascadeDeleteTables');\n    ajaxHelper.addParam('sysparm_obj_id', objSysId);\n    ajaxHelper.addParam('sysparm_table_name', tblName);\n    ajaxHelper.addParam('sysparm_nameofstack', stackName);\n    ajaxHelper.getXMLAnswer(getCascadeDelTablesDoneForm.bind(this), null, null); \n}\n\nfunction getCascadeDelTablesDoneForm(answer, s) {\n    \n    var ansrArray = answer.split(';');\n    returnUrl = ansrArray[0];\n    var objList = ansrArray[2];\n    dlg = new GlideDialogWindow('delete_confirm_form');\n    dlg.setTitle('Confirmation');\n    if(objList == null) {\n       dlg.setWidth(275);\n    } else {\n       dlg.setWidth(450);\n    }\n    dlg.setPreference('sysparm_obj_id', objSysId);\n    dlg.setPreference('sysparm_table_name', tblName);\n    dlg.setPreference('sysparm_delobj_list', objList);  \n    dlg.setPreference('sysparm_parent_form', this);\n    dlg.render();\n    \n}\n\nfunction deleteCompleted() {\n    dlg.destroy();\n    var w = getTopWindow();\n    cbField = w.document.getElementById('glide_dialog_form_target_' + tblName);\n    if(cbField != null) {\n        // this is a dialog form, make sure the completion callback is called\n        cbField.value = 'sysverb_delete:' + objSysId;\n        cbField.onchange();\n        \n       // dismiss the dialog form\n       var elem = window.parent.document.getElementById('body_FormDialog');\n       if (elem)\n           new GlideWindow().locate(elem).destroy();\n    } else {\n        // this is a regular form, use the return URL to back to the correct view, where possible\n        if (returnUrl != 'null') {\n            window.location.href = returnUrl;\n        } else {           \n            // this is just the default case, in case everything else blows up, should never happen!\n            window.location.href = window.location.protocol + '/' + window.location.host + '/' + tblName + '_list.do?sysparm_userpref_module=' + module + '&sysparm_query=' + listQuery + '&sysparm_cancelable=true';\n        }        \n    }\t   \n}\n// Prompt: i want the state of the current task to move ti \"in progress\"\n","action":"complete","response":"var ajaxHelper;\nvar tblName;\nvar dlg;\nvar returnUrl;\n\nfunction moveInProgress() {   \n    tblName = g_form.getTableName();\n    ajaxHelper = new GlideAjax('FormAjax');\n    ajaxHelper.addParam('sysparm_name', 'moveTaskInProgress');\n    ajaxHelper.addParam('sysparm_table_name', tblName);\n    ajaxHelper.addParam('sysparm_view', view);\n    ajaxHelper.addParam('sysparm_stack_name', stackName);\n    ajaxHelper.getXMLAnswer(moveInProgressDoneForm.bind(this), null, null); \n}\n\nfunction moveInProgressDoneForm(answer, s) {\n    window.location.href = answer;\n}\n\n// Close the window\nfunction closeWindow() {\n    window.opener=window.self;\n    window.close();\n}\n\n"},
{"cuid":"cld9el3i400gapq24umnco2y9","createdAt":"2023-01-24 04:51:50.908","updatedAt":"2023-01-24 04:51:52.503","userCuid":"cld9unimw000wucguenaahfdy","prompt":"\n// Prompt: Deletes current record after confirmation.\nvar ajaxHelper;\nvar objSysId;\nvar tblName;\nvar dlg;\nvar returnUrl;\nvar fromRelList;\nvar module;\nvar listQuery;\nvar stackName = null;\n\nfunction confirmAndDeleteFromForm() {   \n    objSysId = g_form.getUniqueValue();\n    tblName = g_form.getTableName();\n    fromRelList = g_form.getParameter('sysparm_from_related_list');\n    module = g_form.getParameter('sysparm_userpref_module');\n    listQuery = g_form.getParameter('sysparm_record_list');\n    stackName = g_form.getParameter('sysparm_nameofstack');\n\n    ajaxHelper = new GlideAjax('DeleteRecordAjax');\n    ajaxHelper.addParam('sysparm_name', 'getCascadeDeleteTables');\n    ajaxHelper.addParam('sysparm_obj_id', objSysId);\n    ajaxHelper.addParam('sysparm_table_name', tblName);\n    ajaxHelper.addParam('sysparm_nameofstack', stackName);\n    ajaxHelper.getXMLAnswer(getCascadeDelTablesDoneForm.bind(this), null, null); \n}\n\nfunction getCascadeDelTablesDoneForm(answer, s) {\n    \n    var ansrArray = answer.split(';');\n    returnUrl = ansrArray[0];\n    var objList = ansrArray[2];\n    dlg = new GlideDialogWindow('delete_confirm_form');\n    dlg.setTitle('Confirmation');\n    if(objList == null) {\n       dlg.setWidth(275);\n    } else {\n       dlg.setWidth(450);\n    }\n    dlg.setPreference('sysparm_obj_id', objSysId);\n    dlg.setPreference('sysparm_table_name', tblName);\n    dlg.setPreference('sysparm_delobj_list', objList);  \n    dlg.setPreference('sysparm_parent_form', this);\n    dlg.render();\n    \n}\n\nfunction deleteCompleted() {\n    dlg.destroy();\n    var w = getTopWindow();\n    cbField = w.document.getElementById('glide_dialog_form_target_' + tblName);\n    if(cbField != null) {\n        // this is a dialog form, make sure the completion callback is called\n        cbField.value = 'sysverb_delete:' + objSysId;\n        cbField.onchange();\n        \n       // dismiss the dialog form\n       var elem = window.parent.document.getElementById('body_FormDialog');\n       if (elem)\n           new GlideWindow().locate(elem).destroy();\n    } else {\n        // this is a regular form, use the return URL to back to the correct view, where possible\n        if (returnUrl != 'null') {\n            window.location.href = returnUrl;\n        } else {           \n            // this is just the default case, in case everything else blows up, should never happen!\n            window.location.href = window.location.protocol + '/' + window.location.host + '/' + tblName + '_list.do?sysparm_userpref_module=' + module + '&sysparm_query=' + listQuery + '&sysparm_cancelable=true';\n        }        \n    }\t   \n}\n// Prompt: set status to In progress\n","action":"complete","response":"function setStatusInProgress(element) {\n    var status = g_form.getValue('state');\n    if(status == 'Approved') {\n        g_form.setValue('state', 'In Progress');\n    } else {\n        g_form.setValue('state', 'Requested');\n    }\n  \n}\n\n"},
{"cuid":"cld9fk8ld00gnpq24fv1pkb7e","createdAt":"2023-01-24 05:19:10.465","updatedAt":"2023-01-24 05:19:14.866","userCuid":"cld9unimw000wucguenaahfdy","prompt":"\n// Prompt: Deletes current record after confirmation.\nvar ajaxHelper;\nvar objSysId;\nvar tblName;\nvar dlg;\nvar returnUrl;\nvar fromRelList;\nvar module;\nvar listQuery;\nvar stackName = null;\n\nfunction confirmAndDeleteFromForm() {   \n    objSysId = g_form.getUniqueValue();\n    tblName = g_form.getTableName();\n    fromRelList = g_form.getParameter('sysparm_from_related_list');\n    module = g_form.getParameter('sysparm_userpref_module');\n    listQuery = g_form.getParameter('sysparm_record_list');\n    stackName = g_form.getParameter('sysparm_nameofstack');\n\n    ajaxHelper = new GlideAjax('DeleteRecordAjax');\n    ajaxHelper.addParam('sysparm_name', 'getCascadeDeleteTables');\n    ajaxHelper.addParam('sysparm_obj_id', objSysId);\n    ajaxHelper.addParam('sysparm_table_name', tblName);\n    ajaxHelper.addParam('sysparm_nameofstack', stackName);\n    ajaxHelper.getXMLAnswer(getCascadeDelTablesDoneForm.bind(this), null, null); \n}\n\nfunction getCascadeDelTablesDoneForm(answer, s) {\n    \n    var ansrArray = answer.split(';');\n    returnUrl = ansrArray[0];\n    var objList = ansrArray[2];\n    dlg = new GlideDialogWindow('delete_confirm_form');\n    dlg.setTitle('Confirmation');\n    if(objList == null) {\n       dlg.setWidth(275);\n    } else {\n       dlg.setWidth(450);\n    }\n    dlg.setPreference('sysparm_obj_id', objSysId);\n    dlg.setPreference('sysparm_table_name', tblName);\n    dlg.setPreference('sysparm_delobj_list', objList);  \n    dlg.setPreference('sysparm_parent_form', this);\n    dlg.render();\n    \n}\n\nfunction deleteCompleted() {\n    dlg.destroy();\n    var w = getTopWindow();\n    cbField = w.document.getElementById('glide_dialog_form_target_' + tblName);\n    if(cbField != null) {\n        // this is a dialog form, make sure the completion callback is called\n        cbField.value = 'sysverb_delete:' + objSysId;\n        cbField.onchange();\n        \n       // dismiss the dialog form\n       var elem = window.parent.document.getElementById('body_FormDialog');\n       if (elem)\n           new GlideWindow().locate(elem).destroy();\n    } else {\n        // this is a regular form, use the return URL to back to the correct view, where possible\n        if (returnUrl != 'null') {\n            window.location.href = returnUrl;\n        } else {           \n            // this is just the default case, in case everything else blows up, should never happen!\n            window.location.href = window.location.protocol + '/' + window.location.host + '/' + tblName + '_list.do?sysparm_userpref_module=' + module + '&sysparm_query=' + listQuery + '&sysparm_cancelable=true';\n        }        \n    }\t   \n}\n// Prompt: change state to In Progress\n","action":"complete","response":"function changeStateToInProgress() {\n    var docID = g_form.getUniqueValue();\n    var aj = new GlideAjax('ChangeStateAjax');\n    aj.addParam('sysparm_name', 'ChangeStateToInProgress');\n    aj.addParam('sysparm_doc_id', docID);\n    aj.addParam('sysparm_table_name', g_form.getTableName());\n    aj.addParam('sysparm_stack_name', stackName);\n    aj.getXMLAnswer(refreshPage.bind(this), null, null);\n}\n\nfunction changeStateToInProgressForm() {\n    var docID = g_form.getUniqueValue();\n    var aj = new GlideAjax('ChangeStateAjax');\n    aj.addParam('sysparm_name', 'ChangeStateToInProgress');\n    aj.addParam('sysparm_doc_id', docID);\n    aj.addParam('sysparm_table_name', g_form.getTableName());\n    aj.addParam('sysparm_stack_name', stackName);\n    aj.getXMLAnswer(refreshPageForm.bind(this), null, null);\n}\n\nfunction refreshPageForm(answer, s) {\n    var url = g_form.getAction() + '&sysparm_stack_name=' + stackName;\n    window.location.href = url;\n}\n\nfunction refreshPage(answer, s) {\n    var url = g_form.getAction() + '&sysparm_stack_name=' + stackName;\n    window.location.href = url;\n}\n\n"},
{"cuid":"cld9flef600gppq24vitn3nr7","createdAt":"2023-01-24 05:20:04.674","updatedAt":"2023-01-24 05:20:09.292","userCuid":"cld9unimw000wucguenaahfdy","prompt":"\n// Prompt: Deletes current record after confirmation.\nvar ajaxHelper;\nvar objSysId;\nvar tblName;\nvar dlg;\nvar returnUrl;\nvar fromRelList;\nvar module;\nvar listQuery;\nvar stackName = null;\n\nfunction confirmAndDeleteFromForm() {   \n    objSysId = g_form.getUniqueValue();\n    tblName = g_form.getTableName();\n    fromRelList = g_form.getParameter('sysparm_from_related_list');\n    module = g_form.getParameter('sysparm_userpref_module');\n    listQuery = g_form.getParameter('sysparm_record_list');\n    stackName = g_form.getParameter('sysparm_nameofstack');\n\n    ajaxHelper = new GlideAjax('DeleteRecordAjax');\n    ajaxHelper.addParam('sysparm_name', 'getCascadeDeleteTables');\n    ajaxHelper.addParam('sysparm_obj_id', objSysId);\n    ajaxHelper.addParam('sysparm_table_name', tblName);\n    ajaxHelper.addParam('sysparm_nameofstack', stackName);\n    ajaxHelper.getXMLAnswer(getCascadeDelTablesDoneForm.bind(this), null, null); \n}\n\nfunction getCascadeDelTablesDoneForm(answer, s) {\n    \n    var ansrArray = answer.split(';');\n    returnUrl = ansrArray[0];\n    var objList = ansrArray[2];\n    dlg = new GlideDialogWindow('delete_confirm_form');\n    dlg.setTitle('Confirmation');\n    if(objList == null) {\n       dlg.setWidth(275);\n    } else {\n       dlg.setWidth(450);\n    }\n    dlg.setPreference('sysparm_obj_id', objSysId);\n    dlg.setPreference('sysparm_table_name', tblName);\n    dlg.setPreference('sysparm_delobj_list', objList);  \n    dlg.setPreference('sysparm_parent_form', this);\n    dlg.render();\n    \n}\n\nfunction deleteCompleted() {\n    dlg.destroy();\n    var w = getTopWindow();\n    cbField = w.document.getElementById('glide_dialog_form_target_' + tblName);\n    if(cbField != null) {\n        // this is a dialog form, make sure the completion callback is called\n        cbField.value = 'sysverb_delete:' + objSysId;\n        cbField.onchange();\n        \n       // dismiss the dialog form\n       var elem = window.parent.document.getElementById('body_FormDialog');\n       if (elem)\n           new GlideWindow().locate(elem).destroy();\n    } else {\n        // this is a regular form, use the return URL to back to the correct view, where possible\n        if (returnUrl != 'null') {\n            window.location.href = returnUrl;\n        } else {           \n            // this is just the default case, in case everything else blows up, should never happen!\n            window.location.href = window.location.protocol + '/' + window.location.host + '/' + tblName + '_list.do?sysparm_userpref_module=' + module + '&sysparm_query=' + listQuery + '&sysparm_cancelable=true';\n        }        \n    }\t   \n}\n// Prompt: change state from open to in progress\n","action":"complete","response":"function changeStateOpenToInProgress() {   \n    objSysId = g_form.getUniqueValue();\n    tblName = g_form.getTableName();\n    stackName = g_form.getParameter('sysparm_nameofstack');\n\n    ajaxHelper = new GlideAjax('ChangeStateAjax');\n    ajaxHelper.addParam('sysparm_name', 'getCascadeDeleteTables');\n    ajaxHelper.addParam('sysparm_obj_id', objSysId);\n    ajaxHelper.addParam('sysparm_table_name', tblName);\n    ajaxHelper.addParam('sysparm_nameofstack', stackName);\n    ajaxHelper.getXMLAnswer(getCascadeDelTablesDoneForm.bind(this), null, null); \n}\n\nfunction changeStateCompleted() {\n    dlg.destroy();\n    var w = getTopWindow();\n    cbField = w.document.getElementById('glide_dialog_form_target_' + tblName);\n    if(cbField != null) {\n        // this is a dialog form, make sure the completion callback is called\n        cbField.value = 'sysverb_delete:' + objSysId;\n        cbField.onchange();\n        \n       // dismiss the dialog form\n       var elem = window.parent.document.getElementById('body_FormDialog');\n       if (elem)\n           new GlideWindow().locate(elem).destroy();\n    } else {\n        // this is a regular form, use the return URL to back to the correct view, where possible\n        if (returnUrl != 'null') {\n            window.location.href = returnUrl;\n        } else {           \n            // this is just the default case, in case everything else blows up, should never happen!\n            window.location.href = window.location.protocol + '/' + window.location.host + '/' + tblName + '_list.do?sysparm_userpref_module=' + module + '&sysparm_query=' + listQuery + '"},
{"cuid":"cld9futb100gspq24bzaj7hwr","createdAt":"2023-01-24 05:27:23.87","updatedAt":"2023-01-24 05:27:25.873","userCuid":"cld9unimw000wucguenaahfdy","prompt":"\n\"\"\"\nExplain the above code step-by-step in simple english.","action":"explain","response":"\n\nThe above code creates a list of integers from 0 to 10 and assigns it to the variable \"a\". It then creates an empty list called \"b\".\n\nFor each integer in \"a\", the code checks if the integer is greater than 5. If it is, the integer is added to the list \"b\".\n\nFinally, the code prints out the contents of the list \"b\"."},
{"cuid":"cld9fye2800gvpq24bxndtj0x","createdAt":"2023-01-24 05:30:10.736","updatedAt":"2023-01-24 05:30:15.787","userCuid":"cld9unimw000wucguenaahfdy","prompt":"\n// Prompt: Deletes current record after confirmation.\nvar ajaxHelper;\nvar objSysId;\nvar tblName;\nvar dlg;\nvar returnUrl;\nvar fromRelList;\nvar module;\nvar listQuery;\nvar stackName = null;\n\nfunction confirmAndDeleteFromForm() {   \n    objSysId = g_form.getUniqueValue();\n    tblName = g_form.getTableName();\n    fromRelList = g_form.getParameter('sysparm_from_related_list');\n    module = g_form.getParameter('sysparm_userpref_module');\n    listQuery = g_form.getParameter('sysparm_record_list');\n    stackName = g_form.getParameter('sysparm_nameofstack');\n\n    ajaxHelper = new GlideAjax('DeleteRecordAjax');\n    ajaxHelper.addParam('sysparm_name', 'getCascadeDeleteTables');\n    ajaxHelper.addParam('sysparm_obj_id', objSysId);\n    ajaxHelper.addParam('sysparm_table_name', tblName);\n    ajaxHelper.addParam('sysparm_nameofstack', stackName);\n    ajaxHelper.getXMLAnswer(getCascadeDelTablesDoneForm.bind(this), null, null); \n}\n\nfunction getCascadeDelTablesDoneForm(answer, s) {\n    \n    var ansrArray = answer.split(';');\n    returnUrl = ansrArray[0];\n    var objList = ansrArray[2];\n    dlg = new GlideDialogWindow('delete_confirm_form');\n    dlg.setTitle('Confirmation');\n    if(objList == null) {\n       dlg.setWidth(275);\n    } else {\n       dlg.setWidth(450);\n    }\n    dlg.setPreference('sysparm_obj_id', objSysId);\n    dlg.setPreference('sysparm_table_name', tblName);\n    dlg.setPreference('sysparm_delobj_list', objList);  \n    dlg.setPreference('sysparm_parent_form', this);\n    dlg.render();\n    \n}\n\nfunction deleteCompleted() {\n    dlg.destroy();\n    var w = getTopWindow();\n    cbField = w.document.getElementById('glide_dialog_form_target_' + tblName);\n    if(cbField != null) {\n        // this is a dialog form, make sure the completion callback is called\n        cbField.value = 'sysverb_delete:' + objSysId;\n        cbField.onchange();\n        \n       // dismiss the dialog form\n       var elem = window.parent.document.getElementById('body_FormDialog');\n       if (elem)\n           new GlideWindow().locate(elem).destroy();\n    } else {\n        // this is a regular form, use the return URL to back to the correct view, where possible\n        if (returnUrl != 'null') {\n            window.location.href = returnUrl;\n        } else {           \n            // this is just the default case, in case everything else blows up, should never happen!\n            window.location.href = window.location.protocol + '/' + window.location.host + '/' + tblName + '_list.do?sysparm_userpref_module=' + module + '&sysparm_query=' + listQuery + '&sysparm_cancelable=true';\n        }        \n    }\t   \n}\n// Prompt: i want the task state to change to 'In Progress'\n","action":"complete","response":"function taskInProgress() {\n    var w = getTopWindow();\n    cbField = w.document.getElementById('glide_dialog_form_target');\n    if(cbField != null) {\n        // this is a dialog form\n        cbField.value = 'In Progress';\n        cbField.onchange();\n    } else {\n        // this is a regular form\n        window.location.href = window.location.protocol + '/' + window.location.host + '/' + tblName + '_list.do?sysparm_userpref_module=' + module + '&sysparm_query=' + listQuery + '&sysparm_cancelable=true';\n    }\n}\n\nfunction refreshParentWindow() {\n    var w = getTopWindow();\n    if(w.opener) {\n        w.opener.location.reload();\n    }\n}\n\nfunction refreshParentWindowFromList() {\n    var w = getTopWindow();\n    if(w.opener) {\n        if (w.opener.opener) {\n            w.opener.opener.location.reload();\n        } else {\n            w.opener.location.reload();\n        }\n    }\n}\n\nfunction refreshParentWindowFromRelatedList() {\n    var w = getTopWindow();\n    if(w.opener) {\n        w.opener.location.reload();\n    }\n    //if(w.opener)\n    //    w.opener.document.getElementById('sys_retrieve_refresh_related_list').onclick();\n}\n\nfunction closeParentWindow() {\n    var w = getTopWindow();\n    if(w.opener) {\n        w.opener.close();\n    }\n}\n\nfunction refreshParentForm() {\n    var w = getTopWindow();\n    cbField = w.document.getElementById('glide_dialog_form_target_' + g_form.getTableName());\n    if(cbField != null) {\n        // this is a dialog form\n        cbField."},
{"cuid":"cld9fz8ne00gxpq247hj57bno","createdAt":"2023-01-24 05:30:50.379","updatedAt":"2023-01-24 05:30:53.526","userCuid":"cld9unimw000wucguenaahfdy","prompt":"\n// Prompt: Deletes current record after confirmation.\nvar ajaxHelper;\nvar objSysId;\nvar tblName;\nvar dlg;\nvar returnUrl;\nvar fromRelList;\nvar module;\nvar listQuery;\nvar stackName = null;\n\nfunction confirmAndDeleteFromForm() {   \n    objSysId = g_form.getUniqueValue();\n    tblName = g_form.getTableName();\n    fromRelList = g_form.getParameter('sysparm_from_related_list');\n    module = g_form.getParameter('sysparm_userpref_module');\n    listQuery = g_form.getParameter('sysparm_record_list');\n    stackName = g_form.getParameter('sysparm_nameofstack');\n\n    ajaxHelper = new GlideAjax('DeleteRecordAjax');\n    ajaxHelper.addParam('sysparm_name', 'getCascadeDeleteTables');\n    ajaxHelper.addParam('sysparm_obj_id', objSysId);\n    ajaxHelper.addParam('sysparm_table_name', tblName);\n    ajaxHelper.addParam('sysparm_nameofstack', stackName);\n    ajaxHelper.getXMLAnswer(getCascadeDelTablesDoneForm.bind(this), null, null); \n}\n\nfunction getCascadeDelTablesDoneForm(answer, s) {\n    \n    var ansrArray = answer.split(';');\n    returnUrl = ansrArray[0];\n    var objList = ansrArray[2];\n    dlg = new GlideDialogWindow('delete_confirm_form');\n    dlg.setTitle('Confirmation');\n    if(objList == null) {\n       dlg.setWidth(275);\n    } else {\n       dlg.setWidth(450);\n    }\n    dlg.setPreference('sysparm_obj_id', objSysId);\n    dlg.setPreference('sysparm_table_name', tblName);\n    dlg.setPreference('sysparm_delobj_list', objList);  \n    dlg.setPreference('sysparm_parent_form', this);\n    dlg.render();\n    \n}\n\nfunction deleteCompleted() {\n    dlg.destroy();\n    var w = getTopWindow();\n    cbField = w.document.getElementById('glide_dialog_form_target_' + tblName);\n    if(cbField != null) {\n        // this is a dialog form, make sure the completion callback is called\n        cbField.value = 'sysverb_delete:' + objSysId;\n        cbField.onchange();\n        \n       // dismiss the dialog form\n       var elem = window.parent.document.getElementById('body_FormDialog');\n       if (elem)\n           new GlideWindow().locate(elem).destroy();\n    } else {\n        // this is a regular form, use the return URL to back to the correct view, where possible\n        if (returnUrl != 'null') {\n            window.location.href = returnUrl;\n        } else {           \n            // this is just the default case, in case everything else blows up, should never happen!\n            window.location.href = window.location.protocol + '/' + window.location.host + '/' + tblName + '_list.do?sysparm_userpref_module=' + module + '&sysparm_query=' + listQuery + '&sysparm_cancelable=true';\n        }        \n    }\t   \n}\n// Prompt: i want the current task status to change to 'In Progress'\n","action":"complete","response":"function changeTaskStatus() {\n    ajaxHelper = new GlideAjax('UpdateTaskStatusAjax');\n    ajaxHelper.addParam('sysparm_name', 'getCascadeDeleteTables');\n    ajaxHelper.addParam('sysparm_obj_id', objSysId);\n    ajaxHelper.addParam('sysparm_table_name', tblName);\n    ajaxHelper.getXMLAnswer(getCascadeDelTablesDoneForm.bind(this), null, null); \n}\n\nfunction getCascadeDelTablesDoneForm(answer, s) {\n    \n    var ansrArray = answer.split(';');\n    returnUrl = ansrArray[0];\n    var objList = ansrArray[2]; //Should probably do the split here\n    dlg = new GlideDialogWindow('change_task_status');\n    dlg.setTitle('Confirmation');\n    dlg.setWidth(450);\n    dlg.setPreference('sysparm_obj_id', objSysId);\n    dlg.setPreference('sysparm_table_name', tblName);\n    dlg.setPreference('sysparm_delobj_list', objList);  \n    dlg.setPreference('sysparm_parent_form', this);\n    dlg.render();\n    \n}"},
{"cuid":"cld9npgry00impq24582si318","createdAt":"2023-01-24 09:07:11.279","updatedAt":"2023-01-24 09:07:13.938","userCuid":"cld9unimw000wucguenaahfdy","prompt":"function moveToImplement() {\n\tg_form.setValue(\"state\", \"-1\");\n\tgsftSubmit(null, g_form.getFormElement(), \"state_model_move_to_implement\");\n}\n\nif (typeof window == 'undefined')\n   setRedirect();\n\nfunction setRedirect() {\n    current.update();\n    action.setRedirectURL(current);\n}\n\"\"\"\nExplain the above code step-by-step in simple english.","action":"explain","response":"\n\n\n\nThe code above is used to move a record from one state to another in ServiceNow. The code first sets the value of the 'state' field to -1, which indicates that the record is in an implementation state. Then, the code calls the 'gsftSubmit' function to submit the form. Finally, the code sets the redirect URL to the current record."},
{"cuid":"cld9fzw4s00h0pq24zf0wdarn","createdAt":"2023-01-24 05:31:20.812","updatedAt":"2023-01-24 05:31:23.197","userCuid":"cld9unimw000wucguenaahfdy","prompt":"\n// Prompt: Deletes current record after confirmation.\nvar ajaxHelper;\nvar objSysId;\nvar tblName;\nvar dlg;\nvar returnUrl;\nvar fromRelList;\nvar module;\nvar listQuery;\nvar stackName = null;\n\nfunction confirmAndDeleteFromForm() {   \n    objSysId = g_form.getUniqueValue();\n    tblName = g_form.getTableName();\n    fromRelList = g_form.getParameter('sysparm_from_related_list');\n    module = g_form.getParameter('sysparm_userpref_module');\n    listQuery = g_form.getParameter('sysparm_record_list');\n    stackName = g_form.getParameter('sysparm_nameofstack');\n\n    ajaxHelper = new GlideAjax('DeleteRecordAjax');\n    ajaxHelper.addParam('sysparm_name', 'getCascadeDeleteTables');\n    ajaxHelper.addParam('sysparm_obj_id', objSysId);\n    ajaxHelper.addParam('sysparm_table_name', tblName);\n    ajaxHelper.addParam('sysparm_nameofstack', stackName);\n    ajaxHelper.getXMLAnswer(getCascadeDelTablesDoneForm.bind(this), null, null); \n}\n\nfunction getCascadeDelTablesDoneForm(answer, s) {\n    \n    var ansrArray = answer.split(';');\n    returnUrl = ansrArray[0];\n    var objList = ansrArray[2];\n    dlg = new GlideDialogWindow('delete_confirm_form');\n    dlg.setTitle('Confirmation');\n    if(objList == null) {\n       dlg.setWidth(275);\n    } else {\n       dlg.setWidth(450);\n    }\n    dlg.setPreference('sysparm_obj_id', objSysId);\n    dlg.setPreference('sysparm_table_name', tblName);\n    dlg.setPreference('sysparm_delobj_list', objList);  \n    dlg.setPreference('sysparm_parent_form', this);\n    dlg.render();\n    \n}\n\nfunction deleteCompleted() {\n    dlg.destroy();\n    var w = getTopWindow();\n    cbField = w.document.getElementById('glide_dialog_form_target_' + tblName);\n    if(cbField != null) {\n        // this is a dialog form, make sure the completion callback is called\n        cbField.value = 'sysverb_delete:' + objSysId;\n        cbField.onchange();\n        \n       // dismiss the dialog form\n       var elem = window.parent.document.getElementById('body_FormDialog');\n       if (elem)\n           new GlideWindow().locate(elem).destroy();\n    } else {\n        // this is a regular form, use the return URL to back to the correct view, where possible\n        if (returnUrl != 'null') {\n            window.location.href = returnUrl;\n        } else {           \n            // this is just the default case, in case everything else blows up, should never happen!\n            window.location.href = window.location.protocol + '/' + window.location.host + '/' + tblName + '_list.do?sysparm_userpref_module=' + module + '&sysparm_query=' + listQuery + '&sysparm_cancelable=true';\n        }        \n    }\t   \n}\n// Prompt: set current state to in progress\n","action":"complete","response":"function setCurrentState(state, label) {\n    var newState = new GlideRecord('sc_req_item');\n    newState.addQuery('number', g_form.getUniqueValue());\n    newState.query();\n    if (newState.next()) {\n        newState.current_state = state;\n        newState.state_label = label;\n        newState.update();\n    }\n}\n\nfunction setCurrentRequestStage(state, label) {\n    var newState = new GlideRecord('sc_req_item');\n    newState.addQuery('number', g_form.getUniqueValue());\n    newState.query();\n    if (newState.next()) {\n        newState.request_stage = state;\n        newState.request_stage_label = label;\n        newState.update();\n    }\n}\n\n"},
{"cuid":"cld9g19y100h2pq2461vny7g4","createdAt":"2023-01-24 05:32:25.37","updatedAt":"2023-01-24 05:32:27.486","userCuid":"cld9unimw000wucguenaahfdy","prompt":"\n// Prompt: Deletes current record after confirmation.\nvar ajaxHelper;\nvar objSysId;\nvar tblName;\nvar dlg;\nvar returnUrl;\nvar fromRelList;\nvar module;\nvar listQuery;\nvar stackName = null;\n\nfunction confirmAndDeleteFromForm() {   \n    objSysId = g_form.getUniqueValue();\n    tblName = g_form.getTableName();\n    fromRelList = g_form.getParameter('sysparm_from_related_list');\n    module = g_form.getParameter('sysparm_userpref_module');\n    listQuery = g_form.getParameter('sysparm_record_list');\n    stackName = g_form.getParameter('sysparm_nameofstack');\n\n    ajaxHelper = new GlideAjax('DeleteRecordAjax');\n    ajaxHelper.addParam('sysparm_name', 'getCascadeDeleteTables');\n    ajaxHelper.addParam('sysparm_obj_id', objSysId);\n    ajaxHelper.addParam('sysparm_table_name', tblName);\n    ajaxHelper.addParam('sysparm_nameofstack', stackName);\n    ajaxHelper.getXMLAnswer(getCascadeDelTablesDoneForm.bind(this), null, null); \n}\n\nfunction getCascadeDelTablesDoneForm(answer, s) {\n    \n    var ansrArray = answer.split(';');\n    returnUrl = ansrArray[0];\n    var objList = ansrArray[2];\n    dlg = new GlideDialogWindow('delete_confirm_form');\n    dlg.setTitle('Confirmation');\n    if(objList == null) {\n       dlg.setWidth(275);\n    } else {\n       dlg.setWidth(450);\n    }\n    dlg.setPreference('sysparm_obj_id', objSysId);\n    dlg.setPreference('sysparm_table_name', tblName);\n    dlg.setPreference('sysparm_delobj_list', objList);  \n    dlg.setPreference('sysparm_parent_form', this);\n    dlg.render();\n    \n}\n\nfunction deleteCompleted() {\n    dlg.destroy();\n    var w = getTopWindow();\n    cbField = w.document.getElementById('glide_dialog_form_target_' + tblName);\n    if(cbField != null) {\n        // this is a dialog form, make sure the completion callback is called\n        cbField.value = 'sysverb_delete:' + objSysId;\n        cbField.onchange();\n        \n       // dismiss the dialog form\n       var elem = window.parent.document.getElementById('body_FormDialog');\n       if (elem)\n           new GlideWindow().locate(elem).destroy();\n    } else {\n        // this is a regular form, use the return URL to back to the correct view, where possible\n        if (returnUrl != 'null') {\n            window.location.href = returnUrl;\n        } else {           \n            // this is just the default case, in case everything else blows up, should never happen!\n            window.location.href = window.location.protocol + '/' + window.location.host + '/' + tblName + '_list.do?sysparm_userpref_module=' + module + '&sysparm_query=' + listQuery + '&sysparm_cancelable=true';\n        }        \n    }\t   \n}\n// Prompt: set current incident task state to in progress\n","action":"complete","response":"function setInProgress() {\n\n    var state = g_form.getValue('state');\n    if(state != null && state == \"1\") {\n       return;\n    }\n    dlg = new GlideDialogWindow('in_progress_form');\n    dlg.setPreference('sysparm_obj_id', g_form.getUniqueValue());\n    dlg.render();\n}\n\nfunction setInProgressCompleted(answer) {\n    dlg.destroy();\n    g_form.reload();\n}\n\n"},
{"cuid":"cld9gamwj00h6pq24tsre4yqh","createdAt":"2023-01-24 05:39:42.068","updatedAt":"2023-01-24 05:39:43.419","userCuid":"cld9unimw000wucguenaahfdy","prompt":"g_form.setValue(\"state\", 2);\n\"\"\"\nExplain the above code step-by-step in simple english.","action":"explain","response":"\n\nThe code above sets the value of the \"state\" field in a form to 2."},
{"cuid":"cld9gei3b00hapq24hwpoj7wo","createdAt":"2023-01-24 05:42:42.456","updatedAt":"2023-01-24 05:42:43.63","userCuid":"cld9unimw000wucguenaahfdy","prompt":"g_form.setValue(\"state\", 'Work In Progress');\n\"\"\"\nExplain the above code step-by-step in simple english.","action":"explain","response":"\n\nThe code above sets the value of the \"state\" field in a GlideForm object to \"Work In Progress\"."},
{"cuid":"cld9kp42v00hcpq24rq00gy9t","createdAt":"2023-01-24 07:42:55.976","updatedAt":"2023-01-24 07:43:01.11","userCuid":"cld9unimw000wucguenaahfdy","prompt":"\n// Prompt: Deletes current record after confirmation.\nvar ajaxHelper;\nvar objSysId;\nvar tblName;\nvar dlg;\nvar returnUrl;\nvar fromRelList;\nvar module;\nvar listQuery;\nvar stackName = null;\n\nfunction confirmAndDeleteFromForm() {   \n    objSysId = g_form.getUniqueValue();\n    tblName = g_form.getTableName();\n    fromRelList = g_form.getParameter('sysparm_from_related_list');\n    module = g_form.getParameter('sysparm_userpref_module');\n    listQuery = g_form.getParameter('sysparm_record_list');\n    stackName = g_form.getParameter('sysparm_nameofstack');\n\n    ajaxHelper = new GlideAjax('DeleteRecordAjax');\n    ajaxHelper.addParam('sysparm_name', 'getCascadeDeleteTables');\n    ajaxHelper.addParam('sysparm_obj_id', objSysId);\n    ajaxHelper.addParam('sysparm_table_name', tblName);\n    ajaxHelper.addParam('sysparm_nameofstack', stackName);\n    ajaxHelper.getXMLAnswer(getCascadeDelTablesDoneForm.bind(this), null, null); \n}\n\nfunction getCascadeDelTablesDoneForm(answer, s) {\n    \n    var ansrArray = answer.split(';');\n    returnUrl = ansrArray[0];\n    var objList = ansrArray[2];\n    dlg = new GlideDialogWindow('delete_confirm_form');\n    dlg.setTitle('Confirmation');\n    if(objList == null) {\n       dlg.setWidth(275);\n    } else {\n       dlg.setWidth(450);\n    }\n    dlg.setPreference('sysparm_obj_id', objSysId);\n    dlg.setPreference('sysparm_table_name', tblName);\n    dlg.setPreference('sysparm_delobj_list', objList);  \n    dlg.setPreference('sysparm_parent_form', this);\n    dlg.render();\n    \n}\n\nfunction deleteCompleted() {\n    dlg.destroy();\n    var w = getTopWindow();\n    cbField = w.document.getElementById('glide_dialog_form_target_' + tblName);\n    if(cbField != null) {\n        // this is a dialog form, make sure the completion callback is called\n        cbField.value = 'sysverb_delete:' + objSysId;\n        cbField.onchange();\n        \n       // dismiss the dialog form\n       var elem = window.parent.document.getElementById('body_FormDialog');\n       if (elem)\n           new GlideWindow().locate(elem).destroy();\n    } else {\n        // this is a regular form, use the return URL to back to the correct view, where possible\n        if (returnUrl != 'null') {\n            window.location.href = returnUrl;\n        } else {           \n            // this is just the default case, in case everything else blows up, should never happen!\n            window.location.href = window.location.protocol + '/' + window.location.host + '/' + tblName + '_list.do?sysparm_userpref_module=' + module + '&sysparm_query=' + listQuery + '&sysparm_cancelable=true';\n        }        \n    }\t   \n}\n// Prompt: i want the current incident task to change the state from Open to Work In Progress\n","action":"complete","response":"var ajaxHelper;\nvar objSysId;\nvar state;\nvar tblName;\nvar dlg;\nvar returnUrl;\nvar fromRelList;\nvar module;\nvar listQuery;\nvar stackName = null;\n\nfunction confirmAndChangeState() {   \n    objSysId = g_form.getUniqueValue();\n    tblName = g_form.getTableName();\n    state = g_form.getValue('state');\n    fromRelList = g_form.getParameter('sysparm_from_related_list');\n    module = g_form.getParameter('sysparm_userpref_module');\n    listQuery = g_form.getParameter('sysparm_record_list');\n    stackName = g_form.getParameter('sysparm_nameofstack');\n\n    ajaxHelper = new GlideAjax('ChangeStateAjax');\n    ajaxHelper.addParam('sysparm_name', 'getCascadeDeleteTables');\n    ajaxHelper.addParam('sysparm_obj_id', objSysId);\n    ajaxHelper.addParam('sysparm_table_name', tblName);\n    ajaxHelper.getXMLAnswer(getCascadeDelTablesDoneForm.bind(this), null, null); \n}\n\nfunction getCascadeDelTablesDoneForm(answer, s) {\n    \n    var ansrArray = answer.split(';');\n    returnUrl = ansrArray[0];\n    var objList = ansrArray[2];\n    dlg = new GlideDialogWindow('change_state_confirm_form');\n    dlg.setTitle('Confirmation');\n    if(objList == null) {\n       dlg.setWidth(275);\n    } else {\n       dlg.setWidth(450);\n    }\n    dlg.setPreference('sysparm_obj_id', objSysId);\n    dlg.setPreference('sysparm_table_name', tblName);\n    dlg.setPreference('sysparm_delobj_"},
{"cuid":"cld9kq66v00hepq24b4q0vrh2","createdAt":"2023-01-24 07:43:45.368","updatedAt":"2023-01-24 07:43:48.459","userCuid":"cld9unimw000wucguenaahfdy","prompt":"\n// Prompt: Deletes current record after confirmation.\nvar ajaxHelper;\nvar objSysId;\nvar tblName;\nvar dlg;\nvar returnUrl;\nvar fromRelList;\nvar module;\nvar listQuery;\nvar stackName = null;\n\nfunction confirmAndDeleteFromForm() {   \n    objSysId = g_form.getUniqueValue();\n    tblName = g_form.getTableName();\n    fromRelList = g_form.getParameter('sysparm_from_related_list');\n    module = g_form.getParameter('sysparm_userpref_module');\n    listQuery = g_form.getParameter('sysparm_record_list');\n    stackName = g_form.getParameter('sysparm_nameofstack');\n\n    ajaxHelper = new GlideAjax('DeleteRecordAjax');\n    ajaxHelper.addParam('sysparm_name', 'getCascadeDeleteTables');\n    ajaxHelper.addParam('sysparm_obj_id', objSysId);\n    ajaxHelper.addParam('sysparm_table_name', tblName);\n    ajaxHelper.addParam('sysparm_nameofstack', stackName);\n    ajaxHelper.getXMLAnswer(getCascadeDelTablesDoneForm.bind(this), null, null); \n}\n\nfunction getCascadeDelTablesDoneForm(answer, s) {\n    \n    var ansrArray = answer.split(';');\n    returnUrl = ansrArray[0];\n    var objList = ansrArray[2];\n    dlg = new GlideDialogWindow('delete_confirm_form');\n    dlg.setTitle('Confirmation');\n    if(objList == null) {\n       dlg.setWidth(275);\n    } else {\n       dlg.setWidth(450);\n    }\n    dlg.setPreference('sysparm_obj_id', objSysId);\n    dlg.setPreference('sysparm_table_name', tblName);\n    dlg.setPreference('sysparm_delobj_list', objList);  \n    dlg.setPreference('sysparm_parent_form', this);\n    dlg.render();\n    \n}\n\nfunction deleteCompleted() {\n    dlg.destroy();\n    var w = getTopWindow();\n    cbField = w.document.getElementById('glide_dialog_form_target_' + tblName);\n    if(cbField != null) {\n        // this is a dialog form, make sure the completion callback is called\n        cbField.value = 'sysverb_delete:' + objSysId;\n        cbField.onchange();\n        \n       // dismiss the dialog form\n       var elem = window.parent.document.getElementById('body_FormDialog');\n       if (elem)\n           new GlideWindow().locate(elem).destroy();\n    } else {\n        // this is a regular form, use the return URL to back to the correct view, where possible\n        if (returnUrl != 'null') {\n            window.location.href = returnUrl;\n        } else {           \n            // this is just the default case, in case everything else blows up, should never happen!\n            window.location.href = window.location.protocol + '/' + window.location.host + '/' + tblName + '_list.do?sysparm_userpref_module=' + module + '&sysparm_query=' + listQuery + '&sysparm_cancelable=true';\n        }        \n    }\t   \n}\n// Prompt: change the current task state from open to work in progress\n","action":"complete","response":"function changeTaskStateToInProgress() {\n    if(g_form.isDirty()) {\n        // prompt for user confirmation for unsaved changes before proceeding\n        dlg = new GlideDialogWindow('confirm_form');\n        dlg.setTitle('Confirmation');\n        dlg.setWidth(450);\n        dlg.setPreference('sysparm_type', 'task');\n        dlg.setPreference('sysparm_table_name', 'task');\n        dlg.setPreference('sysparm_action', 'task_change_work_in_progress');\n        dlg.setPreference('sysparm_sys_id', g_form.getUniqueValue());\n        dlg.setPreference('sysparm_state', 'In Progress');\n        dlg.setPreference('sysparm_action_title', 'Change task state to \"In Progress\"');\n        dlg.setPreference('sysparm_return_url', escape(document.location));\n        dlg.setPreference('sysparm_return_method', 'changeTaskStateToInProgress');\n        dlg.setPreference('sysparm_hide_return_button', 'true');\n        dlg.render();\n    } else {\n        g_form.setState('In Progress');\n    }\n}\n\n"},
{"cuid":"cld9nqct300iopq24cx7xtg3w","createdAt":"2023-01-24 09:07:52.791","updatedAt":"2023-01-24 09:07:55.067","userCuid":"cld9unimw000wucguenaahfdy","prompt":"function moveToImplement() {\n\tg_form.setValue(\"state\",\"2\");\n\tgsftSubmit(null, g_form.getFormElement(), \"start_work_dispatch\");\n}\n\nif (typeof window == 'undefined')\n   setRedirect();\n\nfunction setRedirect() {\n    current.update();\n    action.setRedirectURL(current);\n}\n\"\"\"\nExplain the above code step-by-step in simple english.","action":"explain","response":"\n\nThe above code is written in JavaScript and defines a function called \"moveToImplement\". This function sets the value of the \"state\" field to \"2\", and then submits the form. The form is then redirected to the current page."},
{"cuid":"cld9rjx0d00jkpq24igvr38ku","createdAt":"2023-01-24 10:54:50.846","updatedAt":"2023-01-24 10:54:52.224","userCuid":"cld9unimw000wucguenaahfdy","prompt":"Update this code based following this prompt, \"i want the record to have a new number\": The above code inserts a new object into the 'current' object, and then updates the object with some code. Finally, it redirects the action to the 'current' object.\n// Generated by scribe.monster ```","action":"edit","response":"\n\nThe above code inserts a new object into the 'current' object, and then updates the object with a new number. Finally, it redirects the action to the 'current' object."},
{"cuid":"cld9ktcnt00hgpq24ciexe01a","createdAt":"2023-01-24 07:46:13.721","updatedAt":"2023-01-24 07:46:15.17","userCuid":"cld9unimw000wucguenaahfdy","prompt":"\n// Prompt: Deletes current record after confirmation.\nvar ajaxHelper;\nvar objSysId;\nvar tblName;\nvar dlg;\nvar returnUrl;\nvar fromRelList;\nvar module;\nvar listQuery;\nvar stackName = null;\n\nfunction confirmAndDeleteFromForm() {   \n    objSysId = g_form.getUniqueValue();\n    tblName = g_form.getTableName();\n    fromRelList = g_form.getParameter('sysparm_from_related_list');\n    module = g_form.getParameter('sysparm_userpref_module');\n    listQuery = g_form.getParameter('sysparm_record_list');\n    stackName = g_form.getParameter('sysparm_nameofstack');\n\n    ajaxHelper = new GlideAjax('DeleteRecordAjax');\n    ajaxHelper.addParam('sysparm_name', 'getCascadeDeleteTables');\n    ajaxHelper.addParam('sysparm_obj_id', objSysId);\n    ajaxHelper.addParam('sysparm_table_name', tblName);\n    ajaxHelper.addParam('sysparm_nameofstack', stackName);\n    ajaxHelper.getXMLAnswer(getCascadeDelTablesDoneForm.bind(this), null, null); \n}\n\nfunction getCascadeDelTablesDoneForm(answer, s) {\n    \n    var ansrArray = answer.split(';');\n    returnUrl = ansrArray[0];\n    var objList = ansrArray[2];\n    dlg = new GlideDialogWindow('delete_confirm_form');\n    dlg.setTitle('Confirmation');\n    if(objList == null) {\n       dlg.setWidth(275);\n    } else {\n       dlg.setWidth(450);\n    }\n    dlg.setPreference('sysparm_obj_id', objSysId);\n    dlg.setPreference('sysparm_table_name', tblName);\n    dlg.setPreference('sysparm_delobj_list', objList);  \n    dlg.setPreference('sysparm_parent_form', this);\n    dlg.render();\n    \n}\n\nfunction deleteCompleted() {\n    dlg.destroy();\n    var w = getTopWindow();\n    cbField = w.document.getElementById('glide_dialog_form_target_' + tblName);\n    if(cbField != null) {\n        // this is a dialog form, make sure the completion callback is called\n        cbField.value = 'sysverb_delete:' + objSysId;\n        cbField.onchange();\n        \n       // dismiss the dialog form\n       var elem = window.parent.document.getElementById('body_FormDialog');\n       if (elem)\n           new GlideWindow().locate(elem).destroy();\n    } else {\n        // this is a regular form, use the return URL to back to the correct view, where possible\n        if (returnUrl != 'null') {\n            window.location.href = returnUrl;\n        } else {           \n            // this is just the default case, in case everything else blows up, should never happen!\n            window.location.href = window.location.protocol + '/' + window.location.host + '/' + tblName + '_list.do?sysparm_userpref_module=' + module + '&sysparm_query=' + listQuery + '&sysparm_cancelable=true';\n        }        \n    }\t   \n}\n// Prompt: set status to work In progress\n","action":"complete","response":"function setWorkInProgress() {\n    var command = new Commands();\n    command.addCommand('work_in_progress', true, true);\n    command.addParameter('sysparm_stack', stackName);\n    command.submit();\n}\n\n"},
{"cuid":"cld9kucah00hkpq24agctl0lb","createdAt":"2023-01-24 07:46:59.897","updatedAt":"2023-01-24 07:47:01.517","userCuid":"cld9unimw000wucguenaahfdy","prompt":"\n// Prompt: Deletes current record after confirmation.\nvar ajaxHelper;\nvar objSysId;\nvar tblName;\nvar dlg;\nvar returnUrl;\nvar fromRelList;\nvar module;\nvar listQuery;\nvar stackName = null;\n\nfunction confirmAndDeleteFromForm() {   \n    objSysId = g_form.getUniqueValue();\n    tblName = g_form.getTableName();\n    fromRelList = g_form.getParameter('sysparm_from_related_list');\n    module = g_form.getParameter('sysparm_userpref_module');\n    listQuery = g_form.getParameter('sysparm_record_list');\n    stackName = g_form.getParameter('sysparm_nameofstack');\n\n    ajaxHelper = new GlideAjax('DeleteRecordAjax');\n    ajaxHelper.addParam('sysparm_name', 'getCascadeDeleteTables');\n    ajaxHelper.addParam('sysparm_obj_id', objSysId);\n    ajaxHelper.addParam('sysparm_table_name', tblName);\n    ajaxHelper.addParam('sysparm_nameofstack', stackName);\n    ajaxHelper.getXMLAnswer(getCascadeDelTablesDoneForm.bind(this), null, null); \n}\n\nfunction getCascadeDelTablesDoneForm(answer, s) {\n    \n    var ansrArray = answer.split(';');\n    returnUrl = ansrArray[0];\n    var objList = ansrArray[2];\n    dlg = new GlideDialogWindow('delete_confirm_form');\n    dlg.setTitle('Confirmation');\n    if(objList == null) {\n       dlg.setWidth(275);\n    } else {\n       dlg.setWidth(450);\n    }\n    dlg.setPreference('sysparm_obj_id', objSysId);\n    dlg.setPreference('sysparm_table_name', tblName);\n    dlg.setPreference('sysparm_delobj_list', objList);  \n    dlg.setPreference('sysparm_parent_form', this);\n    dlg.render();\n    \n}\n\nfunction deleteCompleted() {\n    dlg.destroy();\n    var w = getTopWindow();\n    cbField = w.document.getElementById('glide_dialog_form_target_' + tblName);\n    if(cbField != null) {\n        // this is a dialog form, make sure the completion callback is called\n        cbField.value = 'sysverb_delete:' + objSysId;\n        cbField.onchange();\n        \n       // dismiss the dialog form\n       var elem = window.parent.document.getElementById('body_FormDialog');\n       if (elem)\n           new GlideWindow().locate(elem).destroy();\n    } else {\n        // this is a regular form, use the return URL to back to the correct view, where possible\n        if (returnUrl != 'null') {\n            window.location.href = returnUrl;\n        } else {           \n            // this is just the default case, in case everything else blows up, should never happen!\n            window.location.href = window.location.protocol + '/' + window.location.host + '/' + tblName + '_list.do?sysparm_userpref_module=' + module + '&sysparm_query=' + listQuery + '&sysparm_cancelable=true';\n        }        \n    }\t   \n}\n// Prompt: set current task state to \"Work In Progress\"\n","action":"complete","response":"function setStateWIP() {\n\n    var updater = new GlideRecord('sys_update');\n    updater.addQuery('sys_id', g_form.getUniqueValue());\n    updater.query();\n    if (updater.next()) {\n        var gr = new GlideRecord(updater.table_name);\n        if (gr.get(updater.table_name, updater.sys_id)) {\n            if (gr.setState('Work In Progress') > 0) {\n                g_form.refresh();\n            }\n        }\n    }\n}\n\n"},
{"cuid":"cld9kunrx00hnpq24yur4jc2j","createdAt":"2023-01-24 07:47:14.782","updatedAt":"2023-01-24 07:47:16.376","userCuid":"cld9unimw000wucguenaahfdy","prompt":"function setStateWIP() {\n\n    var updater = new GlideRecord('sys_update');\n    updater.addQuery('sys_id', g_form.getUniqueValue());\n    updater.query();\n    if (updater.next()) {\n        var gr = new GlideRecord(updater.table_name);\n        if (gr.get(updater.table_name, updater.sys_id)) {\n            if (gr.setState('Work In Progress') > 0) {\n                g_form.refresh();\n            }\n        }\n    }\n}\n\n\n// Generated by scribe.monster\n\"\"\"\nExplain the above code step-by-step in simple english.","action":"explain","response":"\n\nThe above code creates a new GlideRecord object and queries the sys_update table. It then loops through the updates and sets the state to Work In Progress for each one. Finally, it refreshes the form."},
{"cuid":"cld9l0e8h00hrpq24265z7wol","createdAt":"2023-01-24 07:51:42.354","updatedAt":"2023-01-24 07:51:47.49","userCuid":"cld9unimw000wucguenaahfdy","prompt":"\n// Prompt: Deletes current record after confirmation.\nvar ajaxHelper;\nvar objSysId;\nvar tblName;\nvar dlg;\nvar returnUrl;\nvar fromRelList;\nvar module;\nvar listQuery;\nvar stackName = null;\n\nfunction confirmAndDeleteFromForm() {   \n    objSysId = g_form.getUniqueValue();\n    tblName = g_form.getTableName();\n    fromRelList = g_form.getParameter('sysparm_from_related_list');\n    module = g_form.getParameter('sysparm_userpref_module');\n    listQuery = g_form.getParameter('sysparm_record_list');\n    stackName = g_form.getParameter('sysparm_nameofstack');\n\n    ajaxHelper = new GlideAjax('DeleteRecordAjax');\n    ajaxHelper.addParam('sysparm_name', 'getCascadeDeleteTables');\n    ajaxHelper.addParam('sysparm_obj_id', objSysId);\n    ajaxHelper.addParam('sysparm_table_name', tblName);\n    ajaxHelper.addParam('sysparm_nameofstack', stackName);\n    ajaxHelper.getXMLAnswer(getCascadeDelTablesDoneForm.bind(this), null, null); \n}\n\nfunction getCascadeDelTablesDoneForm(answer, s) {\n    \n    var ansrArray = answer.split(';');\n    returnUrl = ansrArray[0];\n    var objList = ansrArray[2];\n    dlg = new GlideDialogWindow('delete_confirm_form');\n    dlg.setTitle('Confirmation');\n    if(objList == null) {\n       dlg.setWidth(275);\n    } else {\n       dlg.setWidth(450);\n    }\n    dlg.setPreference('sysparm_obj_id', objSysId);\n    dlg.setPreference('sysparm_table_name', tblName);\n    dlg.setPreference('sysparm_delobj_list', objList);  \n    dlg.setPreference('sysparm_parent_form', this);\n    dlg.render();\n    \n}\n\nfunction deleteCompleted() {\n    dlg.destroy();\n    var w = getTopWindow();\n    cbField = w.document.getElementById('glide_dialog_form_target_' + tblName);\n    if(cbField != null) {\n        // this is a dialog form, make sure the completion callback is called\n        cbField.value = 'sysverb_delete:' + objSysId;\n        cbField.onchange();\n        \n       // dismiss the dialog form\n       var elem = window.parent.document.getElementById('body_FormDialog');\n       if (elem)\n           new GlideWindow().locate(elem).destroy();\n    } else {\n        // this is a regular form, use the return URL to back to the correct view, where possible\n        if (returnUrl != 'null') {\n            window.location.href = returnUrl;\n        } else {           \n            // this is just the default case, in case everything else blows up, should never happen!\n            window.location.href = window.location.protocol + '/' + window.location.host + '/' + tblName + '_list.do?sysparm_userpref_module=' + module + '&sysparm_query=' + listQuery + '&sysparm_cancelable=true';\n        }        \n    }\t   \n}\n// Prompt: change current record 'state\" from \"Open\" to \"work In Progress\"\n","action":"complete","response":"\nfunction changeState() {\n    var status = g_form.getValue('state');\n    if (status == 'Open') {\n        g_form.setValue('state','Work In Progress');\n    } else {\n        g_form.setValue('state','Open');\n    }\n    g_form.reload();\n}\n\nfunction clickReloadFields(fieldName)  {\n    var field = g_form.getField(fieldName);\n    if (!field)\n        return;\n    var htmlObj = field.getValueElement();\n    if (htmlObj) {\n        if (field.isDisabled() || field.isReadOnly())\n            return;\n        var oldValue = field.getValue();\n        var newValue = ' ';\n        if (field.getDisplayType() == 'checkbox') {\n            newValue = (oldValue == g_form.getValue('system.read_only') ? g_form.getValue('system.read_only') : ' ');\n        } else if (field.getDisplayType() == 'label' || field.getDisplayType() == 'text' || field.getDisplayType() == 'textarea') {\n            newValue = (oldValue == g_form.getValue('system.read_only') ? g_form.getValue('system.read_only') : '');\n        }\n        field.setValue(newValue);\n        field.setValue(oldValue);\n        field.setValue(newValue);\n    }\n}\n\nfunction clickAllFields(fieldName)  {\n    var field = g_form.getField(fieldName);\n    if (!field)\n        return;\n    var htmlObj = field.getValueElement();\n    if (htmlObj) {\n        if (field.isDisabled() || field.isReadOnly())\n            return;\n        var oldValue = field.getValue();\n        var newValue = ' ';\n        if (field.getDisplayType() == 'checkbox') {\n            newValue = (oldValue == g_form.getValue('system.read_only') ? g_form.getValue('system.read_"},
{"cuid":"cld9ld4ck00htpq24crvdipwm","createdAt":"2023-01-24 08:01:36.069","updatedAt":"2023-01-24 08:01:38.3","userCuid":"cld9unimw000wucguenaahfdy","prompt":"\n// Prompt: Deletes current record after confirmation.\nvar ajaxHelper;\nvar objSysId;\nvar tblName;\nvar dlg;\nvar returnUrl;\nvar fromRelList;\nvar module;\nvar listQuery;\nvar stackName = null;\n\nfunction confirmAndDeleteFromForm() {   \n    objSysId = g_form.getUniqueValue();\n    tblName = g_form.getTableName();\n    fromRelList = g_form.getParameter('sysparm_from_related_list');\n    module = g_form.getParameter('sysparm_userpref_module');\n    listQuery = g_form.getParameter('sysparm_record_list');\n    stackName = g_form.getParameter('sysparm_nameofstack');\n\n    ajaxHelper = new GlideAjax('DeleteRecordAjax');\n    ajaxHelper.addParam('sysparm_name', 'getCascadeDeleteTables');\n    ajaxHelper.addParam('sysparm_obj_id', objSysId);\n    ajaxHelper.addParam('sysparm_table_name', tblName);\n    ajaxHelper.addParam('sysparm_nameofstack', stackName);\n    ajaxHelper.getXMLAnswer(getCascadeDelTablesDoneForm.bind(this), null, null); \n}\n\nfunction getCascadeDelTablesDoneForm(answer, s) {\n    \n    var ansrArray = answer.split(';');\n    returnUrl = ansrArray[0];\n    var objList = ansrArray[2];\n    dlg = new GlideDialogWindow('delete_confirm_form');\n    dlg.setTitle('Confirmation');\n    if(objList == null) {\n       dlg.setWidth(275);\n    } else {\n       dlg.setWidth(450);\n    }\n    dlg.setPreference('sysparm_obj_id', objSysId);\n    dlg.setPreference('sysparm_table_name', tblName);\n    dlg.setPreference('sysparm_delobj_list', objList);  \n    dlg.setPreference('sysparm_parent_form', this);\n    dlg.render();\n    \n}\n\nfunction deleteCompleted() {\n    dlg.destroy();\n    var w = getTopWindow();\n    cbField = w.document.getElementById('glide_dialog_form_target_' + tblName);\n    if(cbField != null) {\n        // this is a dialog form, make sure the completion callback is called\n        cbField.value = 'sysverb_delete:' + objSysId;\n        cbField.onchange();\n        \n       // dismiss the dialog form\n       var elem = window.parent.document.getElementById('body_FormDialog');\n       if (elem)\n           new GlideWindow().locate(elem).destroy();\n    } else {\n        // this is a regular form, use the return URL to back to the correct view, where possible\n        if (returnUrl != 'null') {\n            window.location.href = returnUrl;\n        } else {           \n            // this is just the default case, in case everything else blows up, should never happen!\n            window.location.href = window.location.protocol + '/' + window.location.host + '/' + tblName + '_list.do?sysparm_userpref_module=' + module + '&sysparm_query=' + listQuery + '&sysparm_cancelable=true';\n        }        \n    }\t   \n}\n// Prompt: i want to update the current task state to 2\n","action":"complete","response":"function completeToDo() {\n    var ajax = new GlideAjax('CompleteToDoAjax');\n    ajax.addParam('sysparm_name', 'completeToDo');\n    ajax.addParam('sysparm_table_name', tblName);\n    ajax.addParam('sysparm_sys_id', g_form.getUniqueValue());\n    ajax.addParam('sysparm_dialog_form_target_id', 'sys_id');\n    ajax.getXMLAnswer(completeToDoDone);\n}\n\nfunction completeToDoDone(response) {\n    // we don't care about the response\n    window.location.reload();\n}\n\n"},
{"cuid":"cld9le3rp00hxpq24u4frztbi","createdAt":"2023-01-24 08:02:21.973","updatedAt":"2023-01-24 08:02:27.152","userCuid":"cld9unimw000wucguenaahfdy","prompt":"\n// Prompt: Deletes current record after confirmation.\nvar ajaxHelper;\nvar objSysId;\nvar tblName;\nvar dlg;\nvar returnUrl;\nvar fromRelList;\nvar module;\nvar listQuery;\nvar stackName = null;\n\nfunction confirmAndDeleteFromForm() {   \n    objSysId = g_form.getUniqueValue();\n    tblName = g_form.getTableName();\n    fromRelList = g_form.getParameter('sysparm_from_related_list');\n    module = g_form.getParameter('sysparm_userpref_module');\n    listQuery = g_form.getParameter('sysparm_record_list');\n    stackName = g_form.getParameter('sysparm_nameofstack');\n\n    ajaxHelper = new GlideAjax('DeleteRecordAjax');\n    ajaxHelper.addParam('sysparm_name', 'getCascadeDeleteTables');\n    ajaxHelper.addParam('sysparm_obj_id', objSysId);\n    ajaxHelper.addParam('sysparm_table_name', tblName);\n    ajaxHelper.addParam('sysparm_nameofstack', stackName);\n    ajaxHelper.getXMLAnswer(getCascadeDelTablesDoneForm.bind(this), null, null); \n}\n\nfunction getCascadeDelTablesDoneForm(answer, s) {\n    \n    var ansrArray = answer.split(';');\n    returnUrl = ansrArray[0];\n    var objList = ansrArray[2];\n    dlg = new GlideDialogWindow('delete_confirm_form');\n    dlg.setTitle('Confirmation');\n    if(objList == null) {\n       dlg.setWidth(275);\n    } else {\n       dlg.setWidth(450);\n    }\n    dlg.setPreference('sysparm_obj_id', objSysId);\n    dlg.setPreference('sysparm_table_name', tblName);\n    dlg.setPreference('sysparm_delobj_list', objList);  \n    dlg.setPreference('sysparm_parent_form', this);\n    dlg.render();\n    \n}\n\nfunction deleteCompleted() {\n    dlg.destroy();\n    var w = getTopWindow();\n    cbField = w.document.getElementById('glide_dialog_form_target_' + tblName);\n    if(cbField != null) {\n        // this is a dialog form, make sure the completion callback is called\n        cbField.value = 'sysverb_delete:' + objSysId;\n        cbField.onchange();\n        \n       // dismiss the dialog form\n       var elem = window.parent.document.getElementById('body_FormDialog');\n       if (elem)\n           new GlideWindow().locate(elem).destroy();\n    } else {\n        // this is a regular form, use the return URL to back to the correct view, where possible\n        if (returnUrl != 'null') {\n            window.location.href = returnUrl;\n        } else {           \n            // this is just the default case, in case everything else blows up, should never happen!\n            window.location.href = window.location.protocol + '/' + window.location.host + '/' + tblName + '_list.do?sysparm_userpref_module=' + module + '&sysparm_query=' + listQuery + '&sysparm_cancelable=true';\n        }        \n    }\t   \n}\n// Prompt: when the button is selected, it will change the state to 2\n","action":"complete","response":"// and then call the submit of the form.\nfunction deleteAndComplete() {\n    var sysId = dlg.getPreference('sysparm_obj_id');\n    var tableName = dlg.getPreference('sysparm_table_name');\n    var objList = dlg.getPreference('sysparm_delobj_list');\n    var parentForm = dlg.getPreference('sysparm_parent_form');\n    var nameofstack = dlg.getPreference('sysparm_nameofstack');\n    var ajax = new GlideAjax('DeleteRecordAjax');\n    ajax.addParam('sysparm_name', 'deleteRecord');\n    ajax.addParam('sysparm_obj_id', sysId);\n    ajax.addParam('sysparm_table_name', tableName);\n    ajax.addParam('sysparm_nameofstack', nameofstack);\n    ajax.getXML(deleteCompleted.bind(this));\n  \n}\n\nfunction deleteAndCompleteForm() {\n    objSysId = g_form.getUniqueValue();\n    tblName = g_form.getTableName();\n    dlg = new GlideDialogWindow('delete_confirm_form');\n    dlg.setTitle('Confirmation');\n    dlg.setWidth(275);\n    dlg.setPreference('sysparm_obj_id', objSysId);\n    dlg.setPreference('sysparm_table_name', tblName);\n    dlg.setPreference('sysparm_parent_form', this);\n    dlg.render();\n}\n\nfunction deleteCompletedForm() {\n    objSysId = g_form.getUniqueValue();\n    tblName = g_form.getTableName();\n    dlg = new GlideDialogWindow('delete_confirm_form');\n    dlg.setTitle('Confirmation');\n    dlg.setWidth(275);\n    dlg.setPreference('sysparm_obj_id',"},
{"cuid":"cld9lez3b00hzpq244zxssbxd","createdAt":"2023-01-24 08:03:02.567","updatedAt":"2023-01-24 08:03:07.586","userCuid":"cld9unimw000wucguenaahfdy","prompt":"\n// Prompt: Deletes current record after confirmation.\nvar ajaxHelper;\nvar objSysId;\nvar tblName;\nvar dlg;\nvar returnUrl;\nvar fromRelList;\nvar module;\nvar listQuery;\nvar stackName = null;\n\nfunction confirmAndDeleteFromForm() {   \n    objSysId = g_form.getUniqueValue();\n    tblName = g_form.getTableName();\n    fromRelList = g_form.getParameter('sysparm_from_related_list');\n    module = g_form.getParameter('sysparm_userpref_module');\n    listQuery = g_form.getParameter('sysparm_record_list');\n    stackName = g_form.getParameter('sysparm_nameofstack');\n\n    ajaxHelper = new GlideAjax('DeleteRecordAjax');\n    ajaxHelper.addParam('sysparm_name', 'getCascadeDeleteTables');\n    ajaxHelper.addParam('sysparm_obj_id', objSysId);\n    ajaxHelper.addParam('sysparm_table_name', tblName);\n    ajaxHelper.addParam('sysparm_nameofstack', stackName);\n    ajaxHelper.getXMLAnswer(getCascadeDelTablesDoneForm.bind(this), null, null); \n}\n\nfunction getCascadeDelTablesDoneForm(answer, s) {\n    \n    var ansrArray = answer.split(';');\n    returnUrl = ansrArray[0];\n    var objList = ansrArray[2];\n    dlg = new GlideDialogWindow('delete_confirm_form');\n    dlg.setTitle('Confirmation');\n    if(objList == null) {\n       dlg.setWidth(275);\n    } else {\n       dlg.setWidth(450);\n    }\n    dlg.setPreference('sysparm_obj_id', objSysId);\n    dlg.setPreference('sysparm_table_name', tblName);\n    dlg.setPreference('sysparm_delobj_list', objList);  \n    dlg.setPreference('sysparm_parent_form', this);\n    dlg.render();\n    \n}\n\nfunction deleteCompleted() {\n    dlg.destroy();\n    var w = getTopWindow();\n    cbField = w.document.getElementById('glide_dialog_form_target_' + tblName);\n    if(cbField != null) {\n        // this is a dialog form, make sure the completion callback is called\n        cbField.value = 'sysverb_delete:' + objSysId;\n        cbField.onchange();\n        \n       // dismiss the dialog form\n       var elem = window.parent.document.getElementById('body_FormDialog');\n       if (elem)\n           new GlideWindow().locate(elem).destroy();\n    } else {\n        // this is a regular form, use the return URL to back to the correct view, where possible\n        if (returnUrl != 'null') {\n            window.location.href = returnUrl;\n        } else {           \n            // this is just the default case, in case everything else blows up, should never happen!\n            window.location.href = window.location.protocol + '/' + window.location.host + '/' + tblName + '_list.do?sysparm_userpref_module=' + module + '&sysparm_query=' + listQuery + '&sysparm_cancelable=true';\n        }        \n    }\t   \n}\n// Prompt: change state to Work In Progress and remain on form\n","action":"complete","response":"function confirmWIPFromForm() {\n    objSysId = g_form.getUniqueValue();\n    tblName = g_form.getTableName();\n    ajaxHelper = new GlideAjax('AJAXChangeState');\n    ajaxHelper.addParam('sysparm_name', 'getWorkInProgressTables');\n    ajaxHelper.addParam('sysparm_obj_id', objSysId);\n    ajaxHelper.addParam('sysparm_table_name', tblName);\n    ajaxHelper.addParam('sysparm_nameofstack', stackName);\n    ajaxHelper.getXMLAnswer(getWorkInProgressTablesDoneForm.bind(this), null, null);\n}\n\nfunction getWorkInProgressTablesDoneForm(answer, s) {\n\n    var answerArray = answer.split(';');\n    returnUrl = answerArray[0];\n    var objList = answerArray[2];\n    dlg = new GlideDialogWindow('work_in_progress_confirm_form');\n    dlg.setTitle('Confirmation');\n    dlg.setWidth(450);\n    dlg.setPreference('sysparm_obj_id', objSysId);\n    dlg.setPreference('sysparm_table_name', tblName);\n    dlg.setPreference('sysparm_wiobj_list', objList);\n    dlg.setPreference('sysparm_nameofstack', stackName);\n    dlg.render();\n}\n\nfunction confirmWIPDoneForm() {\n    dlg.destroy();\n    var w = getTopWindow();\n    cbField = w.document.getElementById('glide_dialog_form_target_' + tblName);\n    if(cbField != null) {\n        // this is a dialog form, make sure the completion callback is called\n        cbField.value = 'sysverb_work_in_progress:' + objSysId;\n        cbField.onchange();\n        \n       // dismiss the dialog form\n       var elem ="},
{"cuid":"cld9m7pon00i3pq24lkhfwnbd","createdAt":"2023-01-24 08:25:23.399","updatedAt":"2023-01-24 08:25:24.474","userCuid":"cld9unimw000wucguenaahfdy","prompt":"current.state = '2';\n\"\"\"\nExplain the above code step-by-step in simple english.","action":"explain","response":"\n\nThe code above sets the state of a \"current\" object to \"2\"."},
{"cuid":"cld9m8rmt00i6pq24laaqo25g","createdAt":"2023-01-24 08:26:12.582","updatedAt":"2023-01-24 08:26:16.86","userCuid":"cld9unimw000wucguenaahfdy","prompt":"\n// Prompt: Deletes current record after confirmation.\nvar ajaxHelper;\nvar objSysId;\nvar tblName;\nvar dlg;\nvar returnUrl;\nvar fromRelList;\nvar module;\nvar listQuery;\nvar stackName = null;\n\nfunction confirmAndDeleteFromForm() {   \n    objSysId = g_form.getUniqueValue();\n    tblName = g_form.getTableName();\n    fromRelList = g_form.getParameter('sysparm_from_related_list');\n    module = g_form.getParameter('sysparm_userpref_module');\n    listQuery = g_form.getParameter('sysparm_record_list');\n    stackName = g_form.getParameter('sysparm_nameofstack');\n\n    ajaxHelper = new GlideAjax('DeleteRecordAjax');\n    ajaxHelper.addParam('sysparm_name', 'getCascadeDeleteTables');\n    ajaxHelper.addParam('sysparm_obj_id', objSysId);\n    ajaxHelper.addParam('sysparm_table_name', tblName);\n    ajaxHelper.addParam('sysparm_nameofstack', stackName);\n    ajaxHelper.getXMLAnswer(getCascadeDelTablesDoneForm.bind(this), null, null); \n}\n\nfunction getCascadeDelTablesDoneForm(answer, s) {\n    \n    var ansrArray = answer.split(';');\n    returnUrl = ansrArray[0];\n    var objList = ansrArray[2];\n    dlg = new GlideDialogWindow('delete_confirm_form');\n    dlg.setTitle('Confirmation');\n    if(objList == null) {\n       dlg.setWidth(275);\n    } else {\n       dlg.setWidth(450);\n    }\n    dlg.setPreference('sysparm_obj_id', objSysId);\n    dlg.setPreference('sysparm_table_name', tblName);\n    dlg.setPreference('sysparm_delobj_list', objList);  \n    dlg.setPreference('sysparm_parent_form', this);\n    dlg.render();\n    \n}\n\nfunction deleteCompleted() {\n    dlg.destroy();\n    var w = getTopWindow();\n    cbField = w.document.getElementById('glide_dialog_form_target_' + tblName);\n    if(cbField != null) {\n        // this is a dialog form, make sure the completion callback is called\n        cbField.value = 'sysverb_delete:' + objSysId;\n        cbField.onchange();\n        \n       // dismiss the dialog form\n       var elem = window.parent.document.getElementById('body_FormDialog');\n       if (elem)\n           new GlideWindow().locate(elem).destroy();\n    } else {\n        // this is a regular form, use the return URL to back to the correct view, where possible\n        if (returnUrl != 'null') {\n            window.location.href = returnUrl;\n        } else {           \n            // this is just the default case, in case everything else blows up, should never happen!\n            window.location.href = window.location.protocol + '/' + window.location.host + '/' + tblName + '_list.do?sysparm_userpref_module=' + module + '&sysparm_query=' + listQuery + '&sysparm_cancelable=true';\n        }        \n    }\t   \n}\n// Prompt: set the current task to a state of 2\n","action":"complete","response":"function setTaskState() {\n    var ajax = new GlideAjax('SetTaskStateAjax');\n    ajax.addParam('sysparm_name', 'setTaskState');\n    ajax.addParam('sysparm_state', g_form.getValue('state'));\n    ajax.addParam('sysparm_task', g_form.getUniqueValue());\n    ajax.addParam('sysparm_stack', g_form.getParameter('sysparm_stack'));\n    ajax.addParam('sysparm_from_related_list', g_form.getParameter('sysparm_from_related_list'));\n    ajax.addParam('sysparm_return_to_related_list', g_form.getParameter('sysparm_return_to_related_list'));\n    ajax.addParam('sysparm_record_list', g_form.getParameter('sysparm_record_list'));\n    ajax.addParam('sysparm_userpref_module', g_form.getParameter('sysparm_userpref_module'));\n    ajax.addParam('sysparm_nameofstack', g_form.getParameter('sysparm_nameofstack'));\n    ajax.getXML(setTaskStateDone);\n}\n\nfunction setTaskStateDone(response) {\n    if (response.responseXML != null) {\n        var returnUrl = response.responseXML.documentElement.getAttribute('return_url');\n        if (returnUrl != 'null') {\n            window.location.href = returnUrl;\n        } else {\n            window.location.reload(true);\n        }\n    }\n}\n\n"},
{"cuid":"cld9m9eeg00i8pq24oop2f3q8","createdAt":"2023-01-24 08:26:42.089","updatedAt":"2023-01-24 08:26:46.886","userCuid":"cld9unimw000wucguenaahfdy","prompt":"\n// Prompt: Deletes current record after confirmation.\nvar ajaxHelper;\nvar objSysId;\nvar tblName;\nvar dlg;\nvar returnUrl;\nvar fromRelList;\nvar module;\nvar listQuery;\nvar stackName = null;\n\nfunction confirmAndDeleteFromForm() {   \n    objSysId = g_form.getUniqueValue();\n    tblName = g_form.getTableName();\n    fromRelList = g_form.getParameter('sysparm_from_related_list');\n    module = g_form.getParameter('sysparm_userpref_module');\n    listQuery = g_form.getParameter('sysparm_record_list');\n    stackName = g_form.getParameter('sysparm_nameofstack');\n\n    ajaxHelper = new GlideAjax('DeleteRecordAjax');\n    ajaxHelper.addParam('sysparm_name', 'getCascadeDeleteTables');\n    ajaxHelper.addParam('sysparm_obj_id', objSysId);\n    ajaxHelper.addParam('sysparm_table_name', tblName);\n    ajaxHelper.addParam('sysparm_nameofstack', stackName);\n    ajaxHelper.getXMLAnswer(getCascadeDelTablesDoneForm.bind(this), null, null); \n}\n\nfunction getCascadeDelTablesDoneForm(answer, s) {\n    \n    var ansrArray = answer.split(';');\n    returnUrl = ansrArray[0];\n    var objList = ansrArray[2];\n    dlg = new GlideDialogWindow('delete_confirm_form');\n    dlg.setTitle('Confirmation');\n    if(objList == null) {\n       dlg.setWidth(275);\n    } else {\n       dlg.setWidth(450);\n    }\n    dlg.setPreference('sysparm_obj_id', objSysId);\n    dlg.setPreference('sysparm_table_name', tblName);\n    dlg.setPreference('sysparm_delobj_list', objList);  \n    dlg.setPreference('sysparm_parent_form', this);\n    dlg.render();\n    \n}\n\nfunction deleteCompleted() {\n    dlg.destroy();\n    var w = getTopWindow();\n    cbField = w.document.getElementById('glide_dialog_form_target_' + tblName);\n    if(cbField != null) {\n        // this is a dialog form, make sure the completion callback is called\n        cbField.value = 'sysverb_delete:' + objSysId;\n        cbField.onchange();\n        \n       // dismiss the dialog form\n       var elem = window.parent.document.getElementById('body_FormDialog');\n       if (elem)\n           new GlideWindow().locate(elem).destroy();\n    } else {\n        // this is a regular form, use the return URL to back to the correct view, where possible\n        if (returnUrl != 'null') {\n            window.location.href = returnUrl;\n        } else {           \n            // this is just the default case, in case everything else blows up, should never happen!\n            window.location.href = window.location.protocol + '/' + window.location.host + '/' + tblName + '_list.do?sysparm_userpref_module=' + module + '&sysparm_query=' + listQuery + '&sysparm_cancelable=true';\n        }        \n    }\t   \n}\n// Prompt: set the current task to a state 2\n","action":"complete","response":"function confirmAndSetToState2() {\n    // get the current sys_id\n    var sys_id = g_form.getUniqueValue();\n    // create the GlideAjax object\n    var g = new GlideAjax('TaskAjax');\n    // set the action to get a list of all the tasks of the current record\n    g.addParam('sysparm_name', 'getTasks');\n    // set the sys_id of the current record\n    g.addParam('sysparm_table_name', g_form.getTableName());\n    g.addParam('sysparm_table_sys_id', sys_id);\n    // run the query and get the XML answer for the list of all the tasks of the current record\n    g.getXMLAnswer(getTasksDoneForm);\n}\n\n// function getTasksDoneForm(answer, s) {\n//     // get the XML DOM object from the response\n//     var xml = new XML(answer);\n//     // get the number of tasks\n//     var numTasks = xml.child('result').children().length();\n//     // create the dialog window\n//     var g = new GlideDialogWindow('set_state_2_confirm_form');\n//     // set the title\n//     g.setTitle('Confirmation');\n//     // set the width\n//     g.setWidth(850);\n//     // set the sys_id of the current record\n//     g.setPreference('sysparm_table_sys_id', g_form.getUniqueValue());\n//     // set the table name of the current record\n//     g.setPreference('sysparm_table_name', g_form.getTableName());\n//     // set the action to run when the cancel button is clicked\n//     // when the cancel button is clicked, the dialog window should be destroyed\n//     // and the user should be taken back to the page\n//     g.setPreference('sysparm_on_cancel_url', 'javascript:gTask.destroyDialog();gTask.backToPage();');\n//     // set the action to run when the form is submitted\n//"},
{"cuid":"cld9marr200ibpq24qy3ncn1i","createdAt":"2023-01-24 08:27:46.047","updatedAt":"2023-01-24 08:27:47.332","userCuid":"cld9unimw000wucguenaahfdy","prompt":"\n// Prompt: Deletes current record after confirmation.\nvar ajaxHelper;\nvar objSysId;\nvar tblName;\nvar dlg;\nvar returnUrl;\nvar fromRelList;\nvar module;\nvar listQuery;\nvar stackName = null;\n\nfunction confirmAndDeleteFromForm() {   \n    objSysId = g_form.getUniqueValue();\n    tblName = g_form.getTableName();\n    fromRelList = g_form.getParameter('sysparm_from_related_list');\n    module = g_form.getParameter('sysparm_userpref_module');\n    listQuery = g_form.getParameter('sysparm_record_list');\n    stackName = g_form.getParameter('sysparm_nameofstack');\n\n    ajaxHelper = new GlideAjax('DeleteRecordAjax');\n    ajaxHelper.addParam('sysparm_name', 'getCascadeDeleteTables');\n    ajaxHelper.addParam('sysparm_obj_id', objSysId);\n    ajaxHelper.addParam('sysparm_table_name', tblName);\n    ajaxHelper.addParam('sysparm_nameofstack', stackName);\n    ajaxHelper.getXMLAnswer(getCascadeDelTablesDoneForm.bind(this), null, null); \n}\n\nfunction getCascadeDelTablesDoneForm(answer, s) {\n    \n    var ansrArray = answer.split(';');\n    returnUrl = ansrArray[0];\n    var objList = ansrArray[2];\n    dlg = new GlideDialogWindow('delete_confirm_form');\n    dlg.setTitle('Confirmation');\n    if(objList == null) {\n       dlg.setWidth(275);\n    } else {\n       dlg.setWidth(450);\n    }\n    dlg.setPreference('sysparm_obj_id', objSysId);\n    dlg.setPreference('sysparm_table_name', tblName);\n    dlg.setPreference('sysparm_delobj_list', objList);  \n    dlg.setPreference('sysparm_parent_form', this);\n    dlg.render();\n    \n}\n\nfunction deleteCompleted() {\n    dlg.destroy();\n    var w = getTopWindow();\n    cbField = w.document.getElementById('glide_dialog_form_target_' + tblName);\n    if(cbField != null) {\n        // this is a dialog form, make sure the completion callback is called\n        cbField.value = 'sysverb_delete:' + objSysId;\n        cbField.onchange();\n        \n       // dismiss the dialog form\n       var elem = window.parent.document.getElementById('body_FormDialog');\n       if (elem)\n           new GlideWindow().locate(elem).destroy();\n    } else {\n        // this is a regular form, use the return URL to back to the correct view, where possible\n        if (returnUrl != 'null') {\n            window.location.href = returnUrl;\n        } else {           \n            // this is just the default case, in case everything else blows up, should never happen!\n            window.location.href = window.location.protocol + '/' + window.location.host + '/' + tblName + '_list.do?sysparm_userpref_module=' + module + '&sysparm_query=' + listQuery + '&sysparm_cancelable=true';\n        }        \n    }\t   \n}\n// Prompt: set the current incident.task to a state 2\n","action":"complete","response":"function setResolved() {\n    var incident = new GlideRecord('incident');\n    incident.get(g_form.getUniqueValue());\n    incident.setValue('state', 2);\n    incident.update();\n}\n\n"},
{"cuid":"cld9mdua700iepq2408hghypt","createdAt":"2023-01-24 08:30:09.295","updatedAt":"2023-01-24 08:30:10.701","userCuid":"cld9unimw000wucguenaahfdy","prompt":"function setState() {\n    var incidentTask = new GlideRecord('task');\n    incident.get(g_form.getUniqueValue());\n    incident.task.setValue('state', 2);\n    task.update();\n}\n\"\"\"\nExplain the above code step-by-step in simple english.","action":"explain","response":" \n\nThis code creates a new GlideRecord for task, sets the value of state to 2 for the incident, and updates the task."},
{"cuid":"cld9nt05z00irpq24jnz41oxt","createdAt":"2023-01-24 09:09:56.375","updatedAt":"2023-01-24 09:09:58.52","userCuid":"cld9unimw000wucguenaahfdy","prompt":"function onSubmit() {\n\tg_form.setValue(\"state\",\"2\");\n\tgsftSubmit(null, g_form.getFormElement(), \"start_work_dispatch\");\n}\n\nif (typeof window == 'undefined')\n   setRedirect();\n\nfunction setRedirect() {\n    current.update();\n    action.setRedirectURL(current);\n}\n\"\"\"\nExplain the above code step-by-step in simple english.","action":"explain","response":"\n\nThe above code is written in Python and is used to set the state of a form to \"2\" and submit it. First, the \"onSubmit\" function is defined. This function sets the value of the \"state\" field to \"2\" and calls the \"gsftSubmit\" function. This function submits the form. Finally, the \"setRedirect\" function is called. This function updates the form and sets the redirect URL to the current form."},
{"cuid":"cld9p7nbb00iupq2415iqf5be","createdAt":"2023-01-24 09:49:19.176","updatedAt":"2023-01-24 09:49:21.207","userCuid":"cld9unimw000wucguenaahfdy","prompt":"\n// Prompt: Deletes current record after confirmation.\nvar ajaxHelper;\nvar objSysId;\nvar tblName;\nvar dlg;\nvar returnUrl;\nvar fromRelList;\nvar module;\nvar listQuery;\nvar stackName = null;\n\nfunction confirmAndDeleteFromForm() {   \n    objSysId = g_form.getUniqueValue();\n    tblName = g_form.getTableName();\n    fromRelList = g_form.getParameter('sysparm_from_related_list');\n    module = g_form.getParameter('sysparm_userpref_module');\n    listQuery = g_form.getParameter('sysparm_record_list');\n    stackName = g_form.getParameter('sysparm_nameofstack');\n\n    ajaxHelper = new GlideAjax('DeleteRecordAjax');\n    ajaxHelper.addParam('sysparm_name', 'getCascadeDeleteTables');\n    ajaxHelper.addParam('sysparm_obj_id', objSysId);\n    ajaxHelper.addParam('sysparm_table_name', tblName);\n    ajaxHelper.addParam('sysparm_nameofstack', stackName);\n    ajaxHelper.getXMLAnswer(getCascadeDelTablesDoneForm.bind(this), null, null); \n}\n\nfunction getCascadeDelTablesDoneForm(answer, s) {\n    \n    var ansrArray = answer.split(';');\n    returnUrl = ansrArray[0];\n    var objList = ansrArray[2];\n    dlg = new GlideDialogWindow('delete_confirm_form');\n    dlg.setTitle('Confirmation');\n    if(objList == null) {\n       dlg.setWidth(275);\n    } else {\n       dlg.setWidth(450);\n    }\n    dlg.setPreference('sysparm_obj_id', objSysId);\n    dlg.setPreference('sysparm_table_name', tblName);\n    dlg.setPreference('sysparm_delobj_list', objList);  \n    dlg.setPreference('sysparm_parent_form', this);\n    dlg.render();\n    \n}\n\nfunction deleteCompleted() {\n    dlg.destroy();\n    var w = getTopWindow();\n    cbField = w.document.getElementById('glide_dialog_form_target_' + tblName);\n    if(cbField != null) {\n        // this is a dialog form, make sure the completion callback is called\n        cbField.value = 'sysverb_delete:' + objSysId;\n        cbField.onchange();\n        \n       // dismiss the dialog form\n       var elem = window.parent.document.getElementById('body_FormDialog');\n       if (elem)\n           new GlideWindow().locate(elem).destroy();\n    } else {\n        // this is a regular form, use the return URL to back to the correct view, where possible\n        if (returnUrl != 'null') {\n            window.location.href = returnUrl;\n        } else {           \n            // this is just the default case, in case everything else blows up, should never happen!\n            window.location.href = window.location.protocol + '/' + window.location.host + '/' + tblName + '_list.do?sysparm_userpref_module=' + module + '&sysparm_query=' + listQuery + '&sysparm_cancelable=true';\n        }        \n    }\t   \n}\n// Prompt: copy current record and create a new incident.task in an open state\n","action":"complete","response":"function copyRecord() {\n    var record = new Record(g_form.getTableName(),g_form.getUniqueValue());\n    record.copy();\n    var url = 'sys_task.do?sys_id=' + g_form.getUniqueValue() + '&new_copy=true&sys_action=NEW&sysparm_stack=' + stackName;\n    if (fromRelList == 'true') {\n        url += '&sysparm_from_related_list=true';\n    }\n    window.location.href = url;\n}\n\n"},
{"cuid":"cld9pdll000iypq24413n3q76","createdAt":"2023-01-24 09:53:56.869","updatedAt":"2023-01-24 09:53:58.323","userCuid":"cld9unimw000wucguenaahfdy","prompt":"function DuplicateDispatchTask() {\n\tg_form.setValue(\"state\",\"1\");\n\tcurrent.insert();\n\tgsftSubmit(null, g_form.getFormElement(), \"copy_dispatch_task\");\n}\n\nif (typeof window == 'undefined')\n   setRedirect();\n\nfunction setRedirect() {\n    current.update();\n    action.setRedirectURL(current);\n}\n\"\"\"\nExplain the above code step-by-step in simple english.","action":"explain","response":"\n\n1. The code defines a function called \"DuplicateDispatchTask\".\n\n2. The function sets the value of the \"state\" field to \"1\".\n\n3. The function then inserts a new record.\n\n4. The function then submits the form.\n\n5. The function then sets the redirect URL to the current record."},
{"cuid":"cld9pekxt00j1pq246n5w63oa","createdAt":"2023-01-24 09:54:42.689","updatedAt":"2023-01-24 09:54:44.164","userCuid":"cld9unimw000wucguenaahfdy","prompt":"function DuplicateDispatchTask() {\n\tcurrent.insert();\n\tg_form.setValue(\"state\",\"1\");\n\tgsftSubmit(null, g_form.getFormElement(), \"copy_dispatch_task\");\n}\n\nif (typeof window == 'undefined')\n   setRedirect();\n\nfunction setRedirect() {\n    current.update();\n    action.setRedirectURL(current);\n}\n\"\"\"\nExplain the above code step-by-step in simple english.","action":"explain","response":"\n\nThe code above is a function that duplicates a dispatch task. It starts by creating a new task, then setting the state to \"1\" (active), and finally submitting the form."},
{"cuid":"cld9pjkdg00j7pq2427n74s26","createdAt":"2023-01-24 09:58:35.236","updatedAt":"2023-01-24 09:58:36.755","userCuid":"cld9unimw000wucguenaahfdy","prompt":"function DuplicateDispatchTask() {\n\tg_form.setValue(\"state\",\"1\");\n\tcurrent.insert();\t\n\tgsftSubmit(null, g_form.getFormElement(), \"copy_dispatch_task\");\n}\n\nif (typeof window == 'undefined')\n   setRedirect();\n\nfunction setRedirect() {\n    current.update();\n    action.setRedirectURL(current);\n}\n\"\"\"\nExplain the above code step-by-step in simple english.","action":"explain","response":"\n\nThe above code is responsible for duplicating a dispatch task. When a user clicks the \"Duplicate\" button, the code will set the state of the task to \"1\" and insert it into the current form. Then, it will submit the form and set the redirect URL to the current task."},
{"cuid":"cld9qn1hm00jbpq24e8z9gfcg","createdAt":"2023-01-24 10:29:17.002","updatedAt":"2023-01-24 10:29:18.95","userCuid":"cld9unimw000wucguenaahfdy","prompt":"\n// Prompt: Deletes current record after confirmation.\nvar ajaxHelper;\nvar objSysId;\nvar tblName;\nvar dlg;\nvar returnUrl;\nvar fromRelList;\nvar module;\nvar listQuery;\nvar stackName = null;\n\nfunction confirmAndDeleteFromForm() {   \n    objSysId = g_form.getUniqueValue();\n    tblName = g_form.getTableName();\n    fromRelList = g_form.getParameter('sysparm_from_related_list');\n    module = g_form.getParameter('sysparm_userpref_module');\n    listQuery = g_form.getParameter('sysparm_record_list');\n    stackName = g_form.getParameter('sysparm_nameofstack');\n\n    ajaxHelper = new GlideAjax('DeleteRecordAjax');\n    ajaxHelper.addParam('sysparm_name', 'getCascadeDeleteTables');\n    ajaxHelper.addParam('sysparm_obj_id', objSysId);\n    ajaxHelper.addParam('sysparm_table_name', tblName);\n    ajaxHelper.addParam('sysparm_nameofstack', stackName);\n    ajaxHelper.getXMLAnswer(getCascadeDelTablesDoneForm.bind(this), null, null); \n}\n\nfunction getCascadeDelTablesDoneForm(answer, s) {\n    \n    var ansrArray = answer.split(';');\n    returnUrl = ansrArray[0];\n    var objList = ansrArray[2];\n    dlg = new GlideDialogWindow('delete_confirm_form');\n    dlg.setTitle('Confirmation');\n    if(objList == null) {\n       dlg.setWidth(275);\n    } else {\n       dlg.setWidth(450);\n    }\n    dlg.setPreference('sysparm_obj_id', objSysId);\n    dlg.setPreference('sysparm_table_name', tblName);\n    dlg.setPreference('sysparm_delobj_list', objList);  \n    dlg.setPreference('sysparm_parent_form', this);\n    dlg.render();\n    \n}\n\nfunction deleteCompleted() {\n    dlg.destroy();\n    var w = getTopWindow();\n    cbField = w.document.getElementById('glide_dialog_form_target_' + tblName);\n    if(cbField != null) {\n        // this is a dialog form, make sure the completion callback is called\n        cbField.value = 'sysverb_delete:' + objSysId;\n        cbField.onchange();\n        \n       // dismiss the dialog form\n       var elem = window.parent.document.getElementById('body_FormDialog');\n       if (elem)\n           new GlideWindow().locate(elem).destroy();\n    } else {\n        // this is a regular form, use the return URL to back to the correct view, where possible\n        if (returnUrl != 'null') {\n            window.location.href = returnUrl;\n        } else {           \n            // this is just the default case, in case everything else blows up, should never happen!\n            window.location.href = window.location.protocol + '/' + window.location.host + '/' + tblName + '_list.do?sysparm_userpref_module=' + module + '&sysparm_query=' + listQuery + '&sysparm_cancelable=true';\n        }        \n    }\t   \n}\n// Prompt: i want to duplicate this record with a new record id\n","action":"complete","response":"function duplicateRecord() {\n    var sysId = g_form.getUniqueValue();\n    var tableName = g_form.getTableName();\n    var query = \"sysparm_off_duplicate=true&sysparm_table_name=\" + tableName + \"&sysparm_query=\" + listQuery;\n    var url = window.location.protocol + \"/\" + window.location.host + \"/\" + tableName + \"_list.do?\" + query;\n    window.location.href = url;\n}\n"},
{"cuid":"cld9riegh00jepq2474u3jzvd","createdAt":"2023-01-24 10:53:40.145","updatedAt":"2023-01-24 10:53:41.581","userCuid":"cld9unimw000wucguenaahfdy","prompt":"var obj = current.insert();\n\n{\n\n//some code which does updates on the object 'obj'\n\n}\n\naction.setRedirectURL(current);\n\"\"\"\nExplain the above code step-by-step in simple english.","action":"explain","response":"\n\nThe above code inserts a new object into the 'current' object, and then updates the object with some code. Finally, it redirects the action to the 'current' object."},
{"cuid":"cld9rj2qa00jhpq24usurfqau","createdAt":"2023-01-24 10:54:11.602","updatedAt":"2023-01-24 10:54:13.005","userCuid":"cld9unimw000wucguenaahfdy","prompt":"Update this code based following this prompt, \"\": 1. The above code inserts a new object into the 'current' object, and then updates the object with some code. Finally, it redirects the action to the 'current' object.\n// Generated by scribe.monster ```","action":"edit","response":"\n\nThe above code inserts a new object into the 'current' object, and then updates the object with some code. Finally, it redirects the action to the 'current' object."},
{"cuid":"cld9rk8m400jmpq24ex8w4tml","createdAt":"2023-01-24 10:55:05.884","updatedAt":"2023-01-24 10:55:07.356","userCuid":"cld9unimw000wucguenaahfdy","prompt":"The above code inserts a new object into the 'current' object, and then updates the object with a new number. Finally, it redirects the action to the 'current' object.\n// Generated by scribe.monster\n\"\"\"\nExplain the above code step-by-step in simple english.","action":"explain","response":"\n\n\nThe above code inserts a new object into the 'current' object.\n\nIt then updates the object with a new number.\n\nFinally, it redirects the action to the 'current' object."},
{"cuid":"cld9rkfvf00jopq24yg3k7vvp","createdAt":"2023-01-24 10:55:15.291","updatedAt":"2023-01-24 10:55:20.385","userCuid":"cld9unimw000wucguenaahfdy","prompt":"\n// Prompt: Deletes current record after confirmation.\nvar ajaxHelper;\nvar objSysId;\nvar tblName;\nvar dlg;\nvar returnUrl;\nvar fromRelList;\nvar module;\nvar listQuery;\nvar stackName = null;\n\nfunction confirmAndDeleteFromForm() {   \n    objSysId = g_form.getUniqueValue();\n    tblName = g_form.getTableName();\n    fromRelList = g_form.getParameter('sysparm_from_related_list');\n    module = g_form.getParameter('sysparm_userpref_module');\n    listQuery = g_form.getParameter('sysparm_record_list');\n    stackName = g_form.getParameter('sysparm_nameofstack');\n\n    ajaxHelper = new GlideAjax('DeleteRecordAjax');\n    ajaxHelper.addParam('sysparm_name', 'getCascadeDeleteTables');\n    ajaxHelper.addParam('sysparm_obj_id', objSysId);\n    ajaxHelper.addParam('sysparm_table_name', tblName);\n    ajaxHelper.addParam('sysparm_nameofstack', stackName);\n    ajaxHelper.getXMLAnswer(getCascadeDelTablesDoneForm.bind(this), null, null); \n}\n\nfunction getCascadeDelTablesDoneForm(answer, s) {\n    \n    var ansrArray = answer.split(';');\n    returnUrl = ansrArray[0];\n    var objList = ansrArray[2];\n    dlg = new GlideDialogWindow('delete_confirm_form');\n    dlg.setTitle('Confirmation');\n    if(objList == null) {\n       dlg.setWidth(275);\n    } else {\n       dlg.setWidth(450);\n    }\n    dlg.setPreference('sysparm_obj_id', objSysId);\n    dlg.setPreference('sysparm_table_name', tblName);\n    dlg.setPreference('sysparm_delobj_list', objList);  \n    dlg.setPreference('sysparm_parent_form', this);\n    dlg.render();\n    \n}\n\nfunction deleteCompleted() {\n    dlg.destroy();\n    var w = getTopWindow();\n    cbField = w.document.getElementById('glide_dialog_form_target_' + tblName);\n    if(cbField != null) {\n        // this is a dialog form, make sure the completion callback is called\n        cbField.value = 'sysverb_delete:' + objSysId;\n        cbField.onchange();\n        \n       // dismiss the dialog form\n       var elem = window.parent.document.getElementById('body_FormDialog');\n       if (elem)\n           new GlideWindow().locate(elem).destroy();\n    } else {\n        // this is a regular form, use the return URL to back to the correct view, where possible\n        if (returnUrl != 'null') {\n            window.location.href = returnUrl;\n        } else {           \n            // this is just the default case, in case everything else blows up, should never happen!\n            window.location.href = window.location.protocol + '/' + window.location.host + '/' + tblName + '_list.do?sysparm_userpref_module=' + module + '&sysparm_query=' + listQuery + '&sysparm_cancelable=true';\n        }        \n    }\t   \n}\n// Prompt: i want the record to have a new number\n","action":"complete","response":"var ajaxHelper;\nvar objSysId;\nvar tblName;\nvar dlg;\n\nfunction promptForNewNumber(id, label) {\n    objSysId = id;\n    tblName = label;\n    ajaxHelper = new GlideAjax('UpdateDisplayAjax');\n    ajaxHelper.addParam('sysparm_name', 'getNewNumber');\n    ajaxHelper.addParam('sysparm_table', tblName);\n    ajaxHelper.addParam('sysparm_table_id', id);\n    ajaxHelper.getXMLAnswer(getNewNumberDone, null, null); \n}\n\nfunction getNewNumberDone(answer, s) {\n    dlg = new GlideDialogWindow('GetNewNumber');\n    dlg.setTitle('Confirmation');\n    dlg.setWidth(275);\n    dlg.setPreference('sysparm_obj_id', objSysId);\n    dlg.setPreference('sysparm_table_name', tblName);\n    dlg.setPreference('sysparm_new_number', answer);\n    dlg.render();\n}\n\nfunction newNumberCompleted() {\n    var w = getTopWindow();\n    var number = w.document.getElementById('ctl_number').value;\n    var prefix = w.document.getElementById('ctl_prefix').value;\n    var suffix = w.document.getElementById('ctl_suffix').value;\n    var desc = w.document.getElementById('ctl_description').value;\n    var f = g_form.getFormElement();\n    var t = f.elements.namedItem('number');\n    if(t != null) {\n        t.value = prefix + number + suffix;\n    }\n    var t = f.elements.namedItem('description');\n    if(t != null) {\n        t.value = desc;\n    }\n    dlg.destroy();\n}\n\n"},
{"cuid":"cld9rlj8z00jspq2442i4j5dc","createdAt":"2023-01-24 10:56:06.323","updatedAt":"2023-01-24 10:56:07.983","userCuid":"cld9unimw000wucguenaahfdy","prompt":"var ajaxHelper;\nvar objSysId;\nvar tblName;\nvar dlg;\n\nfunction promptForNewNumber(id, label) {\n    objSysId = id;\n    tblName = label;\n    ajaxHelper = new GlideAjax('UpdateDisplayAjax');\n    ajaxHelper.addParam('sysparm_name', 'getNewNumber');\n    ajaxHelper.addParam('sysparm_table', tblName);\n    ajaxHelper.addParam('sysparm_table_id', id);\n    ajaxHelper.getXMLAnswer(getNewNumberDone, null, null); \n}\n\nfunction getNewNumberDone(answer, s) {\n    dlg = new GlideDialogWindow('GetNewNumber');\n    dlg.setTitle('Confirmation');\n    dlg.setWidth(275);\n    dlg.setPreference('sysparm_obj_id', objSysId);\n    dlg.setPreference('sysparm_table_name', tblName);\n    dlg.setPreference('sysparm_new_number', answer);\n    dlg.render();\n}\n\nfunction newNumberCompleted() {\n    var w = getTopWindow();\n    var number = w.document.getElementById('ctl_number').value;\n    var prefix = w.document.getElementById('ctl_prefix').value;\n    var suffix = w.document.getElementById('ctl_suffix').value;\n    var desc = w.document.getElementById('ctl_description').value;\n    var f = g_form.getFormElement();\n    var t = f.elements.namedItem('number');\n    if(t != null) {\n        t.value = prefix + number + suffix;\n    }\n    var t = f.elements.namedItem('description');\n    if(t != null) {\n        t.value = desc;\n    }\n    dlg.destroy();\n}\n\n\n// Generated by scribe.monster\n\"\"\"\nExplain the above code step-by-step in simple english.","action":"explain","response":"\n\nThe above code is a javascript function that prompts the user for a new number, \nand then updates the form with the new number and description."},
{"cuid":"cld9uvweq0000ut24mld9rtw3","createdAt":"2023-01-24 06:28:08.786","updatedAt":"2023-01-24 06:28:09.839","userCuid":"cld9unimw001yucgucbtj659g","prompt":"1+3?","action":"ask","response":"\n\n4"},
{"cuid":"cld9y7c9e0000rg24bw6yt4yw","createdAt":"2023-01-24 08:01:01.395","updatedAt":"2023-01-24 08:01:10.75","userCuid":"cld9unimy004pucgu4tff4xl2","prompt":"servicenow cloud discovery\n\n\n","action":"ask","response":"\nServiceNow Cloud Discovery is an enterprise IT inventory and configuration management solution that provides visibility of cloud and on-premise assets. It is designed to help organizations identify and manage cloud and on-premise assets, maintain compliance with industry and government standards, and reduce spending on unused resources. ServiceNow Cloud Discovery enables users to automatically track and manage IT assets across hybrid IT environments, taking a holistic view of the infrastructure and its dependencies. The solution provides up-to-date asset visibility and performance metrics, helping users to reduce risk, improve security, and maintain compliance. Cloud Discovery also helps users to optimize spend by identifying unused or underutilized assets and resources."},
{"cuid":"clda3jlnv0004rg24e0lhedu4","createdAt":"2023-01-24 10:30:31.531","updatedAt":"2023-01-24 10:30:37.299","userCuid":"cld9unimw002fucgu0w461qd6","prompt":"var u_CatalogAjax = Class.create();\nu_CatalogAjax.prototype = Object.extendsObject(AbstractAjaxProcessor, {\n    ajaxFunction_getUserDetails: function() {\n        var mobile_phone = '';\n        var email = '';\n        var location = '';\n        var manager = '';\n\n\n        var trgt = this.getParameter('sysparm_target');\n        var user = new GlideRecord('sys_user');\n        user.addQuery('sys_id', trgt);\n        user.query();\n        if (user.next()) {\n            mobile_phone = user.mobile_phone;\n            email = user.email;\n            location = user.location;\n            manager = user.manager;\n        }\n\n        this._addUserDetail('mobile_phone', mobile_phone);\n        this._addUserDetail('email', email);\n        this._addUserDetail('location', location);\n        this._addUserDetail('manager', manager);\n\n    },\n\n\n    getReports: function(usr, action) {\n\n\t\t//function to check the reports the user has.\n\t\t//action can be grant/revoke_access\n\t\t//returning the encodedQuery which is requested based on action\n\t\t\n        var arrRevoke = [];\n        var arrGrant = [];\n\n\n        new global.GlideQuery('sys_report_users_groups')\n            //.where('user_id', usr)\n            .where('group_id', gs.getProperty('request.report.self_service_group'))\n            .select('report_id')\n            .forEach(function(rep) {\n\n                arrGrant.push(rep.report_id);\n\n            });\n\n        new global.GlideQuery('sys_report_users_groups')\n            .where('user_id', usr)\n            .where('report_id', 'IN', arrGrant)\n            .select('report_id')\n            .forEach(function(rep) {\n\n                arrRevoke.push(rep.report_id);\n\n            });\n\n\n        if (action == 'revoke_access') {\n            return 'sys_idIN' + arrRevoke.toString();\n        } else {\n            return 'sys_idIN' + arrGrant.toString() + '^sys_idNOT IN' + arrRevoke.toString();\n        }\n\n\n    },\n\n    getDashboards: function(usr, action) {\n\n\t\t//function to check the dashboards the user has.\n\t\t//action can be grant/revoke_access\n\t\t//returning the encodedQuery which is requested based on action\n\t\t\n        var arrRevoke = [];\n        var arrGrant = [];\n\n\n        new global.GlideQuery('pa_dashboards_permissions')\n            .where('group', gs.getProperty('request.report.self_service_group'))\n            .select('dashboard', 'user')\n            .forEach(function(dash) {\n\n                arrGrant.push(dash.dashboard);\n            });\n\n        new global.GlideQuery('pa_dashboards_permissions')\n            .where('user', usr)\n            .where('dashboard', 'IN', arrGrant)\n            .select('dashboard')\n            .forEach(function(dash) {\n\n                arrRevoke.push(dash.dashboard);\n\n            });\n\n\n\n        if (action == 'revoke_access') {\n            return 'sys_idIN' + arrRevoke.toString();\n        } else {\n            return 'sys_idIN' + arrGrant.toString() + '^sys_idNOT IN' + arrRevoke.toString();\n        }\n\n\n\n    },\n\n    reportFromPA: function(action, dashboardId, usr) {\n\n        var arrTabs = [];\n        var arrPAReports = [];\n        //Look up the tab's pages\n        var dt = new GlideRecord('pa_m2m_dashboard_tabs');\n        dt.addQuery('dashboard', dashboardId);\n        dt.query();\n        while (dt.next()) {\n            arrTabs.push(dt.tab.page);\n\n        }\n        //now we can query the portal preferences\n        new global.GlideQuery('sys_portal_preferences')\n            .where('portal_section.page', 'IN', arrTabs)\n            .where('name', 'sys_id')\n            .select('value')\n            .forEach(function(portalPref) {\n\n                arrPAReports.push(portalPref.value);\n            });\n\n\n        if (action == 'grant_access') {\n\n            //create a new record for each of them to be added to there\n            for (var i = 0; i < arrPAReports.length; i++) {\n\n                new global.GlideQuery('sys_report_users_groups')\n                    .insert({\n                        report_id: arrPAReports[i],\n                        user_id: usr.getValue('sys_id'),\n                    });\n            }\n        } else {\n\t\t\t\n\t\t\t//Remove the reports for the user and the reports that were granted\n\n            new global.GlideQuery('sys_report_users_groups')\n                .where('user_id', usr.getValue('sys_id'))\n                .where('report_id', 'IN', arrPAReports)\n                .deleteMultiple();\n\n\n\n        }\n\n    },\n\n    getFieldDataFromRecord: function(t,f,r) {\n        //Generic function to receive a table and sys_id, and receive the value of the field submitted from it\n        //Used in Client side functions\n        //Example:\n        //ga.addParam('sysparm_tbl','sys_user');\n        //ga.addParam('sysparm_rec','sysid');\n        //ga.addParam('sysparm_fld','manager');\n        //result: => returns the user's manager's sys_id\n\n        var tbl = t ||  this.getParameter('sysparm_tbl') + '';\n        var fld = f || this.getParameter('sysparm_fld') + '';\n        var recID = r || this.getParameter('sysparm_rec') + '';\n\n\t\t\n\t\t\n        var grRec = new GlideRecord(tbl);\n        grRec.get(recID);\n        return this.dotwalk(grRec, fld);\n    },\n\t\n\tdoesRecordExist: function(t,e){\n\t\t\n\t\tvar tbl = t || this.getParameter('sysparm_tbl');\n\t\tvar encQuery = e || this.getParameter('sysparm_query');\n\t\t\n\t\tvar grRec = new GlideRecord(tbl);\n\t\tgrRec.addEncodedQuery(encQuery);\n\t\tgrRec.query();\n\t\treturn grRec.hasNext();\n\t\t\n\t},\n\t\n\n    dotwalk: function(gr, path) {\n        //dotwalk function. possible to retrieve a string and be able to get the dotwalked value back from that path.\n        //usage: this.dotwalk(current,'manager.active');\n        //returns 'sys_id from the payment_related_to field';\n\n        var el = path.split('.').reduce(function(a, b) {\n            return a[b];\n        }, gr);\n\n        return el + \"\";\n    },\n\n\n\n\n\n    type: 'u_CatalogAjax'\n});\n\"\"\"\nExplain this Script Include like I'm five years old in the form of a list.\n1.","action":"explain","response":" The u_CatalogAjax script include is used to get information about a user from the sys_user table.\n\n2. The script include has a function called ajaxFunction_getUserDetails which queries the sys_user table for the user's mobile phone, email, location, and manager.\n\n3. The script include also has functions for getting reports and dashboards for a user. These functions return an encoded query which can be used to query the sys_report and sys_dashboard tables.\n\n4. The reportFromPA function is used to grant or revoke access to reports for a user based on the reports that are associated with a dashboard.\n\n5. The getFieldDataFromRecord function is used to retrieve a field value from a record.\n\n6. The dotwalk function is used to retrieve a field value from a record using a dotted path."},
{"cuid":"clda3m25d000arg24n8qezm3y","createdAt":"2023-01-24 10:32:26.21","updatedAt":"2023-01-24 10:32:31.395","userCuid":"cld9unimw002fucgu0w461qd6","prompt":"Update this code based following this prompt, \"Add that priority is set to 1\": (function executeRule(current, previous /*null when async*/ ) {\n\n\n    var ci = current.configuration_item || current.cmdb_ci;\n\n    if (current.cmdb_ci.sys_class_name == 'cmdb_ci_service_discovered' || current.configuration_item.sys_class_name == 'cmdb_ci_service_discovered') {\n        current.setValue('u_affected_application', ci);\n    } else {\n\n\n        var affAppl = new u_taskAjax().getValuesFromQuery('cmdb_rel_ci', 'child=' + ci + '^parent.sys_class_name=cmdb_ci_service_discovered^parent.ref_cmdb_ci_service.service_classification=Application Service', 'parent');\n\n        if (affAppl.length > 0) {\n            current.setValue('u_affected_application', affAppl[0]);\n        } else {\n            current.setValue('u_affected_application', '');\n        }\n    }\n\n})(current, previous); ```","action":"edit","response":"\n\n(function executeRule(current, previous /*null when async*/ ) {\n\n\n    var ci = current.configuration_item || current.cmdb_ci;\n\n    if (current.cmdb_ci.sys_class_name == 'cmdb_ci_service_discovered' || current.configuration_item.sys_class_name == 'cmdb_ci_service_discovered') {\n        current.setValue('u_affected_application', ci);\n    } else {\n\n\n        var affAppl = new u_taskAjax().getValuesFromQuery('cmdb_rel_ci', 'child=' + ci + '^parent.sys_class_name=cmdb_ci_service_discovered^parent.ref_cmdb_ci_service.service_classification=Application Service', 'parent');\n\n        if (affAppl.length > 0) {\n            current.setValue('u_affected_application', affAppl[0]);\n        } else {\n            current.setValue('u_affected_application', '');\n        }\n    }\n\n})(current, previous);"},
{"cuid":"clda3mf5a000erg24pk1f6ac1","createdAt":"2023-01-24 10:32:43.055","updatedAt":"2023-01-24 10:32:51.696","userCuid":"cld9unimw002fucgu0w461qd6","prompt":"Update this code based following this prompt, \"Add that priority is set to 1\": (function executeRule(current, previous /*null when async*/ ) {\n\n\n    var ci = current.configuration_item || current.cmdb_ci;\n\n    if (current.cmdb_ci.sys_class_name == 'cmdb_ci_service_discovered' || current.configuration_item.sys_class_name == 'cmdb_ci_service_discovered') {\n        current.setValue('u_affected_application', ci);\n    } else {\n\n\n        var affAppl = new u_taskAjax().getValuesFromQuery('cmdb_rel_ci', 'child=' + ci + '^parent.sys_class_name=cmdb_ci_service_discovered^parent.ref_cmdb_ci_service.service_classification=Application Service', 'parent');\n\n        if (affAppl.length > 0) {\n            current.setValue('u_affected_application', affAppl[0]);\n        } else {\n            current.setValue('u_affected_application', '');\n        }\n    }\n\n})(current, previous);\n// Generated by scribe.monster ```","action":"edit","response":"\n(function executeRule(current, previous /*null when async*/ ) {\n\n\n    var ci = current.configuration_item || current.cmdb_ci;\n\n    if (current.cmdb_ci.sys_class_name == 'cmdb_ci_service_discovered' || current.configuration_item.sys_class_name == 'cmdb_ci_service_discovered') {\n        current.setValue('u_affected_application', ci);\n    } else {\n\n\n        var affAppl = new u_taskAjax().getValuesFromQuery('cmdb_rel_ci', 'child=' + ci + '^parent.sys_class_name=cmdb_ci_service_discovered^parent.ref_cmdb_ci_service.service_classification=Application Service', 'parent');\n\n        if (affAppl.length > 0) {\n            current.setValue('u_affected_application', affAppl[0]);\n        } else {\n            current.setValue('u_affected_application', '');\n        }\n    }\n\n})(current, previous);"},
{"cuid":"clda3mv4s000irg24m54vwgoj","createdAt":"2023-01-24 10:33:03.772","updatedAt":"2023-01-24 10:33:05.207","userCuid":"cld9unimw002fucgu0w461qd6","prompt":"(function executeRule(current, previous /*null when async*/ ) {\n\n\n    var ci = current.configuration_item || current.cmdb_ci;\n\n    if (current.cmdb_ci.sys_class_name == 'cmdb_ci_service_discovered' || current.configuration_item.sys_class_name == 'cmdb_ci_service_discovered') {\n        current.setValue('u_affected_application', ci);\n    } else {\n\n\n        var affAppl = new u_taskAjax().getValuesFromQuery('cmdb_rel_ci', 'child=' + ci + '^parent.sys_class_name=cmdb_ci_service_discovered^parent.ref_cmdb_ci_service.service_classification=Application Service', 'parent');\n\n        if (affAppl.length > 0) {\n            current.setValue('u_affected_application', affAppl[0]);\n        } else {\n            current.setValue('u_affected_application', '');\n        }\n    }\n\n})(current, previous);\n// Generated by scribe.monster\n\"\"\"\ncurrent is tied to the sys_script record.\nExplain it like I'm five years old in the form of a list.\n1.","action":"explain","response":" Set the affected application field to the CI when cmdb_ci_service_discovered is the CI.\n2. Set the affected application field to the CI when cmdb_ci_service_discovered is the CI.\n3. If the CI is not cmdb_ci_service_discovered, set the affected application field to the parent CI."},
{"cuid":"clda83uvw000qrg24q3weef5z","createdAt":"2023-01-24 12:38:15.069","updatedAt":"2023-01-24 12:38:20.014","userCuid":"cld9unimy004nucguaztp3w62","prompt":"(function executeRule(current, previous /*null when async*/ ) {\n\n    if (!multipleTasks()) {\n        var sys_id = current.getUniqueValue();\n\n\n        var scTaskGR = new GlideRecord('sc_task');\n        scTaskGR.addActiveQuery();\n        scTaskGR.addQuery('request_item', sys_id);\n        scTaskGR.query();\n\n        if (scTaskGR.hasNext()) {\n\n            var curWN = current.comments.getJournalEntry(1);\n\n            while (scTaskGR.next()) {\n\n                if (scTaskGR.comments.getJournalEntry(1) == '' || curWN.indexOf(scTaskGR.comments.getJournalEntry(1)) < 0) {\n\n                    scTaskGR.comments = curWN.match(/\\n.*/gm).join('').replace(/^\\s*\\n/gm, \"\");\n                    scTaskGR.update();\n                }\n            }\n        }\n    }\n\n    function multipleTasks() {\n        var ga = new GlideAggregate('sc_task');\n        ga.addQuery('request_item', current.sys_id);\n        ga.addAggregate('COUNT');\n        ga.query();\n\n        if (ga.next()) {\n            if (ga.getAggregate('COUNT') > 1) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n    }\n})(current, previous);\n\"\"\"\ncurrent is tied to the sys_script record.\nExplain it like I'm five years old in the form of a list.\n1.","action":"explain","response":" If there are multiple tasks, exit the script.\n2. Get the sys_id of the current record.\n3. Query the sc_task table for active tasks with a request_item that matches the sys_id from step 2.\n4. If there are no tasks, exit the script.\n5. Get the first journal entry from the current record.\n6. For each task from step 3:\n    If the first journal entry from the task is blank or does not match the entry from step 5:\n    Update the task's first journal entry with the entry from step 5."},
{"cuid":"clda9w509001hrg24restfpzt","createdAt":"2023-01-24 13:28:14.169","updatedAt":"2023-01-24 13:28:20.279","userCuid":"clda9pymq0016rg24ck7953tp","prompt":"Update this code based following this prompt, \"change script include name to RunSensorActionss\": function runSensorAction(actionName, systemGUID)\n{\n\tvar ga = new GlideAjax('RunSensorAction');\n\tga.addParam('sysparm_name', 'runAction');\n\tga.addParam('sysparam_actionname', actionName);\n\tga.addParam('sysparam_systemguid', systemGUID);\n\tga.getXML(alertActionComplete);\n}\nfunction alertActionComplete(response)\n{\n\tvar answer = response.responseXML.documentElement.getAttribute(\"answer\");\n} ```","action":"edit","response":"\n\nfunction runSensorAction(actionName, systemGUID)\n{\n\tvar ga = new GlideAjax('RunSensorActionss');\n\tga.addParam('sysparm_name', 'runAction');\n\tga.addParam('sysparam_actionname', actionName);\n\tga.addParam('sysparam_systemguid', systemGUID);\n\tga.getXML(alertActionComplete);\n}\nfunction alertActionComplete(response)\n{\n\tvar answer = response.responseXML.documentElement.getAttribute(\"answer\");\n}"},
{"cuid":"clda8f1fs000urg24s2i0sf92","createdAt":"2023-01-24 12:46:56.776","updatedAt":"2023-01-24 12:47:00.97","userCuid":"cld9unimw002fucgu0w461qd6","prompt":"function onClick(g_form) {\n    showFields().then(\n        process\n    );\n\n    function showFields() {\n        return g_modal.showFields({\n            title: 'Enter Comment and Reversal Document',\n            fields: [{\n                    type: 'string',\n                    name: 'comment',\n                    label: 'Reason:',\n                    mandatory: true\n                },\n                {\n                    type: 'string',\n                    name: 'reversal_document',\n                    label: 'Reversal Document Number:',\n                    mandatory: true\n                }\n            ],\n            size: 'lg'\n        });\n    }\n\n    function process(fieldValues) {\n        var comment = fieldValues.updatedFields[0].value;\n        var rd = fieldValues.updatedFields[1].value;\n\n        var patternCorrelation = /^\\d{9,10}$/; //check exactly 10 digits\n        var isValidCorrelation = patternCorrelation.test(rd.trim());\n\t\t\n\t\t\n        if (isValidCorrelation) {\n            g_form.setValue('reversal_document', rd.trim());\n            g_form.setValue('comments', comment);\n            g_form.setValue('state', \"4\");\n            g_form.save();\n        } else {\n            alert('Please add the correct 9 or 10 digit number from the ERP system');\n            showFields()\n                .then(process);\n\n        }\n    }\n}\n\"\"\"\nExplain the above code step-by-step in simple english.","action":"explain","response":"\n\n\n\nThe above code is a function that shows a form with two fields, 'comment' and 'reversal_document', and then processes the input from those fields. If the inputted 'reversal_document' is 9 or 10 digits long, it sets the corresponding field in the form to that value and saves the form. If the inputted 'reversal_document' is not 9 or 10 digits long, it displays an error message and asks the user to try again."},
{"cuid":"clda9a5sp0010rg24pltrlvwc","createdAt":"2023-01-24 13:11:08.761","updatedAt":"2023-01-24 13:11:09.942","userCuid":"clda98blt000yrg24u6q8gp7t","prompt":"\n// Prompt: Create a script that sets the assignment group to the Manager's group if the priority is 1.\n(function executeRule(current, previous) {\n    if (current.getValue('priority', '1')) {\n        current.setValue('group', current.manager.group + '');\n    }\n})(current, previous);\n// Prompt: when status changes, if closed, set active to false\n(function executeRule(current, previous) {\n    // condition current.status.changes()\n    if (current.status == 'closed_created' || current.status == 'closed_duplicate' || current.status == 'closed_invalid') {\n        current.active = false;\n    } else {\n        current.active = true;\n    }\n})(current, previous);\n// Prompt: when change request changes, set parent to change request\n(function executeRule(current, previous) {\n    // condition current.change_request.changes()\n    current.parent = current.change_request;\n})(current, previous);\n// Prompt: do not allow changes to others delegates\n(function executeRule(current, previous) {\n    // condition current.user != gs.getUserID() && !gs.hasRole('admin')\n    gs.addInfoMessage(gs.getMessage(\"Cannot assign or modify other users' Delegates\"));\n    current.setAbortAction(true);\n})(current, previous);\n// Prompt: get the bot icon for slack, and set it from the response\n(function executeRule(current, previous) {\n    try {\n        var req = new sn_ws.RESTMessageV2();\n        req.setEndpoint('https://slack.com/api/team.info');\n        req.setHttpMethod('get');\n        var e = new GlideEncryptionUtil();\n        var authToken = e.getClearPassword2('token_verification', 'token', current.provider_auth.outbound_message_creation);\n        if (JSUtil.notNil(authToken))\n            req.setRequestHeader('Authorization', 'Bearer ' + authToken);\n        var resp = req.execute();\n        var team_icon = JSON.parse(resp.getBody()).team.icon.image_88;\n        current.setValue(\"icon\", team_icon);\n    } catch (ex) {\n        gs.error('Error getting slack team info: ' + ex.getMessage());\n    }\n})(current, previous);\n// Prompt: when the start and end dates change, only allow dates where the start is before the end\n(function executeRule(current, previous) {\n    // condition current.start_date.changes() || current.end_date.changes()\n    if (!current.start_date.nil() && !current.end_date.nil() && current.start_date > current.end_date) {\n        current.setAbortAction(true);\n        gs.addErrorMessage(gs.getMessage(\"The start date cannot be after the end date\"));\n    }\n})(current, previous);\n// Prompt: when the date changes is empty, format it in the star trek format (YYYY.ElapsedDays) and set it in the star date field\n(function executeRule(current, previous) {\n    // condition current.date.changes()\n    if (!current.date.nil()) {\n        var date = new GlideDateTime(current.date);\n        var year = date.getYear();\n        var elapsedDays = date.getElapsed(date.getNumericValue());\n        current.star_date = year + '.' + elapsedDays;\n    }\n})(current, previous);\n// Prompt: deactivate all incidents with high priority\n","action":"complete","response":"(function executeRule(current, previous) {\n    // condition current.priority == '4 - High'\n    current.active = false;\n})(current, previous);\n"},
{"cuid":"clda9r9sn0018rg24nc28d71c","createdAt":"2023-01-24 13:24:27.096","updatedAt":"2023-01-24 13:24:32.172","userCuid":"clda9pymq0016rg24ck7953tp","prompt":"function runSensorAction(actionName, systemGUID)\n{\n\tvar ga = new GlideAjax('RunSensorAction');\n\tga.addParam('sysparm_name', 'runAction');\n\tga.addParam('sysparam_actionname', actionName);\n\tga.addParam('sysparam_systemguid', systemGUID);\n\tga.getXML(alertActionComplete);\n}\nfunction alertActionComplete(response)\n{\n\tvar answer = response.responseXML.documentElement.getAttribute(\"answer\");\n}\n\"\"\"\nThe na function runs on the form.\nExplain it like I'm five years old in the form of a list.\n1.","action":"explain","response":" na is a function.\n2. na takes two parameters - actionName and systemGUID.\n3. na creates a new GlideAjax object.\n4. na adds a parameter to the GlideAjax object for the name of the action to run.\n5. na adds a parameter to the GlideAjax object for the system GUID.\n6. na gets the XML from the GlideAjax object.\n7. na calls the alertActionComplete function.\n8. The alertActionComplete function takes the response from the GlideAjax object and displays an alert message."},
{"cuid":"clda9tirl001brg241oh9gqdb","createdAt":"2023-01-24 13:26:12.033","updatedAt":"2023-01-24 13:26:16.69","userCuid":"clda9pymq0016rg24ck7953tp","prompt":"Update this code based following this prompt, \"script include name to RunSensorActions\": function runSensorAction(actionName, systemGUID)\n{\n\tvar ga = new GlideAjax('RunSensorAction');\n\tga.addParam('sysparm_name', 'runAction');\n\tga.addParam('sysparam_actionname', actionName);\n\tga.addParam('sysparam_systemguid', systemGUID);\n\tga.getXML(alertActionComplete);\n}\nfunction alertActionComplete(response)\n{\n\tvar answer = response.responseXML.documentElement.getAttribute(\"answer\");\n} ```","action":"edit","response":"\n\nfunction runSensorAction(actionName, systemGUID)\n{\n\tvar ga = new GlideAjax('RunSensorAction');\n\tga.addParam('sysparm_name', 'runAction');\n\tga.addParam('sysparam_actionname', actionName);\n\tga.addParam('sysparam_systemguid', systemGUID);\n\tga.getXML(alertActionComplete);\n}\nfunction alertActionComplete(response)\n{\n\tvar answer = response.responseXML.documentElement.getAttribute(\"answer\");\n}"},
{"cuid":"clda9v9e1001erg24vsg58gp9","createdAt":"2023-01-24 13:27:33.194","updatedAt":"2023-01-24 13:27:37.784","userCuid":"clda9pymq0016rg24ck7953tp","prompt":"Update this code based following this prompt, \"change script include name to RunSensorActionss\": function runSensorAction(actionName, systemGUID)\n{\n\tvar ga = new GlideAjax('RunSensorAction');\n\tga.addParam('sysparm_name', 'runAction');\n\tga.addParam('sysparam_actionname', actionName);\n\tga.addParam('sysparam_systemguid', systemGUID);\n\tga.getXML(alertActionComplete);\n}\nfunction alertActionComplete(response)\n{\n\tvar answer = response.responseXML.documentElement.getAttribute(\"answer\");\n}\n// Generated by scribe.monster ```","action":"edit","response":"\nfunction runSensorAction(actionName, systemGUID)\n{\n\tvar ga = new GlideAjax('RunSensorAction');\n\tga.addParam('sysparm_name', 'runAction');\n\tga.addParam('sysparam_actionname', actionName);\n\tga.addParam('sysparam_systemguid', systemGUID);\n\tga.getXML(alertActionComplete);\n}\nfunction alertActionComplete(response)\n{\n\tvar answer = response.responseXML.documentElement.getAttribute(\"answer\");\n}"},
{"cuid":"cldaqq5k6003arg24geb9t9n6","createdAt":"2023-01-24 21:19:28.422","updatedAt":"2023-01-24 21:19:40.762","userCuid":"cld9unimy004pucgu4tff4xl2","prompt":"Write the code Servicenow Discovery probe for Cisco ip phone\n\n\n\n","action":"ask","response":"\n\n// Create a new Discovery probe on the ServiceNow instance\nvar probe = new GlideProbe('Cisco_IP_Phone_Discovery');\n\n// Set the probe name and description\nprobe.setName('Cisco IP Phone Discovery');\nprobe.setDescription('This probe will discover Cisco IP phones on the network.');\n\n// Add the necessary probe parameters\nprobe.addParameter({name: 'IP Address', type: 'string'});\nprobe.addParameter({name: 'Username', type: 'string'});\nprobe.addParameter({name: 'Password', type: 'string'});\n\n// Set the script variables for the probe\nvar script = 'cisco-discovery.sh';\nvar language = 'bash';\n\n// Set the script and language for the probe\nprobe.setScript(script, language);\n\n// Activate the probe\nprobe.setActive(true);"},
{"cuid":"cldab9x4w001lrg241ktbby8t","createdAt":"2023-01-24 14:06:56.769","updatedAt":"2023-01-24 14:06:58.099","userCuid":"cld9unimy004rucgu43rhddbm","prompt":"\n// Prompt: Create a script that sets the assignment group to the Manager's group if the priority is 1.\n(function executeRule(current, previous) {\n    if (current.getValue('priority', '1')) {\n        current.setValue('group', current.manager.group + '');\n    }\n})(current, previous);\n// Prompt: when status changes, if closed, set active to false\n(function executeRule(current, previous) {\n    // condition current.status.changes()\n    if (current.status == 'closed_created' || current.status == 'closed_duplicate' || current.status == 'closed_invalid') {\n        current.active = false;\n    } else {\n        current.active = true;\n    }\n})(current, previous);\n// Prompt: when change request changes, set parent to change request\n(function executeRule(current, previous) {\n    // condition current.change_request.changes()\n    current.parent = current.change_request;\n})(current, previous);\n// Prompt: do not allow changes to others delegates\n(function executeRule(current, previous) {\n    // condition current.user != gs.getUserID() && !gs.hasRole('admin')\n    gs.addInfoMessage(gs.getMessage(\"Cannot assign or modify other users' Delegates\"));\n    current.setAbortAction(true);\n})(current, previous);\n// Prompt: get the bot icon for slack, and set it from the response\n(function executeRule(current, previous) {\n    try {\n        var req = new sn_ws.RESTMessageV2();\n        req.setEndpoint('https://slack.com/api/team.info');\n        req.setHttpMethod('get');\n        var e = new GlideEncryptionUtil();\n        var authToken = e.getClearPassword2('token_verification', 'token', current.provider_auth.outbound_message_creation);\n        if (JSUtil.notNil(authToken))\n            req.setRequestHeader('Authorization', 'Bearer ' + authToken);\n        var resp = req.execute();\n        var team_icon = JSON.parse(resp.getBody()).team.icon.image_88;\n        current.setValue(\"icon\", team_icon);\n    } catch (ex) {\n        gs.error('Error getting slack team info: ' + ex.getMessage());\n    }\n})(current, previous);\n// Prompt: when the start and end dates change, only allow dates where the start is before the end\n(function executeRule(current, previous) {\n    // condition current.start_date.changes() || current.end_date.changes()\n    if (!current.start_date.nil() && !current.end_date.nil() && current.start_date > current.end_date) {\n        current.setAbortAction(true);\n        gs.addErrorMessage(gs.getMessage(\"The start date cannot be after the end date\"));\n    }\n})(current, previous);\n// Prompt: when the date changes is empty, format it in the star trek format (YYYY.ElapsedDays) and set it in the star date field\n(function executeRule(current, previous) {\n    // condition current.date.changes()\n    if (!current.date.nil()) {\n        var date = new GlideDateTime(current.date);\n        var year = date.getYear();\n        var elapsedDays = date.getElapsed(date.getNumericValue());\n        current.star_date = year + '.' + elapsedDays;\n    }\n})(current, previous);\n// Prompt: if state=\"canceled \" set priority to high\n","action":"complete","response":"(function executeRule(current, previous) {\n    // condition current.state.changes()\n    if (current.state == 'canceled') {\n        current.priority = '1';\n    }\n})(current, previous);\n"},
{"cuid":"cldabc3vx001org2419x0p38n","createdAt":"2023-01-24 14:08:38.83","updatedAt":"2023-01-24 14:08:42.636","userCuid":"cld9unimy004rucgu43rhddbm","prompt":"\n// Prompt: Create a script that sets the assignment group to the Manager's group if the priority is 1.\n(function executeRule(current, previous) {\n    if (current.getValue('priority', '1')) {\n        current.setValue('group', current.manager.group + '');\n    }\n})(current, previous);\n// Prompt: when status changes, if closed, set active to false\n(function executeRule(current, previous) {\n    // condition current.status.changes()\n    if (current.status == 'closed_created' || current.status == 'closed_duplicate' || current.status == 'closed_invalid') {\n        current.active = false;\n    } else {\n        current.active = true;\n    }\n})(current, previous);\n// Prompt: when change request changes, set parent to change request\n(function executeRule(current, previous) {\n    // condition current.change_request.changes()\n    current.parent = current.change_request;\n})(current, previous);\n// Prompt: do not allow changes to others delegates\n(function executeRule(current, previous) {\n    // condition current.user != gs.getUserID() && !gs.hasRole('admin')\n    gs.addInfoMessage(gs.getMessage(\"Cannot assign or modify other users' Delegates\"));\n    current.setAbortAction(true);\n})(current, previous);\n// Prompt: get the bot icon for slack, and set it from the response\n(function executeRule(current, previous) {\n    try {\n        var req = new sn_ws.RESTMessageV2();\n        req.setEndpoint('https://slack.com/api/team.info');\n        req.setHttpMethod('get');\n        var e = new GlideEncryptionUtil();\n        var authToken = e.getClearPassword2('token_verification', 'token', current.provider_auth.outbound_message_creation);\n        if (JSUtil.notNil(authToken))\n            req.setRequestHeader('Authorization', 'Bearer ' + authToken);\n        var resp = req.execute();\n        var team_icon = JSON.parse(resp.getBody()).team.icon.image_88;\n        current.setValue(\"icon\", team_icon);\n    } catch (ex) {\n        gs.error('Error getting slack team info: ' + ex.getMessage());\n    }\n})(current, previous);\n// Prompt: when the start and end dates change, only allow dates where the start is before the end\n(function executeRule(current, previous) {\n    // condition current.start_date.changes() || current.end_date.changes()\n    if (!current.start_date.nil() && !current.end_date.nil() && current.start_date > current.end_date) {\n        current.setAbortAction(true);\n        gs.addErrorMessage(gs.getMessage(\"The start date cannot be after the end date\"));\n    }\n})(current, previous);\n// Prompt: when the date changes is empty, format it in the star trek format (YYYY.ElapsedDays) and set it in the star date field\n(function executeRule(current, previous) {\n    // condition current.date.changes()\n    if (!current.date.nil()) {\n        var date = new GlideDateTime(current.date);\n        var year = date.getYear();\n        var elapsedDays = date.getElapsed(date.getNumericValue());\n        current.star_date = year + '.' + elapsedDays;\n    }\n})(current, previous);\n// Prompt: call a rest message to check weather of today\n","action":"complete","response":"(function executeRule(current, previous) {\n    try {\n        var req = new sn_ws.RESTMessageV2();\n        req.setEndpoint('https://api.openweathermap.org/data/2.5/weather');\n        req.setHttpMethod('get');\n        var queryParams = new sn_ws.WSProperties();\n        queryParams.setProperty('q', 'San Francisco');\n        queryParams.setProperty('appid', 'c5a6a8b6e9f6e5c2a5d3c25c7660e6d8');\n        req.setQueryParameters(queryParams);\n        var e = new GlideEncryptionUtil();\n        var authToken = e.getClearPassword2('token_verification', 'token', current.provider_auth.outbound_message_creation);\n        if (JSUtil.notNil(authToken))\n            req.setRequestHeader('Authorization', 'Bearer ' + authToken);\n        var resp = req.execute();\n        var weather = JSON.parse(resp.getBody());\n        var weatherToday = weather.weather[0].main;\n        current.setValue(\"weather_today\", weatherToday);\n    } catch (ex) {\n        gs.error('Error getting weather: ' + ex.getMessage());\n    }\n})(current, previous);\n"},
{"cuid":"cldabj0lv001rrg243w1d9cp3","createdAt":"2023-01-24 14:14:01.172","updatedAt":"2023-01-24 14:14:03.242","userCuid":"cld9unimy004rucgu43rhddbm","prompt":"\n// Prompt: Create a script that sets the assignment group to the Manager's group if the priority is 1.\n(function executeRule(current, previous) {\n    if (current.getValue('priority', '1')) {\n        current.setValue('group', current.manager.group + '');\n    }\n})(current, previous);\n// Prompt: when status changes, if closed, set active to false\n(function executeRule(current, previous) {\n    // condition current.status.changes()\n    if (current.status == 'closed_created' || current.status == 'closed_duplicate' || current.status == 'closed_invalid') {\n        current.active = false;\n    } else {\n        current.active = true;\n    }\n})(current, previous);\n// Prompt: when change request changes, set parent to change request\n(function executeRule(current, previous) {\n    // condition current.change_request.changes()\n    current.parent = current.change_request;\n})(current, previous);\n// Prompt: do not allow changes to others delegates\n(function executeRule(current, previous) {\n    // condition current.user != gs.getUserID() && !gs.hasRole('admin')\n    gs.addInfoMessage(gs.getMessage(\"Cannot assign or modify other users' Delegates\"));\n    current.setAbortAction(true);\n})(current, previous);\n// Prompt: get the bot icon for slack, and set it from the response\n(function executeRule(current, previous) {\n    try {\n        var req = new sn_ws.RESTMessageV2();\n        req.setEndpoint('https://slack.com/api/team.info');\n        req.setHttpMethod('get');\n        var e = new GlideEncryptionUtil();\n        var authToken = e.getClearPassword2('token_verification', 'token', current.provider_auth.outbound_message_creation);\n        if (JSUtil.notNil(authToken))\n            req.setRequestHeader('Authorization', 'Bearer ' + authToken);\n        var resp = req.execute();\n        var team_icon = JSON.parse(resp.getBody()).team.icon.image_88;\n        current.setValue(\"icon\", team_icon);\n    } catch (ex) {\n        gs.error('Error getting slack team info: ' + ex.getMessage());\n    }\n})(current, previous);\n// Prompt: when the start and end dates change, only allow dates where the start is before the end\n(function executeRule(current, previous) {\n    // condition current.start_date.changes() || current.end_date.changes()\n    if (!current.start_date.nil() && !current.end_date.nil() && current.start_date > current.end_date) {\n        current.setAbortAction(true);\n        gs.addErrorMessage(gs.getMessage(\"The start date cannot be after the end date\"));\n    }\n})(current, previous);\n// Prompt: when the date changes is empty, format it in the star trek format (YYYY.ElapsedDays) and set it in the star date field\n(function executeRule(current, previous) {\n    // condition current.date.changes()\n    if (!current.date.nil()) {\n        var date = new GlideDateTime(current.date);\n        var year = date.getYear();\n        var elapsedDays = date.getElapsed(date.getNumericValue());\n        current.star_date = year + '.' + elapsedDays;\n    }\n})(current, previous);\n// Prompt: call an ajax call\n","action":"complete","response":"(function executeRule(current, previous) {\n    // condition current.name.changes()\n    if (current.name.nil()) {\n        current.setAbortAction(true);\n        gs.addErrorMessage(gs.getMessage(\"You must enter a name\"));\n    } else {\n        var req = new sn_ws.RESTMessageV2();\n        req.setEndpoint(current.name);\n        req.setHttpMethod('get');\n        var resp = req.execute();\n        var respBody = resp.getBody();\n        current.name = respBody;\n    }\n})(current, previous);\n"},
{"cuid":"cldabjokv001urg241xe4i1xm","createdAt":"2023-01-24 14:14:32.239","updatedAt":"2023-01-24 14:14:37.228","userCuid":"cld9unimy004rucgu43rhddbm","prompt":"\n// Prompt: Create a script that sets the assignment group to the Manager's group if the priority is 1.\n(function executeRule(current, previous) {\n    if (current.getValue('priority', '1')) {\n        current.setValue('group', current.manager.group + '');\n    }\n})(current, previous);\n// Prompt: when status changes, if closed, set active to false\n(function executeRule(current, previous) {\n    // condition current.status.changes()\n    if (current.status == 'closed_created' || current.status == 'closed_duplicate' || current.status == 'closed_invalid') {\n        current.active = false;\n    } else {\n        current.active = true;\n    }\n})(current, previous);\n// Prompt: when change request changes, set parent to change request\n(function executeRule(current, previous) {\n    // condition current.change_request.changes()\n    current.parent = current.change_request;\n})(current, previous);\n// Prompt: do not allow changes to others delegates\n(function executeRule(current, previous) {\n    // condition current.user != gs.getUserID() && !gs.hasRole('admin')\n    gs.addInfoMessage(gs.getMessage(\"Cannot assign or modify other users' Delegates\"));\n    current.setAbortAction(true);\n})(current, previous);\n// Prompt: get the bot icon for slack, and set it from the response\n(function executeRule(current, previous) {\n    try {\n        var req = new sn_ws.RESTMessageV2();\n        req.setEndpoint('https://slack.com/api/team.info');\n        req.setHttpMethod('get');\n        var e = new GlideEncryptionUtil();\n        var authToken = e.getClearPassword2('token_verification', 'token', current.provider_auth.outbound_message_creation);\n        if (JSUtil.notNil(authToken))\n            req.setRequestHeader('Authorization', 'Bearer ' + authToken);\n        var resp = req.execute();\n        var team_icon = JSON.parse(resp.getBody()).team.icon.image_88;\n        current.setValue(\"icon\", team_icon);\n    } catch (ex) {\n        gs.error('Error getting slack team info: ' + ex.getMessage());\n    }\n})(current, previous);\n// Prompt: when the start and end dates change, only allow dates where the start is before the end\n(function executeRule(current, previous) {\n    // condition current.start_date.changes() || current.end_date.changes()\n    if (!current.start_date.nil() && !current.end_date.nil() && current.start_date > current.end_date) {\n        current.setAbortAction(true);\n        gs.addErrorMessage(gs.getMessage(\"The start date cannot be after the end date\"));\n    }\n})(current, previous);\n// Prompt: when the date changes is empty, format it in the star trek format (YYYY.ElapsedDays) and set it in the star date field\n(function executeRule(current, previous) {\n    // condition current.date.changes()\n    if (!current.date.nil()) {\n        var date = new GlideDateTime(current.date);\n        var year = date.getYear();\n        var elapsedDays = date.getElapsed(date.getNumericValue());\n        current.star_date = year + '.' + elapsedDays;\n    }\n})(current, previous);\n// Prompt: make an ajax call\n","action":"complete","response":"(function executeRule(current, previous) {\n    // condition current.number.changes()\n    var req = new sn_ws.RESTMessageV2();\n    req.setEndpoint('https://slack.com/api/channels.history');\n    req.setHttpMethod('get');\n    var e = new GlideEncryptionUtil();\n    var authToken = e.getClearPassword2('token_verification', 'token', current.provider_auth.outbound_message_creation);\n    if (JSUtil.notNil(authToken))\n        req.setRequestHeader('Authorization', 'Bearer ' + authToken);\n    req.setRequestHeader('Content-Type', 'application/json;charset=UTF-8');\n    var channel = new GlideRecord('cmdb_channel');\n    channel.addQuery('sys_id', current.channel);\n    channel.query();\n    if (channel.next()) {\n        req.setRequestBody(JSON.stringify({\n            channel: channel.name,\n            latest: current.number\n        }));\n        var resp = req.execute();\n        if (resp.getStatusCode() == 200) {\n            var messages = JSON.parse(resp.getBody()).messages;\n            if (messages.length > 0) {\n                for (var i = 0; i < messages.length; i++) {\n                    if (messages[i].hasOwnProperty('subtype') && messages[i].subtype.toLowerCase() == 'bot_message') {\n                        continue;\n                    }\n                    var message = messages[i];\n                    var record = new GlideRecord('cmdb_channel_message');\n                    record.initialize();\n                    record.channel = current.channel;\n                    record.message = message.text;\n                    record.user = message.user;\n                    record.from_user = message.from_user;\n                    record.created_at = message.ts;\n                    record.is_from_bot = message.hasOwnProperty('subtype') && message.subtype.toLowerCase() == 'bot_message';\n                    record.insert();\n                }\n"},
{"cuid":"cldaceyx1001yrg242c6c1dj5","createdAt":"2023-01-24 14:38:51.973","updatedAt":"2023-01-24 14:38:53.601","userCuid":"cld9unimy0054ucgu34kqd07f","prompt":"\n// Prompt: Create a script that sets the assignment group to the Manager's group if the priority is 1.\n(function executeRule(current, previous) {\n    if (current.getValue('priority', '1')) {\n        current.setValue('group', current.manager.group + '');\n    }\n})(current, previous);\n// Prompt: when status changes, if closed, set active to false\n(function executeRule(current, previous) {\n    // condition current.status.changes()\n    if (current.status == 'closed_created' || current.status == 'closed_duplicate' || current.status == 'closed_invalid') {\n        current.active = false;\n    } else {\n        current.active = true;\n    }\n})(current, previous);\n// Prompt: when change request changes, set parent to change request\n(function executeRule(current, previous) {\n    // condition current.change_request.changes()\n    current.parent = current.change_request;\n})(current, previous);\n// Prompt: do not allow changes to others delegates\n(function executeRule(current, previous) {\n    // condition current.user != gs.getUserID() && !gs.hasRole('admin')\n    gs.addInfoMessage(gs.getMessage(\"Cannot assign or modify other users' Delegates\"));\n    current.setAbortAction(true);\n})(current, previous);\n// Prompt: get the bot icon for slack, and set it from the response\n(function executeRule(current, previous) {\n    try {\n        var req = new sn_ws.RESTMessageV2();\n        req.setEndpoint('https://slack.com/api/team.info');\n        req.setHttpMethod('get');\n        var e = new GlideEncryptionUtil();\n        var authToken = e.getClearPassword2('token_verification', 'token', current.provider_auth.outbound_message_creation);\n        if (JSUtil.notNil(authToken))\n            req.setRequestHeader('Authorization', 'Bearer ' + authToken);\n        var resp = req.execute();\n        var team_icon = JSON.parse(resp.getBody()).team.icon.image_88;\n        current.setValue(\"icon\", team_icon);\n    } catch (ex) {\n        gs.error('Error getting slack team info: ' + ex.getMessage());\n    }\n})(current, previous);\n// Prompt: when the start and end dates change, only allow dates where the start is before the end\n(function executeRule(current, previous) {\n    // condition current.start_date.changes() || current.end_date.changes()\n    if (!current.start_date.nil() && !current.end_date.nil() && current.start_date > current.end_date) {\n        current.setAbortAction(true);\n        gs.addErrorMessage(gs.getMessage(\"The start date cannot be after the end date\"));\n    }\n})(current, previous);\n// Prompt: when the date changes is empty, format it in the star trek format (YYYY.ElapsedDays) and set it in the star date field\n(function executeRule(current, previous) {\n    // condition current.date.changes()\n    if (!current.date.nil()) {\n        var date = new GlideDateTime(current.date);\n        var year = date.getYear();\n        var elapsedDays = date.getElapsed(date.getNumericValue());\n        current.star_date = year + '.' + elapsedDays;\n    }\n})(current, previous);\n// Prompt: when state = 1 set field shortdescription hey\n","action":"complete","response":"(function executeRule(current, previous) {\n    // condition current.state == '1'\n    if (current.state == '1') {\n        current.shortdescription = 'hey';\n    }\n})(current, previous);\n"},
{"cuid":"cldajnxeo0024rg245ohqdzof","createdAt":"2023-01-24 18:01:47.232","updatedAt":"2023-01-24 18:01:49.494","userCuid":"cld9unimw000wucguenaahfdy","prompt":"\n// Prompt: When the caller is set to jace, set the group to cab\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 'jace') { // when the new value is jace\n        g_form.setValue('assignment_group', 'cab'); // set the group to cab, replace w/sysid\n    }\n}\n// Prompt: If the book changes to read, set the date to today.\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n  if (isLoading || newValue === '') { return; }\n  if (newValue == 'read') { // when the new value is read\n    var now = new Date(); // make a variable for today\n    var dateInUserFormat = getDateTimeFromFormat(now, g_user_date_time_format); // get it in the users format\n    g_form.setValue('date', dateInUserFormat); // set the date to today\n  }\n}\n// Prompt: show me the groups the user picked is a member of\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    var userAjax = new GlideAjax('global.UserAjax'); // call the UserAjax Script Include\n    userAjax.addParam('sysparm_name', 'getGroups'); // call the getGroups function\n    userAjax.addParam('sysparm_obj', JSON.stringify({\"userId\": newValue})); // pass in the new value for the user\n    userAjax.getXML(function(response){\n        var responseDocument = response.responseXML.document.Element.getAttribute('answer'); //get the answer\n        var serverObj = JSON.parse(answer); // make it a json object\n        var groups = serverObj.groups.join(', '); // make it a string with commas\n        g_form.addInfoMessage(groupString); // show it on the form\n    })\n}\n// Prompt: when food quantity becomes zero, require reason\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 0) { // when the new value is zero\n        g_form.setMandatory('reason', true);\n    }\n}\n// Prompt: if u_dispatch is true, assignment group should be Level 2 - Field Service Coordination\n    ","action":"complete","response":"function onChange(control, oldValue, newValue, isLoading, isTemplate) {\n        if (isLoading || newValue === '') { return; }\n        if (newValue == true) { // when the new value is true\n            g_form.setValue('assignment_group', 'Level 2 - Field Service Coordination'); // set the group to Level 2 - Field Service Coordination\n        }\n    }"},
{"cuid":"cldajxdl70028rg24j33rj40m","createdAt":"2023-01-24 18:09:08.108","updatedAt":"2023-01-24 18:09:09.673","userCuid":"cld9unimv000kucgu787q7947","prompt":"\n// Prompt: Create a script that sets the assignment group to the Manager's group if the priority is 1.\n(function executeRule(current, previous) {\n    if (current.getValue('priority', '1')) {\n        current.setValue('group', current.manager.group + '');\n    }\n})(current, previous);\n// Prompt: when status changes, if closed, set active to false\n(function executeRule(current, previous) {\n    // condition current.status.changes()\n    if (current.status == 'closed_created' || current.status == 'closed_duplicate' || current.status == 'closed_invalid') {\n        current.active = false;\n    } else {\n        current.active = true;\n    }\n})(current, previous);\n// Prompt: when change request changes, set parent to change request\n(function executeRule(current, previous) {\n    // condition current.change_request.changes()\n    current.parent = current.change_request;\n})(current, previous);\n// Prompt: do not allow changes to others delegates\n(function executeRule(current, previous) {\n    // condition current.user != gs.getUserID() && !gs.hasRole('admin')\n    gs.addInfoMessage(gs.getMessage(\"Cannot assign or modify other users' Delegates\"));\n    current.setAbortAction(true);\n})(current, previous);\n// Prompt: get the bot icon for slack, and set it from the response\n(function executeRule(current, previous) {\n    try {\n        var req = new sn_ws.RESTMessageV2();\n        req.setEndpoint('https://slack.com/api/team.info');\n        req.setHttpMethod('get');\n        var e = new GlideEncryptionUtil();\n        var authToken = e.getClearPassword2('token_verification', 'token', current.provider_auth.outbound_message_creation);\n        if (JSUtil.notNil(authToken))\n            req.setRequestHeader('Authorization', 'Bearer ' + authToken);\n        var resp = req.execute();\n        var team_icon = JSON.parse(resp.getBody()).team.icon.image_88;\n        current.setValue(\"icon\", team_icon);\n    } catch (ex) {\n        gs.error('Error getting slack team info: ' + ex.getMessage());\n    }\n})(current, previous);\n// Prompt: when the start and end dates change, only allow dates where the start is before the end\n(function executeRule(current, previous) {\n    // condition current.start_date.changes() || current.end_date.changes()\n    if (!current.start_date.nil() && !current.end_date.nil() && current.start_date > current.end_date) {\n        current.setAbortAction(true);\n        gs.addErrorMessage(gs.getMessage(\"The start date cannot be after the end date\"));\n    }\n})(current, previous);\n// Prompt: when the date changes is empty, format it in the star trek format (YYYY.ElapsedDays) and set it in the star date field\n(function executeRule(current, previous) {\n    // condition current.date.changes()\n    if (!current.date.nil()) {\n        var date = new GlideDateTime(current.date);\n        var year = date.getYear();\n        var elapsedDays = date.getElapsed(date.getNumericValue());\n        current.star_date = year + '.' + elapsedDays;\n    }\n})(current, previous);\n// Prompt: When the change request is rejected, it should go back to new state\n","action":"complete","response":"(function executeRule(current, previous) {\n    // condition current.state.changes()\n    if (current.state == 'rejected') {\n        current.state = 'new';\n        current.active = true;\n    }\n})(current, previous);\n"},
{"cuid":"cldak0xsw002brg24zcclfqaj","createdAt":"2023-01-24 18:11:54.273","updatedAt":"2023-01-24 18:12:00.212","userCuid":"cld9unimw000wucguenaahfdy","prompt":"if dispatch is true, set assignment group to f3e1717c8771f010fc0321f6cebb3533","action":"complete","response":"\n            //if dispatch is false, set assignment group to f3e1717c8771f010fc0321f6cebb3534\n\n            foreach (var assignment in assignments)\n            {\n                if (assignment.Assignment.groupId == \"f3e1717c8771f010fc0321f6cebb3533\" || assignment.Assignment.groupId == \"f3e1717c8771f010fc0321f6cebb3534\")\n                {\n                    assignment.Assignment.groupId = \"f3e1717c8771f010fc0321f6cebb3534\";\n                    assignment.Assignment.force = true;\n                    assignment.Assignment.teamName = \"\";\n                    assignment.Assignment.teamId = \"\";\n                }\n            }\n\n            //create client\n            var client = new HttpClient();\n\n            //submit request\n            var result = await client.PostAsync(uri, new StringContent(JsonConvert.SerializeObject(assignments), Encoding.UTF8, \"application/json\"));\n\n            //convert response to string\n            var response = result.Content.ReadAsStringAsync();\n\n            //return response\n            return response.Result;\n        }\n\n        /// <summary>\n        /// Gets the list of assignments for a given course.\n        /// </summary>\n        /// <param name=\"course\">The course to get the assignments for.</param>\n        /// <returns>The assignments in a list of Assignment objects.</returns>\n        public async Task<List<Assignment>> GetAssignments(Course course)\n        {\n            //create client\n            var client = new HttpClient();\n\n            //get web request\n            var uri = new Uri(webAPI + \"courses/\" + course.id + \"/assignments?per_page=1000\");\n\n            //submit request\n            string json = await client.GetStringAsync(uri);\n\n            //convert response to list of assignments\n            List<Assignment> assignments = JsonConvert.DeserializeObject<List<Assignment>>(json);\n\n            //return response\n            return assignments;\n        }\n\n        /// <summary>\n        /// Gets"},
{"cuid":"cldakekum002frg24qic4ilub","createdAt":"2023-01-24 18:22:30.671","updatedAt":"2023-01-24 18:22:32.179","userCuid":"cld9unimv000kucgu787q7947","prompt":"\n// Prompt: Create a script that sets the assignment group to the Manager's group if the priority is 1.\n(function executeRule(current, previous) {\n    if (current.getValue('priority', '1')) {\n        current.setValue('group', current.manager.group + '');\n    }\n})(current, previous);\n// Prompt: when status changes, if closed, set active to false\n(function executeRule(current, previous) {\n    // condition current.status.changes()\n    if (current.status == 'closed_created' || current.status == 'closed_duplicate' || current.status == 'closed_invalid') {\n        current.active = false;\n    } else {\n        current.active = true;\n    }\n})(current, previous);\n// Prompt: when change request changes, set parent to change request\n(function executeRule(current, previous) {\n    // condition current.change_request.changes()\n    current.parent = current.change_request;\n})(current, previous);\n// Prompt: do not allow changes to others delegates\n(function executeRule(current, previous) {\n    // condition current.user != gs.getUserID() && !gs.hasRole('admin')\n    gs.addInfoMessage(gs.getMessage(\"Cannot assign or modify other users' Delegates\"));\n    current.setAbortAction(true);\n})(current, previous);\n// Prompt: get the bot icon for slack, and set it from the response\n(function executeRule(current, previous) {\n    try {\n        var req = new sn_ws.RESTMessageV2();\n        req.setEndpoint('https://slack.com/api/team.info');\n        req.setHttpMethod('get');\n        var e = new GlideEncryptionUtil();\n        var authToken = e.getClearPassword2('token_verification', 'token', current.provider_auth.outbound_message_creation);\n        if (JSUtil.notNil(authToken))\n            req.setRequestHeader('Authorization', 'Bearer ' + authToken);\n        var resp = req.execute();\n        var team_icon = JSON.parse(resp.getBody()).team.icon.image_88;\n        current.setValue(\"icon\", team_icon);\n    } catch (ex) {\n        gs.error('Error getting slack team info: ' + ex.getMessage());\n    }\n})(current, previous);\n// Prompt: when the start and end dates change, only allow dates where the start is before the end\n(function executeRule(current, previous) {\n    // condition current.start_date.changes() || current.end_date.changes()\n    if (!current.start_date.nil() && !current.end_date.nil() && current.start_date > current.end_date) {\n        current.setAbortAction(true);\n        gs.addErrorMessage(gs.getMessage(\"The start date cannot be after the end date\"));\n    }\n})(current, previous);\n// Prompt: when the date changes is empty, format it in the star trek format (YYYY.ElapsedDays) and set it in the star date field\n(function executeRule(current, previous) {\n    // condition current.date.changes()\n    if (!current.date.nil()) {\n        var date = new GlideDateTime(current.date);\n        var year = date.getYear();\n        var elapsedDays = date.getElapsed(date.getNumericValue());\n        current.star_date = year + '.' + elapsedDays;\n    }\n})(current, previous);\n// Prompt: Open ticket view on service portal should not show resolved incidents\n","action":"complete","response":"(function executeRule(current, previous) {\n    // condition current.status.changes()\n    if (current.status == 'resolved') {\n        current.active = false;\n    } else {\n        current.active = true;\n    }\n})(current, previous);\n"},
{"cuid":"cldakvs5j002jrg24srd5w13k","createdAt":"2023-01-24 18:35:53.287","updatedAt":"2023-01-24 18:35:58.493","userCuid":"cld9unimv000kucgu787q7947","prompt":"How do i populate logged in user details on a service catalog form","action":"complete","response":"?\n    //Why do we need to do this?\n    private void populateLoggedInUserDetails(HttpServletRequest req) {\n      if (!BaseAuthenticationFilter.isLoggedIn(req)) {\n        return;\n      }\n      User loggedInUser = BaseAuthenticationFilter.getLoggedInUser(req);\n      if (loggedInUser != null) {\n        if (loggedInUser.getDisplayName() != null) {\n          req.setAttribute(\"loggedInUserDisplayName\", loggedInUser.getDisplayName());\n        }\n        if (loggedInUser.getEmail() != null) {\n          req.setAttribute(\"loggedInUserEmail\", loggedInUser.getEmail());\n        }\n        if (loggedInUser.getGivenName() != null) {\n          req.setAttribute(\"loggedInUserGivenName\", loggedInUser.getGivenName());\n        }\n        if (loggedInUser.getFamilyName() != null) {\n          req.setAttribute(\"loggedInUserFamilyName\", loggedInUser.getFamilyName());\n        }\n        if (loggedInUser.getMiddleName() != null) {\n          req.setAttribute(\"loggedInUserMiddleName\", loggedInUser.getMiddleName());\n        }\n        if (loggedInUser.getProfileUrl() != null) {\n          req.setAttribute(\"loggedInUserProfileUrl\", loggedInUser.getProfileUrl());\n        }\n      }\n    }\n\n    //Why do we do this?\n    private void populateLoggedInGoogleUserDetails(HttpServletRequest req) {\n      if (!BaseAuthenticationFilter.isLoggedIn(req)) {\n        return;\n      }\n      User loggedInUser = BaseAuthenticationFilter.getLoggedInUser(req);\n      if (loggedInUser != null) {\n        if (loggedInUser.getDisplayName() != null) {\n          req.setAttribute(\"loggedInUserDisplayName\", loggedInUser.getDisplayName());\n        }\n        if (loggedInUser.getEmail() != null) {\n          req.setAttribute(\"loggedInUserEmail\", loggedInUser"},
{"cuid":"cldalh7dq002mrg2459dsoo6i","createdAt":"2023-01-24 18:52:32.798","updatedAt":"2023-01-24 18:52:34.867","userCuid":"cld9unimv000kucgu787q7947","prompt":"\n// Prompt: Create a script that sets the assignment group to the Manager's group if the priority is 1.\n(function executeRule(current, previous) {\n    if (current.getValue('priority', '1')) {\n        current.setValue('group', current.manager.group + '');\n    }\n})(current, previous);\n// Prompt: when status changes, if closed, set active to false\n(function executeRule(current, previous) {\n    // condition current.status.changes()\n    if (current.status == 'closed_created' || current.status == 'closed_duplicate' || current.status == 'closed_invalid') {\n        current.active = false;\n    } else {\n        current.active = true;\n    }\n})(current, previous);\n// Prompt: when change request changes, set parent to change request\n(function executeRule(current, previous) {\n    // condition current.change_request.changes()\n    current.parent = current.change_request;\n})(current, previous);\n// Prompt: do not allow changes to others delegates\n(function executeRule(current, previous) {\n    // condition current.user != gs.getUserID() && !gs.hasRole('admin')\n    gs.addInfoMessage(gs.getMessage(\"Cannot assign or modify other users' Delegates\"));\n    current.setAbortAction(true);\n})(current, previous);\n// Prompt: get the bot icon for slack, and set it from the response\n(function executeRule(current, previous) {\n    try {\n        var req = new sn_ws.RESTMessageV2();\n        req.setEndpoint('https://slack.com/api/team.info');\n        req.setHttpMethod('get');\n        var e = new GlideEncryptionUtil();\n        var authToken = e.getClearPassword2('token_verification', 'token', current.provider_auth.outbound_message_creation);\n        if (JSUtil.notNil(authToken))\n            req.setRequestHeader('Authorization', 'Bearer ' + authToken);\n        var resp = req.execute();\n        var team_icon = JSON.parse(resp.getBody()).team.icon.image_88;\n        current.setValue(\"icon\", team_icon);\n    } catch (ex) {\n        gs.error('Error getting slack team info: ' + ex.getMessage());\n    }\n})(current, previous);\n// Prompt: when the start and end dates change, only allow dates where the start is before the end\n(function executeRule(current, previous) {\n    // condition current.start_date.changes() || current.end_date.changes()\n    if (!current.start_date.nil() && !current.end_date.nil() && current.start_date > current.end_date) {\n        current.setAbortAction(true);\n        gs.addErrorMessage(gs.getMessage(\"The start date cannot be after the end date\"));\n    }\n})(current, previous);\n// Prompt: when the date changes is empty, format it in the star trek format (YYYY.ElapsedDays) and set it in the star date field\n(function executeRule(current, previous) {\n    // condition current.date.changes()\n    if (!current.date.nil()) {\n        var date = new GlideDateTime(current.date);\n        var year = date.getYear();\n        var elapsedDays = date.getElapsed(date.getNumericValue());\n        current.star_date = year + '.' + elapsedDays;\n    }\n})(current, previous);\n// Prompt: Requestor of the change request should be able to cancel the change request\n","action":"complete","response":"(function executeRule(current, previous) {\n    // condition !current.requestor.nil()\n    // condition !current.requestor.nil() &&  !previous.requestor.nil() && current.requestor.getUniqueValue() == previous.requestor.getUniqueValue()\n    if (current.state == 'canceled') {\n        current.setAbortAction(true);\n        gs.addErrorMessage(gs.getMessage(\"Cannot cancel a change request that has already been canceled\"));\n    }\n})(current, previous);\n"},
{"cuid":"cldaljw6w002prg24xj23bn69","createdAt":"2023-01-24 18:54:38.265","updatedAt":"2023-01-24 18:54:39.618","userCuid":"cld9unimv000kucgu787q7947","prompt":"\n// Prompt: Create a script that sets the assignment group to the Manager's group if the priority is 1.\n(function executeRule(current, previous) {\n    if (current.getValue('priority', '1')) {\n        current.setValue('group', current.manager.group + '');\n    }\n})(current, previous);\n// Prompt: when status changes, if closed, set active to false\n(function executeRule(current, previous) {\n    // condition current.status.changes()\n    if (current.status == 'closed_created' || current.status == 'closed_duplicate' || current.status == 'closed_invalid') {\n        current.active = false;\n    } else {\n        current.active = true;\n    }\n})(current, previous);\n// Prompt: when change request changes, set parent to change request\n(function executeRule(current, previous) {\n    // condition current.change_request.changes()\n    current.parent = current.change_request;\n})(current, previous);\n// Prompt: do not allow changes to others delegates\n(function executeRule(current, previous) {\n    // condition current.user != gs.getUserID() && !gs.hasRole('admin')\n    gs.addInfoMessage(gs.getMessage(\"Cannot assign or modify other users' Delegates\"));\n    current.setAbortAction(true);\n})(current, previous);\n// Prompt: get the bot icon for slack, and set it from the response\n(function executeRule(current, previous) {\n    try {\n        var req = new sn_ws.RESTMessageV2();\n        req.setEndpoint('https://slack.com/api/team.info');\n        req.setHttpMethod('get');\n        var e = new GlideEncryptionUtil();\n        var authToken = e.getClearPassword2('token_verification', 'token', current.provider_auth.outbound_message_creation);\n        if (JSUtil.notNil(authToken))\n            req.setRequestHeader('Authorization', 'Bearer ' + authToken);\n        var resp = req.execute();\n        var team_icon = JSON.parse(resp.getBody()).team.icon.image_88;\n        current.setValue(\"icon\", team_icon);\n    } catch (ex) {\n        gs.error('Error getting slack team info: ' + ex.getMessage());\n    }\n})(current, previous);\n// Prompt: when the start and end dates change, only allow dates where the start is before the end\n(function executeRule(current, previous) {\n    // condition current.start_date.changes() || current.end_date.changes()\n    if (!current.start_date.nil() && !current.end_date.nil() && current.start_date > current.end_date) {\n        current.setAbortAction(true);\n        gs.addErrorMessage(gs.getMessage(\"The start date cannot be after the end date\"));\n    }\n})(current, previous);\n// Prompt: when the date changes is empty, format it in the star trek format (YYYY.ElapsedDays) and set it in the star date field\n(function executeRule(current, previous) {\n    // condition current.date.changes()\n    if (!current.date.nil()) {\n        var date = new GlideDateTime(current.date);\n        var year = date.getYear();\n        var elapsedDays = date.getElapsed(date.getNumericValue());\n        current.star_date = year + '.' + elapsedDays;\n    }\n})(current, previous);\n// Prompt: Requestor on the change request should see the button to cancel the change request raised\n","action":"complete","response":"(function executeRule(current, previous) {\n    if (!current.change_request.nil()) {\n        // condition current.change_request.raised_by == current.user && !current.change_request.isClosed()\n        current.button_template = \"request_cancel_raised.vm\";\n    }\n})(current, previous);\n"},
{"cuid":"cldalyft5002trg24l6ihcqxi","createdAt":"2023-01-24 19:05:56.874","updatedAt":"2023-01-24 19:06:00.421","userCuid":"cld9unimv000kucgu787q7947","prompt":"\n// Prompt: Create a script that sets the assignment group to the Manager's group if the priority is 1.\n(function executeRule(current, previous) {\n    if (current.getValue('priority', '1')) {\n        current.setValue('group', current.manager.group + '');\n    }\n})(current, previous);\n// Prompt: when status changes, if closed, set active to false\n(function executeRule(current, previous) {\n    // condition current.status.changes()\n    if (current.status == 'closed_created' || current.status == 'closed_duplicate' || current.status == 'closed_invalid') {\n        current.active = false;\n    } else {\n        current.active = true;\n    }\n})(current, previous);\n// Prompt: when change request changes, set parent to change request\n(function executeRule(current, previous) {\n    // condition current.change_request.changes()\n    current.parent = current.change_request;\n})(current, previous);\n// Prompt: do not allow changes to others delegates\n(function executeRule(current, previous) {\n    // condition current.user != gs.getUserID() && !gs.hasRole('admin')\n    gs.addInfoMessage(gs.getMessage(\"Cannot assign or modify other users' Delegates\"));\n    current.setAbortAction(true);\n})(current, previous);\n// Prompt: get the bot icon for slack, and set it from the response\n(function executeRule(current, previous) {\n    try {\n        var req = new sn_ws.RESTMessageV2();\n        req.setEndpoint('https://slack.com/api/team.info');\n        req.setHttpMethod('get');\n        var e = new GlideEncryptionUtil();\n        var authToken = e.getClearPassword2('token_verification', 'token', current.provider_auth.outbound_message_creation);\n        if (JSUtil.notNil(authToken))\n            req.setRequestHeader('Authorization', 'Bearer ' + authToken);\n        var resp = req.execute();\n        var team_icon = JSON.parse(resp.getBody()).team.icon.image_88;\n        current.setValue(\"icon\", team_icon);\n    } catch (ex) {\n        gs.error('Error getting slack team info: ' + ex.getMessage());\n    }\n})(current, previous);\n// Prompt: when the start and end dates change, only allow dates where the start is before the end\n(function executeRule(current, previous) {\n    // condition current.start_date.changes() || current.end_date.changes()\n    if (!current.start_date.nil() && !current.end_date.nil() && current.start_date > current.end_date) {\n        current.setAbortAction(true);\n        gs.addErrorMessage(gs.getMessage(\"The start date cannot be after the end date\"));\n    }\n})(current, previous);\n// Prompt: when the date changes is empty, format it in the star trek format (YYYY.ElapsedDays) and set it in the star date field\n(function executeRule(current, previous) {\n    // condition current.date.changes()\n    if (!current.date.nil()) {\n        var date = new GlideDateTime(current.date);\n        var year = date.getYear();\n        var elapsedDays = date.getElapsed(date.getNumericValue());\n        current.star_date = year + '.' + elapsedDays;\n    }\n})(current, previous);\n// Prompt: Members of the assignment group should be automatically added to the watchlist\n","action":"complete","response":"// (function executeRule(current, previous) {\n//     // condition current.group.changes()\n//     var gr = new GlideRecord('u_assignment_group');\n//     gr.addQuery('name', current.group);\n//     gr.query();\n//     if (gr.next()) {\n//         var gr2 = new GlideRecord('sys_user');\n//         gr2.addQuery('active', true);\n//         gr2.addQuery('disabled', false);\n//         gr2.addQuery('u_assignment_group', gr.getUniqueValue());\n//         gr2.query();\n//         while (gr2.next()) {\n//             if (!current.watch_list.contains(gr2.sys_id)) {\n//                 var gr3 = new GlideRecord('sys_user_watchlist');\n//                 gr3.addQuery('table_name', 'u_change_request');\n//                 gr3.addQuery('sys_id', current.change_request);\n//                 gr3.addQuery('sys_user', gr2.sys_id);\n//                 gr3.query();\n//                 if (!gr3.next()) {\n//                     current.watch_list.add(gr2.sys_id);\n//                 }\n//             }\n//         }\n//     }\n// })(current, previous);\n"},
{"cuid":"cldamxhrj002xrg24jer8x7or","createdAt":"2023-01-24 19:33:12.368","updatedAt":"2023-01-24 19:33:17.241","userCuid":"cld9unimy004qucgu962nc2db","prompt":"var app_sys_id = '${sysparm_app_sys_id}';\nvar app_table = '${sysparm_app_table}';\n\n\n\tjQuery(function () {\n\t\tgetAndGenerateContent();\n\t});\n\n\nfunction getAndGenerateContent(){\n\t$j('.asmt a').attr('disabled', true);\n\t$j('.apm-loading').show();\n\trestCall('asmt_custom_processor.do?operation=assessmentsdetails&app_sys_id=' + app_sys_id+'&app_table=' + app_table).done(function (res) {\n\t\tgenerateContent(res);\n\t});\n\n}\n\nfunction reasignToMe(asmt_instance){\n\t$j('.asmt a').attr('disabled', true);\n\t$j('.apm-loading').show();\n\trestCall('asmt_custom_processor.do?operation=reassigntome&app_sys_id=' + app_sys_id + '&asmt_instance=' + asmt_instance ).done(function (res) {\n        generateContent(res);\n\t\tgetAndGenerateContent();\n\t});\n\n}\n\nfunction createAssessment(asmt_type, app_sys_id){\n\t\n\tvar worknotes = $j('#wn'+ asmt_type).val();\n\t$j('.asmt a').attr('disabled', true);\n\t$j('.apm-loading').show();\n\trestCall('asmt_custom_processor.do?operation=createassessmentinstance&app_sys_id=' + app_sys_id + '&asmt_type=' + asmt_type +'&worknotes=' + worknotes).done(function (res) {\n        generateContent(res);\n\t\tgetAndGenerateContent();\n\t});\n}\n\nfunction generateApmScores(){\n\t$j('.asmt a').attr('disabled', true);\n\t$j('.apm-loading').show();\n\trestCall('asmt_custom_processor.do?operation=generateapmscores').done(function (res) {\n        $j('#rspns').html(res.msg).addClass(res.cssclass);\n\t\t$j('.asmt a').attr('disabled', false);\n\t\t$j('.apm-loading').hide();\n\t});\n\n}\n\n\nfunction generateContent(res){   \n    var outp = \"\";\n\tif (!res.status) {\n\t\toutp += '<strong>Record Condition Not Met</strong><br />';\n\t}\n\t\n\t// outp += '<strong>brs</strong><br />'+JSON.stringify(res);\n    for (var asmt_type in res.asmt_metric_type){\n\t\t\n        outp += \"<div class='asmt'><h2>\" + res.asmt_metric_type[asmt_type].name + \n        \" <a href='nav_to.do?uri=asmt_metric_type.do?sys_id=\" +\n        asmt_type.toString() +\n        \"' target='_blank'><span class='icon icon-open-document-new-tab'></span></a> <span class='icon apm-loading icon-loading'></span></h2>\" +\n        \n        generateCategoryDetails(res.asmt_metric_type[asmt_type].asmt_metric_category) +  \"<br />\" +\n        \n\t\tgenerateAssesmentDetails(res.asmt_metric_type[asmt_type].asmt_assessment_instance, asmt_type) + \n\t\t\n\t\tgenerateAssesmentFooter(asmt_type, app_sys_id ,\n\t\t\t\t\t\t\t\tres.asmt_metric_type[asmt_type].asmt_assessment_instance.readyCnt) + \n\n\t\t\"</div>\";\n        \n    }\n\t\n\toutp += addFooter();\n\n    $j('#asmt_content').html(outp);\n\n}\n\n\nfunction generateAssesmentDetails(asmt_instance, asmt_type){\n    var outp = \"<table class='table table-striped'><thead><tr><th>Instance</th><th>Assigned to</th><th>Created</th><th>State</th><th>Action</th></tr><tbody>\";\n    for (var instance in asmt_instance){  \n\t\tif (instance == 'readyCnt') continue;\n        outp += \"<tr><td><a href='asmt_assessment_instance.do?sys_id=\" +  asmt_instance[instance].sys_id + \"' target='asmt'>\"+ asmt_instance[instance].number +\"</a><a href='assessment_take2.do?sysparm_assessable_sysid=\" +  asmt_instance[instance].sys_id + \"&sysparm_reader_view=true' target='asmt_pv'><span class='icon icon-preview' title='Show results'></span></a></td><td>\"+ asmt_instance[instance].user.displayValue +  \n\t\t\"</td><td>\"+ asmt_instance[instance].sys_created_on.displayValue +  \n\t\t\"</td><td>\"+ asmt_instance[instance].state.displayValue;\n\t\tif (asmt_instance[instance].state.value == 'complete') {\n\t\t\toutp += \"<p><strong>\" + Math.ceil(asmt_instance[instance].result.total) +\" / \" + Math.ceil(asmt_instance[instance].result.max) + \"</strong></p>\";\n\t\t} else {\n\t\t\toutp += \"</td><td>\" + generateButton(asmt_instance[instance].sys_id, asmt_type, asmt_instance[instance].user.isAssignee, asmt_instance[instance].state.value);\n\t\t}\n\t\toutp += \"</td></tr>\"; \n    }\n    outp += \"</tbody></table>\";\n    return outp;\n\n}\n\nfunction generateAssesmentFooter(asmt_type,app_sys_id,readyCnt){\n\t\n\tvar outp = \"\";\n\tif (!readyCnt) {\n    //  outp +=   \"<textarea id='wn\"+ asmt_type +\"' style='margin-bottom:10px; overflow: hidden; word-wrap: break-word; resize: none; height: 40px;' class='form-control' placeholder='Reason for new Assessment' ></textarea>\";\n\t outp += \"<a href='javascript:createAssessment(\\\"\" + asmt_type + \"\\\", \\\"\" + app_sys_id + \"\\\")' class='btn btn-info btn-sm '><span class='icon icon-add-circle'></span> Create new Assessment</a>\";\n\t}\n\t\n\treturn outp;\n\t\n\t\n}\n\nfunction generateCategoryDetails(asmt_category){\n\tvar typeMax = 0;\n    var outp = \"<div class='categ'>Categories:</div>\";\n    for (var category in asmt_category){ \n        outp += \"<div class='categ'>&#10687; \" \n        + asmt_category[category].name + \"<span style='font-size:9pt; color:#81878e'> - Weight: \"+ asmt_category[category].weight +\" | Questions: \"+ \n        asmt_category[category].total_metrics +\" | Category Max: \"+asmt_category[category].max_score +\"</span></div>\";  \n\t\ttypeMax += Number(asmt_category[category].max_score);\n    }\n\toutp += \"<div> Total Max Score: <strong>\" + typeMax + \"</strong></div>\"; \n    outp += \"\";\n    return outp;\n\n}\n\nfunction addFooter(){\n\t// with score button\n\t// var outp = \"<div class='asmt'><a href='javascript:getAndGenerateContent()' title='Refresh if you made changes' class='btn btn-primary btn-sm'><span class='icon icon-refresh'></span> Refresh</a> <a href='javascript:generateApmScores()' title='Trigger APM Scheduled job to generate Application scores' class='btn btn-default btn-sm'><span class='icon icon-date-time'></span> Calculate APM Score</a> <span id='rspns'></span></div>\";\n\n// without score button\n\tvar outp = \"<div class='asmt'><a href='javascript:getAndGenerateContent()' title='Refresh if you made changes' class='btn btn-primary btn-sm'><span class='icon icon-refresh'></span> Refresh</a></div>\";\n\tvar outp ='';\n\treturn outp;\n}\n\n\nfunction generateButton(asmt_instance, asmt_type, isAssignee, state){\n    var btn = '';\n    if (state != 'ready') return btn;\n    \n    if (isAssignee){\n        btn = \"<a href='/assessment_take2.do?sysparm_assessable_sysid=\"+ asmt_instance\n        +\"&sysparm_assessable_type=\"+ asmt_type +\"' target='instance' class='btn btn-success btn-sm btn-block'><span class='icon icon-add-circle'></span> Take Assessment</a>\";\n    }\n    else{\n        btn = \"<a href='javascript:reasignToMe(\\\"\"+ asmt_instance +\"\\\")' class='btn btn-info btn-sm btn-block'><span class='icon icon-connect-adduser-sm'></span> Assign to me</a>\";\n    }\n\n    return btn;\n}\n\nfunction restCall(url) { \n\tvar hdrs = {\n\t\t'Cache-Control': 'no-cache',\n\t\t'Accept': 'application/json', \n\t\t'Content-Type': 'application/json'\n\t};\n\tif (g_ck) //only for instances with high security plugin enabled\n\t\thdrs['X-UserToken'] = g_ck;\n\n\trespObj = jQuery.ajax({\n\t\turl: url,\n\t\tmethod: 'GET',\n\t\theaders: hdrs\n\t});\n\treturn respObj;\n}\n\n\nfunction takeAssessment() {\n\tvar theObject = {\n\t\tid    : 'test-id',//seems to be the ui page it uses\n\t\ttitle : 'Take Assessment',//self explanatory\n\t\twidth : '',//self explanatory\n\t\theight: '',//self explanatory\n\t\tdraggable: true,\n\t\tform: 'asmt_instance_result',\n\t\tiframe: '',\n\t\tonAfterLoad: null,//expects a function, see UI Script \"KBViewArticle\" for example\n\t\tonAfterClose: null,//expecs a function, see ui action \"Add\" on cmdb_outage_ci_mtom\n\t\tcloseOnEscape: true,\n\t\tshowClose: true,\n\t\tmessages: \"\",\n\t\tallowOverFlowX: true,\n\t};\n\tvar go = new GlideOverlay(theObject);\n\t// you can also set things...\n\tgo.setBodyFromForm('someuipage');\n\tgo.setPreference('sysparm_error','error msg');\n\tgo.setAfterLoad(null);//expects function\n\tgo.setTitle('Take Assessment');\n\tgo.center();\n\tgo.render();\n\n\t// var bid = new GlideModalForm('Take Assessment','');\n\t// bid.addParm('sysparm_request',g_form.getUniqueValue());\n\t// bid.render();\n\t// bid.setCompletionCallback(refreshForm);\n }\n\n\n\"\"\"\nExplain the above code step-by-step in simple english.","action":"explain","response":"\n\n1. The code above is meant to generate content for a page that displays information about assessments for a particular record.\n\n2. The code first makes a call to the 'asmt_custom_processor' REST API endpoint to get information about the assessments for the record.\n\n3. It then parses the response from the API call and generates HTML to display the information.\n\n4. The code also includes a button to create a new assessment instance, as well as a button to recalculate the APM score for the record."},
{"cuid":"cldaowdg10030rg247ceyqt9p","createdAt":"2023-01-24 20:28:19.346","updatedAt":"2023-01-24 20:28:27.034","userCuid":"cld9unimw001yucgucbtj659g","prompt":"Thanks everyone for your time, here's my actionable notes.\nSomething is switching the model on the asset side causing some devices to become \"computers\" on the configuration item.  The example brought up today was the Chronos Clocks, if we look at the Asset side in the history of the model there should be a clue why this is happening.  I'll take 15 minutes to investigate that.\nThere are servers that are computers and should not be.  I look forward to a list of these to see what we can do correct this, likely related to what's happened in the issue above.\nThe Virtual Machines included many of them have a state of Terminated or Off.  In those cases, we should probably be changing the status to Retired.  I'll follow up with Amanda/Cameron on this.\n\"\"\"\nAbove is a meeting recap.  Please rewrite the above with clear language that easy to understand and read.","action":"ask","response":"\n\nAt today's meeting, we discussed the issue of some devices being incorrectly labeled as \"computers\" in the Configuration Item. It appears that something is causing the model to switch on the Asset side. As an example, the Chronos Clocks were mentioned. To investigate this further, I will take 15 minutes to look at the Asset side history.\n\nWe also discussed servers that are incorrectly labeled as computers. I am looking forward to receiving a list of these so we can take action.\n\nLastly, we discussed Virtual Machines that have a state of Terminated or Off. We should be changing the status of these to Retired. I will follow up with Amanda and Cameron on this."},
{"cuid":"cldaqotak0034rg24pce4je53","createdAt":"2023-01-24 21:18:25.869","updatedAt":"2023-01-24 21:18:29.91","userCuid":"cld9unimy004pucgu4tff4xl2","prompt":"Write Servicenow Discovery prove for Cisco ip phone\n\n\n\n","action":"ask","response":"\n\n1. Create a new Discovery Schedule.\n\n2. Select the “Cisco IP Phone” option under the “Devices” category.\n\n3. Select the “IP Ranges” option and enter the IP address range to be scanned.\n\n4. Configure the Discovery Schedule with the relevant credentials and check the “continuous discovery” option.\n\n5. Run the Discovery Schedule and wait for the scan results.\n\n6. Once the scan is complete, analyze the results and create appropriate CI records in ServiceNow."},
{"cuid":"cldaqpcj40037rg24anes9rnd","createdAt":"2023-01-24 21:18:50.8","updatedAt":"2023-01-24 21:18:54.598","userCuid":"cld9unimy004pucgu4tff4xl2","prompt":"Write Servicenow Discovery probe for Cisco ip phone\n\n\n\n","action":"ask","response":"\n\nThe ServiceNow Discovery probe for a Cisco IP Phone is a custom-built probe designed to identify and map IP Phones on a Cisco network. It uses SNMP to query the Cisco device and detect the IP Address, type, model, and other information related to the phone. It can also detect the specific features and settings of the phone such as the line settings and configuration. Once the data is collected, it can be used to populate the ServiceNow CMDB and provide visibility into the IP Phones on the network."},
{"cuid":"cldas9kck003drg244a0pru25","createdAt":"2023-01-24 22:02:33.668","updatedAt":"2023-01-24 22:02:38.859","userCuid":"cld9unimw000wucguenaahfdy","prompt":"if the field named u_dispatch is true then the assignment group should be changed  to f3e1717c8771f010fc0321f6cebb3533 and copy the configuration item from the incident","action":"complete","response":" to the assignment group\n#if the field named u_dispatch is true then the assignment group should be changed to f3e1717c8771f010fc0321f6cebb3533\n#if the field named u_dispatch is true then the assignment group should be changed to f3e1717c8771f010fc0321f6cebb3533\n#if the field named u_dispatch is true then the assignment group should be changed to f3e1717c8771f010fc0321f6cebb3533\n#if the field named u_dispatch is true then the assignment group should be changed to f3e1717c8771f010fc0321f6cebb3533\n#if the field named u_dispatch is true then the assignment group should be changed to f3e1717c8771f010fc0321f6cebb3533\n#if the field named u_dispatch is true then the assignment group should be changed to f3e1717c8771f010fc0321f6cebb3533\n#if the field named u_dispatch is true then the assignment group should be changed to f3e1717c8771f010fc0321f6cebb3533\n#if the field named u_dispatch is true then the assignment group should be changed to f3e1717c8771f010fc0321f6cebb3533\n#if the field named u_dispatch is true then the assignment group should be changed to f3e1717c8771f010fc0321f6cebb3533\n#if the field named u_dispatch is true then the assignment group should be changed to f3e1717c8771f010fc0321f6cebb3533\n#if the field named u_dispatch is true then the assignment group should be changed to f3e1717c8771f010fc0321f6cebb3533\n#if the field named u_dispatch is true then the assignment group should be changed to f3e1717c8771f010fc0321f6cebb3533\n#if the field named u_dispatch is true then the assignment group should be changed to f3e1717c877"},
{"cuid":"cldasadoi003grg24nhij70uu","createdAt":"2023-01-24 22:03:11.683","updatedAt":"2023-01-24 22:03:17.092","userCuid":"cld9unimw000wucguenaahfdy","prompt":"if the field named u_dispatch is true then the assignment group should be changed  to Level 2 - Field Service Coordination","action":"complete","response":" Office', function () {\n            (0, _chai.expect)(this.assignmentGroupBeforeUpdate).to.equal(this.global.Level2);\n            (0, _chai.expect)(this.assignmentGroupAfterUpdate).to.equal(this.global.Level2_Field);\n        });\n\n        (0, _mocha.it)('if the field named u_dispatch is false then the assignment group should be changed  to Level 2 - Field Service / Service Center', function () {\n            (0, _chai.expect)(this.assignmentGroupBeforeUpdate).to.equal(this.global.Level2);\n            (0, _chai.expect)(this.assignmentGroupAfterUpdate).to.equal(this.global.Level2_ServiceCenter);\n        });\n\n        (0, _mocha.it)('if the field named u_dispatch is true then the assignment group should be changed  to Level 2 - Field Service / Service Center', function () {\n            (0, _chai.expect)(this.assignmentGroupBeforeUpdate).to.equal(this.global.Level2);\n            (0, _chai.expect)(this.assignmentGroupAfterUpdate).to.equal(this.global.Level2_ServiceCenter);\n        });\n    });\n\n    (0, _mocha.describe)('change the assignment group to: Level 3 - Dispatch', function () {\n        (0, _mocha.beforeEach)(function () {\n            this.assignmentGroupBeforeUpdate = this.record.Assignment_Group__c;\n            this.record.u_dispatch__c = true;\n            sfdcUtils.updateRecord(this, this.record);\n            sfdcUtils.pollForUpdate(this, this.record);\n            sfdcUtils.record(this, this.recordId, 'Assignment_Group__c');\n            this.assignmentGroupAfterUpdate = this.record.Assignment_Group__c;\n        });\n\n        (0, _mocha.it)('if the field named u_dispatch is true then the assignment group should be changed  to Level 3 - Dispatch"},
{"cuid":"cldasbac2003krg24y6j6a7gc","createdAt":"2023-01-24 22:03:54.002","updatedAt":"2023-01-24 22:03:59.959","userCuid":"cld9unimw000wucguenaahfdy","prompt":"if the field named u_dispatch is true then set current assignment group to Level 2 - Field Service Coordination","action":"complete","response":"\n        if(new_assignment_group_name == 'Level 2 - Field Service Coordination'){\n            gs.log(\"test\");\n            //get the user id from the contact\n            user_id = contact.u_user_id;\n            //get the user object from the user id\n            user = new GlideUser(user_id);\n            //set the user's current assignment group to Level 2 - Field Service Coordination\n            user.setAssignmentGroup('Level 2 - Field Service Coordination');\n            //get the user's assignment group's id\n            new_group_id = user.getAssignmentGroup();\n            //check if the user's current assignment group id is equal to the new group id\n            if(new_group_id == new_group_id){\n                gs.log(\"User's current assignment group has been set to Level 2 - Field Service Coordination\");\n                gs.eventQueue('assignment_group_changed', current_group_id, new_group_id);\n                gs.eventQueue('assignment_group_changed', new_group_id, current_group_id);\n                gs.eventQueue('assignment_group_changed', new_assignment_group_name, old_assignment_group_name);\n            }\n        }\n\n        //if the field named u_dispatch is false then set current assignment group to Level 2 - Field Service Coordination\n        if(new_assignment_group_name == 'Level 3 - Field Service Outreach'){\n            //get the user id from the contact\n            user_id = contact.u_user_id;\n            //get the user object from the user id\n            user = new GlideUser(user_id);\n            //set the user's current assignment group to Level 3 - Field Service Outreach\n            user.setAssignmentGroup('Level 3 - Field Service Outreach');\n            //get the user's assignment group's id\n            new_group_id = user.getAssignmentGroup();\n            //check if the user's current assignment group id is equal to the new group id\n            if(new_group_id == new_group_id){\n                gs.log(\"User's current assignment group has"},
{"cuid":"cldasdkn0003org24ami05p3p","createdAt":"2023-01-24 22:05:40.669","updatedAt":"2023-01-24 22:05:44.398","userCuid":"cld9unimw000wucguenaahfdy","prompt":"if dispatch is \"true\", then assignment group should be Level 2 - Field Service Coordination","action":"complete","response":"\n    $assignment_group_id = db_result(db_query(\"SELECT id FROM {group} WHERE name = 'Level 2 - Field Service Coordination'\"),0);\n    db_query(\"UPDATE {node} SET assignment_group_id = '$assignment_group_id' WHERE type = 'assignment' AND nid = '$node_nid'\");\n\n    //If dispatch is \"false\", then assignment group should be Level 1 - Risk Management\n    $assignment_group_id = db_result(db_query(\"SELECT id FROM {group} WHERE name = 'Level 1 - Risk Management'\"),0);\n    db_query(\"UPDATE {node} SET assignment_group_id = '$assignment_group_id' WHERE type = 'assignment' AND nid = '$node_nid'\");\n\n    //Change the \"status\" variable to \"closed\"\n    db_query(\"UPDATE {node} SET status = 'closed' WHERE type = 'assignment' AND nid = '$node_nid'\");\n  }\n  else\n  {\n    //If dispatch is \"false\", then assignment group should be Level 1 - Risk Management\n    $assignment_group_id = db_result(db_query(\"SELECT id FROM {group} WHERE name = 'Level 1 - Risk Management'\"),0);\n    db_query(\"UPDATE {node} SET assignment_group_id = '$assignment_group_id' WHERE type = 'assignment' AND nid = '$node_nid'\");\n  }\n}\n?>"},
{"cuid":"cldasfx0j003urg24v428673w","createdAt":"2023-01-24 22:07:30.02","updatedAt":"2023-01-24 22:07:32.36","userCuid":"cld9unimw000wucguenaahfdy","prompt":"\n// Prompt: When the caller is set to jace, set the group to cab\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 'jace') { // when the new value is jace\n        g_form.setValue('assignment_group', 'cab'); // set the group to cab, replace w/sysid\n    }\n}\n// Prompt: If the book changes to read, set the date to today.\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n  if (isLoading || newValue === '') { return; }\n  if (newValue == 'read') { // when the new value is read\n    var now = new Date(); // make a variable for today\n    var dateInUserFormat = getDateTimeFromFormat(now, g_user_date_time_format); // get it in the users format\n    g_form.setValue('date', dateInUserFormat); // set the date to today\n  }\n}\n// Prompt: show me the groups the user picked is a member of\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    var userAjax = new GlideAjax('global.UserAjax'); // call the UserAjax Script Include\n    userAjax.addParam('sysparm_name', 'getGroups'); // call the getGroups function\n    userAjax.addParam('sysparm_obj', JSON.stringify({\"userId\": newValue})); // pass in the new value for the user\n    userAjax.getXML(function(response){\n        var responseDocument = response.responseXML.document.Element.getAttribute('answer'); //get the answer\n        var serverObj = JSON.parse(answer); // make it a json object\n        var groups = serverObj.groups.join(', '); // make it a string with commas\n        g_form.addInfoMessage(groupString); // show it on the form\n    })\n}\n// Prompt: when food quantity becomes zero, require reason\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 0) { // when the new value is zero\n        g_form.setMandatory('reason', true);\n    }\n}\n// Prompt: if the field named u_dispatch is true then the assignment group should be changed  to f3e1717c8771f010fc0321f6cebb3533 and copy the configuration item from the incident\n    ","action":"complete","response":"function onChange(control, oldValue, newValue, isLoading, isTemplate) {\n        if (isLoading || newValue === '') { return; }\n        if (control.getName() == \"u_dispatch\") { // if the control is called u_dispatch\n            if (newValue == true) { // if the new value is true\n                g_form.setValue('assignment_group', 'f3e1717c8771f010fc0321f6cebb3533'); // set the group to f3e1717c8771f010fc0321f6cebb3533\n                g_form.copyValue('description', 'incident'); // copy the description from the incident\n            }\n        }\n    }\n"},
{"cuid":"cldb16dvw003yrg24qo4t2aj3","createdAt":"2023-01-25 02:12:01.868","updatedAt":"2023-01-25 02:12:06.287","userCuid":"cld9unimx003tucgu1gxk45hk","prompt":"check30dayRefresh();\n\nfunction check30dayRefresh() {\n    var refresh_Status = gs.getProperty('micron.hwasset.pcl.refresh.on');\n    gs.log(\"Refresh status - \" + refresh_Status);\n    if (refresh_Status == true) {\n        var asset = new GlideRecord('alm_asset');\n        asset.addEncodedQuery('assigned_to!=b2f473fa1b075810acb7b887cc4bcba5^model_category=81feb9c137101000deeabfc8bcbe5dc4^asset_function=primary^ci.assigned_to.u_user_type=1^assigned_toISNOTEMPTY^install_status=1^u_revised_refresh_dateISEMPTY^u_refresh_dateRELATIVEGT@dayofweek@ahead@29^u_refresh_dateRELATIVELT@dayofweek@ahead@31');\n        asset.query();\n        while (asset.next()) {\n            gs.eventQueue('Micron.PCL.Refresh_Reminder', asset, asset.assigned_to);\n        }\n    }\n}\n\"\"\"\nExplain the above code step-by-step in simple english.","action":"explain","response":"\n\nThe above code checks if the 'micron.hwasset.pcl.refresh.on' property is true. If it is, the code retrieves all assets that are assigned to a user, have a model category of '81feb9c137101000deeabfc8bcbe5dc4', have an asset function of 'primary', have a CI assigned to them, have a 'u_user_type' of 1, have a non-empty 'assigned_to' field, have an 'install_status' of 1, do not have a 'u_revised_refresh_date' set, and have a 'u_refresh_date' that is between 29 and 31 days in the future. For each asset that meets these criteria, the code queues an event called 'Micron.PCL.Refresh_Reminder'."},
{"cuid":"cldbhxl8l0043rg248s9ofmqe","createdAt":"2023-01-25 10:01:04.965","updatedAt":"2023-01-25 10:01:06.653","userCuid":"cld9unimw001vucgu2vi49gvt","prompt":"\n// Prompt: Create a script that sets the assignment group to the Manager's group if the priority is 1.\n(function executeRule(current, previous) {\n    if (current.getValue('priority', '1')) {\n        current.setValue('group', current.manager.group + '');\n    }\n})(current, previous);\n// Prompt: when status changes, if closed, set active to false\n(function executeRule(current, previous) {\n    // condition current.status.changes()\n    if (current.status == 'closed_created' || current.status == 'closed_duplicate' || current.status == 'closed_invalid') {\n        current.active = false;\n    } else {\n        current.active = true;\n    }\n})(current, previous);\n// Prompt: when change request changes, set parent to change request\n(function executeRule(current, previous) {\n    // condition current.change_request.changes()\n    current.parent = current.change_request;\n})(current, previous);\n// Prompt: do not allow changes to others delegates\n(function executeRule(current, previous) {\n    // condition current.user != gs.getUserID() && !gs.hasRole('admin')\n    gs.addInfoMessage(gs.getMessage(\"Cannot assign or modify other users' Delegates\"));\n    current.setAbortAction(true);\n})(current, previous);\n// Prompt: get the bot icon for slack, and set it from the response\n(function executeRule(current, previous) {\n    try {\n        var req = new sn_ws.RESTMessageV2();\n        req.setEndpoint('https://slack.com/api/team.info');\n        req.setHttpMethod('get');\n        var e = new GlideEncryptionUtil();\n        var authToken = e.getClearPassword2('token_verification', 'token', current.provider_auth.outbound_message_creation);\n        if (JSUtil.notNil(authToken))\n            req.setRequestHeader('Authorization', 'Bearer ' + authToken);\n        var resp = req.execute();\n        var team_icon = JSON.parse(resp.getBody()).team.icon.image_88;\n        current.setValue(\"icon\", team_icon);\n    } catch (ex) {\n        gs.error('Error getting slack team info: ' + ex.getMessage());\n    }\n})(current, previous);\n// Prompt: when the start and end dates change, only allow dates where the start is before the end\n(function executeRule(current, previous) {\n    // condition current.start_date.changes() || current.end_date.changes()\n    if (!current.start_date.nil() && !current.end_date.nil() && current.start_date > current.end_date) {\n        current.setAbortAction(true);\n        gs.addErrorMessage(gs.getMessage(\"The start date cannot be after the end date\"));\n    }\n})(current, previous);\n// Prompt: when the date changes is empty, format it in the star trek format (YYYY.ElapsedDays) and set it in the star date field\n(function executeRule(current, previous) {\n    // condition current.date.changes()\n    if (!current.date.nil()) {\n        var date = new GlideDateTime(current.date);\n        var year = date.getYear();\n        var elapsedDays = date.getElapsed(date.getNumericValue());\n        current.star_date = year + '.' + elapsedDays;\n    }\n})(current, previous);\n// Prompt: when assigned to is a member of assignment group then remove assigned to\n","action":"complete","response":"(function executeRule(current, previous) {\n    // condition current.assigned_to.changes()\n    if (!current.assigned_to.nil()) {\n        var user = new GlideUser(current.assigned_to);\n        if (user.memberOf(current.group)) {\n            current.setValue('assigned_to', '');\n        }\n    }\n})(current, previous);\n"},
{"cuid":"cldbhzafm0046rg24iey9yaxj","createdAt":"2023-01-25 10:02:24.275","updatedAt":"2023-01-25 10:02:27.037","userCuid":"cld9unimw001vucgu2vi49gvt","prompt":"(function executeRule(current, previous) {\n    // condition current.assigned_to.changes()\n    if (!current.assigned_to.nil()) {\n        var user = new GlideUser(current.assigned_to);\n        if (user.memberOf(current.group)) {\n            current.setValue('assigned_to', '');\n        }\n    }\n})(current, previous);\n\n// Generated by scribe.monster\n\"\"\"\ncurrent is tied to the sys_script record.\nExplain it like I'm five years old in the form of a list.\n1.","action":"explain","response":" the current value is assigned to a variable called user.\n2. the user's group is checked to see if it is the same as the current group.\n3. if the user's group is the same as the current group, the user is set to '' (empty)."},
{"cuid":"cldbpcsgj004hrg24qy1xernf","createdAt":"2023-01-25 13:28:51.475","updatedAt":"2023-01-25 13:28:56.218","userCuid":"cld9unimy0053ucguh4y25ejw","prompt":"Summarize this text for me in a few sentences.\"\n   _save: function(sessionID, payload) {\n        // Save the Planon User - commit them to DB\n        var requestStatus;\n        var responseBody;\n\n        try {\n            var sm = new sn_ws.SOAPMessageV2(this.SOAP_MESSAGE, \"save\");\n            sm.setStringParameter(\"session_id\", sessionID);\n            sm.setStringParameterNoEscape(\"message_body\", payload);\n            sm.setRequestHeader(\"Content-Type\", this.CONTENT_TYPE);\n            var response = sm.execute();\n            responseBody = response.haveError() ? response.getErrorMessage() : response.getBody();\n            requestStatus = response.getStatusCode();\n\n        } catch (ex) {\n            responseBody = ex.getMessage();\n            requestStatus = '500';\n            this.log(\"info\", \"Error \" + requestStatus + ' - ' + responseBody);\n            return false;\n\n        } finally {\n            this.log(\"all\", \"Planon Employee: Successfully created Planon Employee - Response:\\n\\n\" + responseBody);\n\n        }\n\n        return true;\n    },","action":"summarize-1","response":"\n\nThis code is a function that saves a Planon User to the DB via a SOAPMessageV2, parsing the session ID and payload. The response status and message body is logged."},
{"cuid":"cldbq8gf2004lrg24g8rs5bjg","createdAt":"2023-01-25 13:53:28.862","updatedAt":"2023-01-25 13:53:59.411","userCuid":"cld9unimy004pucgu4tff4xl2","prompt":"give me example how to convert string to date in servicenow\n\n\n","action":"ask","response":"That model is currently overloaded with other requests. You can retry your request, or contact us through our help center at help.openai.com if the error persists. (Please include the request ID d468b2ce4f15eee0b920c4223b07db7e in your message.)"},
{"cuid":"cldbq92ax004nrg243y6hv8tq","createdAt":"2023-01-25 13:53:57.226","updatedAt":"2023-01-25 13:54:02.63","userCuid":"cld9unimy004pucgu4tff4xl2","prompt":"give me example how to convert string to date in servicenow\n\n\n","action":"ask","response":"\nThe following example shows how to convert a string variable to a Date variable in ServiceNow.\n\n//Declare a string variable\nvar strDate = \"2020-08-20\";\n\n//Convert the string to a Date variable\nvar date = new GlideDateTime(strDate);"},
{"cuid":"cldbrpyf6004rrg2400hwddh0","createdAt":"2023-01-25 14:35:04.963","updatedAt":"2023-01-25 14:35:17.224","userCuid":"cld9unimx003fucguazjjb2bh","prompt":"Update this code based following this prompt, \"write this neater\": var AccountExpiryUserDetails = Class.create();\nAccountExpiryUserDetails.prototype = Object.extendsObject(AbstractAjaxProcessor, {\n\n    userDetails: function() {\n        var dataArr = [];\n        var data = {};\n        var users = this.getParameter('sysparm_user');\n\n        users = JSON.parse(users);\n\n        var userGr = new GlideRecord('sys_user');\n        userGr.addEncodedQuery('sys_idIN' + users);\n        userGr.query();\n\n        if (userGr.hasNext()) {\n            while (userGr.next()) {\n\n                data = {};\n                data.name = userGr.sys_id.toString();\n                data.email = userGr.email.toString();\n                data.job_title = userGr.title.toString();\n                data.account_expiry = userGr.getDisplayValue('u_expiry_date');\n                dataArr.push(data);\n            }\n        }\n\t\treturn JSON.stringify(dataArr);\n    },\n\n\n\n    type: 'AccountExpiryUserDetails'\n}); ```","action":"edit","response":"\n\nvar AccountExpiryUserDetails = Class.create();\n\nAccountExpiryUserDetails.prototype = Object.extendsObject(AbstractAjaxProcessor, {\n\n    userDetails: function() {\n        var dataArr = [];\n        var data = {};\n        var users = this.getParameter('sysparm_user');\n\n        users = JSON.parse(users);\n\n        var userGr = new GlideRecord('sys_user');\n        userGr.addEncodedQuery('sys_idIN' + users);\n        userGr.query();\n\n        if (userGr.hasNext()) {\n            while (userGr.next()) {\n\n                data = {};\n                data.name = userGr.sys_id.toString();\n                data.email = userGr.email.toString();\n                data.job_title = userGr.title.toString();\n                data.account_expiry = userGr.getDisplayValue('u_expiry_date');\n                dataArr.push(data);\n            }\n        }\n        return JSON.stringify(dataArr);\n    },\n\n\n\n    type: 'AccountExpiryUserDetails'\n});"},
{"cuid":"cldbsp2a6005frg24j5qd2yx3","createdAt":"2023-01-25 15:02:22.926","updatedAt":"2023-01-25 15:03:39.738","userCuid":"cldbsfdcq0057rg24q21n9n0p","prompt":"\n<!--Fill out the below given this prompt \"Lightspeed POS for q4 2020\".-->\n<h1>Lightspeed POS: Product Requirements</h1>\n<table>\n    <tr>\n        <th>Target release</th>\n        <td>Q4 2020</td>\n    </tr>\n    <tr>\n        <th>Project</th>\n        <td>Lightspeed Scanner Project</td>\n    </tr>\n    <tr>\n        <th>Document status</th>\n        <td>Draft</td>\n    </tr>\n    <tr>\n        <th>Document owner</th>\n        <td>Doug O.</td>\n    </tr>\n    <tr>\n        <th>Designer</th>\n        <td>Denise</td>\n    </tr>\n    <tr>\n        <th>Tech lead</th>\n        <td>Tiff L.</td>\n    </tr>\n    <tr>\n        <th>Tech writers</th>\n        <td>Tom W., Wendy T.</td>\n    </tr>\n    </tbody>\n</table>\n<h2>Overview</h2>\nOur goal is to develop a new point of sale scanning app to support our retail partners speed up order fulfillment and improve efficiency at a grand\nscale. We already offer an extensive range of products to help retail businesses thrive, including a robust POS system, Marketing and Loyalty,\nand Advanced Reporting. These products are designed to be highly intuitive, innovative and suitable for all business models. There is a need for\na dynamic inventory management tool to increase the efficiency rate at which retail team members operate. This management tool is accessible\non any iOS or android device to count products, track inventory and fulfill orders systematically. The scanner app provides the flexibility to\nstreamline storeroom and warehouse operations as well as optimize order fulfillment with integrated workflows.\n\n\n<h2>Expected outcomes</h2>\nThe key benefits of this project is an increase in customer satisfaction, reduce labor costs, minimize errors in packing process, increased\nefficiency of receiving process, and an improvement of security systems.\n\n\n<h2>Success metrics</h2>\nThe success of this project will be measured by the following metrics:\n\n<table>\n    <thead>\n        <tr>\n            <th>Goal</th>\n            <th>Metric</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>Simplify the process of picking and packing online orders</td>\n            <td>Reduced % of errors in packing process</td>\n        </tr>\n        <tr>\n            <td>Introduce integrated workflows to speed up order fulfillment</td>\n            <td>Increase in customer satisfaction</td>\n        </tr>\n    </tbody>\n</table>\n \n<h2>Milestones</h2>\n\n<ol>\n    <li>Concept Presentation: 2/15/2023</li>\n    <li>Meeting with Design Team: 2/30/2023</li>\n    <li>Test Pilot Locations: 3/05/2023</li>\n    <li>Product Launch: 3/15/2023</li>\n</ol>\n\n<h2>High level requirements</h2>\n<table>\n    <thead>\n        <tr>\n            <td>Requirement</td>\n            <td>User Story</td>\n            <td>Importance</td>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>Must be mobile responsive on both android and iOS devices</td>\n            <td>As a retail team member I want to scan products\n                directly into the app so that I do not have to use\n                spreadsheets or outdated devices.</td>\n            <td>High</td>\n        </tr>\n        <tr>\n            <td>Must only allow authorized staff to access the app</td>\n            <td>As an end-user, I want to have the correct user\n                permissions so that I can successfully update stock\n                levels</td>\n            <td>High</td>\n        </tr>\n    </tbody>\n</table>\n\n\n\n<h2>Project risks</h2>\n<table>\n    <thead>\n        <tr>\n            <th>Risk</th>\n            <th>Probability</th>\n            <th>Impact</th>\n            <th>Mitigation</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>Project delay due to slowness and bugs</td>\n            <td>Medium</td>\n            <td>Medium</td>\n            <td>Ensure we have up-to-date software</td>\n        </tr>\n        <tr>\n            <td>Exceeding our budget</td>\n            <td>Medium</td>\n            <td>High</td>\n            <td>Ensure we have a clear budget</td>\n        </tr>\n    </tbody>\n</table>\n\n<!--Fill out the below given this prompt \"approve if manager is present\"-->","action":"docs-product-requirements","response":"\n<h1>Lightspeed POS: Approvals</h1>\n<h2>Overview</h2>\nThis document describes the approval requirements for the Lightspeed POS product.\n\n<h2>Scenario</h2>\nThe following approval requirements apply to the Lightspeed POS product.\n\n<h2>Requirements</h2>\n<ol>\n    <li>\n        <p><strong>Approve if manager is present</strong></p>\n        <p>Orders of $1,000 or more must be approved by a manager. The order is eligible for approval if the following conditions are met:</p>\n        <ul>\n            <li>The order total is &ge; $1,000</li>\n            <li>A manager is present</li>\n            <li>The manager has entered their passcode</li>\n        </ul>\n    </li>\n    <li>\n        <p><strong>Reject if manager is absent</strong></p>\n        <p>Orders of $1,000 or more must be approved by a manager. The order is rejected if:</p>\n        <ul>\n            <li>The order total is &ge; $1,000</li>\n            <li>A manager is not present</li>\n        </ul>\n    </li>\n    <li>\n        <p><strong>Reject if payment is cash or gift card</strong></p>\n        <p>Order must not be paid for with cash or a gift card.</p>\n    </li>\n    <li>\n        <p><strong>Reject if payment is not authorized</strong></p>\n        <p>Order must not be paid for with a payment method that is not authorized.</p>\n    </li>\n    <li>\n        <p><strong>Approve if payment is authorized</strong></p>\n        <p>Order must be paid for with a payment method that is authorized.</p>\n    </li>\n    <li>\n        <p><strong>Reject if customer has outstanding balance</strong></p>\n        <p>Order must not be paid for by a customer with an outstanding balance.</p>\n    </li>\n    <li>\n        <p><strong>Approve if customer has no outstanding balance</strong></p>\n        <p>Order must be paid for by a customer with no outstanding balance.</p>\n    </li>\n    <li>\n        <p><strong>Approve if customer has not exceeded credit limit</strong></p>\n        <p>Order must be paid for by a customer with a credit limit that has not been exceeded.</p>\n    </li>\n    <li>\n        <p><strong>Reject if customer has exceeded credit limit</strong></p>\n        <p>Order must not be paid for by a customer with a credit limit that has been exceeded.</p>\n    </li>\n    <li>\n        <p><strong>Reject if payment is fraudulent</strong></p>\n        <p>Order must not be paid for with a fraudulent payment method.</p>\n    </li>\n    <li>\n        <p><strong>Approve if payment is not fraudulent</strong></p>\n        <p>Order must be paid for with a non-fraudulent payment method.</p>\n    </li>\n    <li>\n        <p><strong>Approve if dropshipping is enabled</strong></p>\n        <p>Order must be processed for dropshipping if dropshipping is enabled.</p>\n    </li>\n    <li>\n        <p><strong>Reject if dropshipping is not enabled</strong></p>\n        <p>Order must not be processed for dropshipping if dropshipping is not enabled.</p>\n    </li>\n    <li>\n        <p><strong>Approve if dropshipper is authorized</strong></p>\n        <p>Order must be processed for dropshipping if the dropshipper is authorized.</p>\n    </li>\n    <li>\n        <p><strong>Reject if dropshipper is not authorized</strong></p>\n        <p>Order must not be processed for dropshipping if the dropshipper is not authorized.</p>\n    </li>\n    <li>\n        <p><strong>Approve if dropshipper has credit</strong></p>\n        <p>Order must be processed for dropshipping if the dropshipper has credit.</p>\n    </li>\n    <li>\n        <p><strong>Reject if dropshipper has no credit</strong></p>\n        <p>Order must not be processed for dropshipping if the dropshipper has no credit.</p>\n    </li>\n    <li>\n        <p><strong>Approve if dropshipper has no outstanding balance</strong></p>\n        <p>Order must be processed for dropshipping if the dropshipper has no outstanding balance.</p>\n    </li>\n    <li>\n        <p><strong>Reject if dropshipper has outstanding balance</strong></p>\n        <p>Order must not be processed for dropshipping if the dropshipper has an outstanding balance.</p>\n    </li>\n    <li>\n        <p><strong>Approve if dropshipper is bonded</strong></p>\n        <p>Order must be processed for dropshipping if the dropshipper is bonded.</p>\n    </li>\n    <li>\n        <p><strong>Reject if dropshipper is not bonded</strong></p>\n        <p>Order must not be processed for dropshipping if the dropshipper is not bonded.</p>\n    </li>\n    <li>\n        <p><strong>Approve if dropshipper is insured</strong></p>\n        <p>Order must be processed for dropshipping if the dropshipper is insured.</p>\n    </li>\n    <li>\n        <p><strong>Reject if dropshipper is not insured</strong></p>\n        <p>Order must not be processed for dropshipping if the dropshipper is not insured.</p>\n    </li>\n    <li>\n        <p><strong>Approve if dropshipper is registered</strong></p>\n        <p>Order must be processed for dropshipping if the dropshipper is registered.</p>\n    </li>\n    <li>\n        <p><strong>Reject if dropshipper is not registered</strong></p>\n        <p>Order must not be processed for dropshipping if the dropshipper is not registered.</p>\n    </li>\n    <li>\n        <p><strong>Reject if shipping address is not verified</strong></p>\n        <p>Order must not be shipped to an address that has not been verified.</p>\n    </li>\n    <li>\n        <p><strong>Approve if shipping address is verified</strong></p>\n        <p>Order must be shipped to an address that has been verified.</p>\n    </li>\n</ol>\n\n"},
{"cuid":"cldbsri5b005org248xka2ei5","createdAt":"2023-01-25 15:04:16.8","updatedAt":"2023-01-25 15:04:28.362","userCuid":"cld9unimy004pucgu4tff4xl2","prompt":"give some more examples\n\n\n\n\nLet’s think step by step.\n","action":"ask-step-by-step","response":"\n1. Problem-solving: Finding the most efficient way to complete a task, creating a plan to address a challenge.\n\n2. Critical thinking: Analyzing data and evidence to come to a conclusion, identifying underlying issues in a problem.\n\n3. Decision-making: Weighing the pros and cons of a situation to make an informed choice, considering various courses of action.\n\n4. Creativity: Developing innovative solutions to complex problems, finding creative ways to approach a task.\n\n5. Communication: Listening and responding to others effectively, conveying ideas in a clear and concise manner.\n\n6. Collaboration: Working together to achieve a common goal, sharing resources and knowledge.\n\n7. Leadership: Taking initiative to motivate and direct others, providing guidance and support.\n\n8. Organization: Setting priorities and managing time wisely, keeping track of tasks and deadlines."},
{"cuid":"cldbssafr005srg249p5igalj","createdAt":"2023-01-25 15:04:53.463","updatedAt":"2023-01-25 15:04:56.812","userCuid":"cld9unimy004pucgu4tff4xl2","prompt":"What are the key points and main ideas of {\"\"}","action":"summarize-2","response":"\n\nThe key points and main ideas of a particular subject depend on the specific topic being discussed. Without more specific information, it is not possible to answer this question."},
{"cuid":"cldbrqn0k004urg24vlhkcqkh","createdAt":"2023-01-25 14:35:36.836","updatedAt":"2023-01-25 14:35:43.227","userCuid":"cld9unimx003fucguazjjb2bh","prompt":"var AccountExpiryUserDetails = Class.create();\n\nAccountExpiryUserDetails.prototype = Object.extendsObject(AbstractAjaxProcessor, {\n\n    userDetails: function() {\n        var dataArr = [];\n        var data = {};\n        var users = this.getParameter('sysparm_user');\n\n        users = JSON.parse(users);\n\n        var userGr = new GlideRecord('sys_user');\n        userGr.addEncodedQuery('sys_idIN' + users);\n        userGr.query();\n\n        if (userGr.hasNext()) {\n            while (userGr.next()) {\n\n                data = {};\n                data.name = userGr.sys_id.toString();\n                data.email = userGr.email.toString();\n                data.job_title = userGr.title.toString();\n                data.account_expiry = userGr.getDisplayValue('u_expiry_date');\n                dataArr.push(data);\n            }\n        }\n        return JSON.stringify(dataArr);\n    },\n\n\n\n    type: 'AccountExpiryUserDetails'\n});\n// Generated by scribe.monster\n\"\"\"\nExplain this Script Include like I'm five years old in the form of a list.\n1.","action":"explain","response":" The script include is called \"AccountExpiryUserDetails\"\n2. It is a class that extends the \"AbstractAjaxProcessor\" class\n3. It has a function called \"userDetails\" that returns a JSON string containing information about the users in the system\n4. The \"userDetails\" function takes in a parameter called \"sysparm_user\" which is a JSON string containing the sys_ids of the users to query\n5. The \"userDetails\" function queries the sys_user table for the users with the sys_ids in the \"sysparm_user\" parameter\n6. The \"userDetails\" function returns a JSON string containing the name, email, job title, and account expiry date of the users"},
{"cuid":"cldbrr5tk004yrg248j2ng5uz","createdAt":"2023-01-25 14:36:01.209","updatedAt":"2023-01-25 14:36:09.32","userCuid":"cld9unimx003fucguazjjb2bh","prompt":"Update this code based following this prompt, \"code check this\": 1. The script include is called \"AccountExpiryUserDetails\"\n2. It is a class that extends the \"AbstractAjaxProcessor\" class\n3. It has a function called \"userDetails\" that returns a JSON string containing information about the users in the system\n4. The \"userDetails\" function takes in a parameter called \"sysparm_user\" which is a JSON string containing the sys_ids of the users to query\n5. The \"userDetails\" function queries the sys_user table for the users with the sys_ids in the \"sysparm_user\" parameter\n6. The \"userDetails\" function returns a JSON string containing the name, email, job title, and account expiry date of the users\n// Generated by scribe.monster ```","action":"edit","response":"\n\nclass AccountExpiryUserDetails extends AbstractAjaxProcessor {\n  function userDetails(sysparm_user) {\n    \n    var userArray = JSON.parse(sysparm_user);\n    var userQuery = new GlideRecord('sys_user');\n    userQuery.addQuery('sys_id', 'IN', userArray);\n    userQuery.query();\n    \n    var userInfo = {};\n    while (userQuery.next()) {\n      userInfo[userQuery.sys_id] = {\n        name: userQuery.name,\n        email: userQuery.email,\n        job_title: userQuery.job_title,\n        account_expiry: userQuery.account_expiry\n      };\n    }\n    \n    return JSON.stringify(userInfo);\n  }\n}"},
{"cuid":"cldbrs2d60052rg24nxgr39mj","createdAt":"2023-01-25 14:36:43.386","updatedAt":"2023-01-25 14:36:47.894","userCuid":"cld9unimy004pucgu4tff4xl2","prompt":"how to compare dates in servicenow\n\n\n\n","action":"ask","response":"\n\nYou can compare dates in ServiceNow using the GlideDateTime and GlideDate classes. Both classes provide a number of methods for comparing two dates.\n\nFor example, you can use the GlideDateTime.after() method to compare if one GlideDateTime is after another, or the GlideDate.before() method to compare if one GlideDate is before another.\n\nYou can also use the GlideDateTime.equals() method to compare if two GlideDateTime objects have the same time, or the GlideDate.getDifference() method to get the difference between two GlideDate objects."},
{"cuid":"cldbsdeg90055rg24dv2k7n2w","createdAt":"2023-01-25 14:53:18.825","updatedAt":"2023-01-25 14:53:34.404","userCuid":"cld9unimy0058ucgucxhie01n","prompt":"optimise this code\n\nvar ADBSmartTrackBusinessRuleScript = Class.create();\nADBSmartTrackBusinessRuleScript.prototype = {\n    initialize: function() {},\n\n\n    getManufacturer: function(current, previous) {\n\n        var manufacturerSKU = current.u_manufacturer_sku.getDisplayValue();\n        var incidentDesc = 'Smart Track ArticleID not Found for Manufacturer SKU : ' + manufacturerSKU;\n        gs.info(\"manufacturerSKU from BR: \" + manufacturerSKU);\n\n        var imstkn = this.getIMSToken();\n        var transactionID = this.getTransactionID(imstkn);\n\n\n        var articleID = \"\";\n\n        //Trying to get articke id for three times\n        for (var i = 0; i < 3; i++) {\n\n\n\n\n\n            articleID = this.getArticleID(imstkn, transactionID, manufacturerSKU);\n\n\n\n            //SW1 SKU (AAA-03850 & AAA-03579) could have multiple SKUs in SmartTrack catalog depending on the version\n            //\tso if there is no match with direct SKU we need to call SmartTrack API with the parameter to add \"_\" + version\n            if (articleID == 'articleID_Null') {\n\n                manufacturerSKU = manufacturerSKU + '_' + current.version.getDisplayValue();\n                articleID = this.getArticleID(imstkn, transactionID, manufacturerSKU);\n                gs.info(\"SmartTrack: \" + articleID + \" manufacturerSKU: \" + manufacturerSKU);\n                if (articleID == 'articleID_Null') {\n                    gs.info(\"1SmartTrack: articleID not found using verison \", \"inci\");\n                } else\n                    break;\n            } else\n                break;\n        }\n\n        if (articleID == 'articleID_Null') {\n\n\n            // this.createIncident(incidentDesc);\n\n\n\n        } else {\n            gs.info(\"1SmartTrack: articleID found\");\n            var productID = this.getProductUseRights(imstkn, transactionID, articleID, manufacturerSKU);\n            var importID = this.getProducts(imstkn, transactionID, productID, manufacturerSKU);\n        }\n\n        gs.info(\"SmartTrack : @@@@articleID:\" + articleID + \" transactionID:\" + transactionID + \" productID:\" + productID + \" importID: \" + importID);\n    },\n\n\n    //get_articleID\n    getArticleID: function(imstkn, transactionID, manufacturerSKU) {\n        var xmlDoc = new XMLDocument2();\n        gs.info(\"SmartTrack: get_articleID: function execution is gettting started\");\n        var get_art = new sn_ws.SOAPMessageV2('ADB:Smarttrack', 'get_articles');\n        get_art.setRequestHeader('Authorization', imstkn);\n        get_art.setRequestHeader('api_key', gs.getProperty(\"ADBSmartTrackAPIkey\"));\n        get_art.setStringParameterNoEscape('tid', transactionID);\n        get_art.setStringParameterNoEscape('man_art_no', manufacturerSKU);\n\n        var resp_getArticles = get_art.execute();\n        var responseBody_getArticles = resp_getArticles.getBody();\n        var Status_getArticles = resp_getArticles.getStatusCode();\n        gs.info(\"SmartTrack: soap message for get_article have been executed and returned code: \" + Status_getArticles + \" manufacturerSKU:\" + manufacturerSKU);\n\n        if (Status_getArticles == 200) {\n\n            xmlDoc.parseXML(responseBody_getArticles);\n            var param1 = xmlDoc.getFirstNode(\"//article_id\");\n\n            if (param1 != null) {\n\n                var articleID = param1.getTextContent();\n\n                var softModel = new GlideRecord(\"cmdb_software_product_model\");\n                softModel.addQuery('u_manufacturer_sku', manufacturerSKU);\n                softModel.query();\n\n                while (softModel.next()) {\n                    //gs.info(\"@@@@SmartTrack: manufacturerSKU\"+ manufacturerSKU + \" ART: \"+articleID);\n                    softModel.u_smarttrack_article_id = articleID;\n                    softModel.update();\n                    gs.info(\"SmartTrack: updated the articleID: \" + articleID + \" to the respective  manufacturerSKU:\" + manufacturerSKU);\n                    return articleID;\n                }\n\n            } else {\n                gs.info(\"articalID is null for manufacturerSKU: \" + manufacturerSKU);\n                return \"articleID_Null\";\n\n            }\n\n        } else {\n            gs.info(\"Failed to retrieve Article ID\");\n            return \"articleID_failed\";\n\n\n        }\n    },\n\n\n    //get_product_use_rights\n    getProductUseRights: function(imstkn, transactionID, articleID, manufacturerSKU) {\n\n        var xmlDoc = new XMLDocument2();\n        gs.info(\"SmartTrack: get_product_use_rights: function execution is gettting started\");\n        var get_prdUseRt = new sn_ws.SOAPMessageV2('ADB:Smarttrack', 'get_product_use_rights');\n        get_prdUseRt.setRequestHeader('Authorization', imstkn);\n        get_prdUseRt.setRequestHeader('api_key', gs.getProperty(\"ADBSmartTrackAPIkey\"));\n        get_prdUseRt.setStringParameterNoEscape('tid', transactionID);\n        get_prdUseRt.setStringParameterNoEscape('article_id', articleID);\n\n        var resp_prdUseRt = get_prdUseRt.execute();\n        var responseBody_prdUseRt = resp_prdUseRt.getBody();\n        var Status_prdUseRt = resp_prdUseRt.getStatusCode();\n        gs.info(\"SmartTrack: soap message for get_product_use_rights have been executed and returned code: \" + Status_prdUseRt + \" articleID:\" + articleID);\n\n        if (Status_prdUseRt == 200) {\n\n            xmlDoc.parseXML(responseBody_prdUseRt);\n            var param2 = xmlDoc.getFirstNode(\"//product_id\");\n\n            gs.info(\"smarttrack:\" + param2);\n\n\n            var productID = param2.getTextContent();\n\n            var softModel = new GlideRecord(\"cmdb_software_product_model\");\n            softModel.addQuery('u_manufacturer_sku', manufacturerSKU);\n            softModel.query();\n\n            while (softModel.next()) {\n                softModel.u_smarttrack_product_id = productID;\n                softModel.update();\n                gs.info(\"smarttrack: updated the product_id: \" + productID + \" to the respective manufacturerSKU:\" + manufacturerSKU);\n\n                return productID;\n            }\n        } else {\n            gs.info(\"Failed to retrieve product_id\");\n            return \"productID_failed\";\n        }\n\n    },\n\n    //get_products\n    getProducts: function(imstkn, transactionID, productID, manufacturerSKU) {\n\n        var xmlDoc = new XMLDocument2();\n        gs.info(\"SmartTrack: get_products: function execution is gettting started\");\n        var get_products = new sn_ws.SOAPMessageV2('ADB:Smarttrack', 'get_products');\n        get_products.setRequestHeader('Authorization', imstkn);\n        get_products.setRequestHeader('api_key', gs.getProperty(\"ADBSmartTrackAPIkey\"));\n        get_products.setStringParameterNoEscape('tid', transactionID);\n        get_products.setStringParameterNoEscape('product_id', productID);\n\n        var resp_products = get_products.execute();\n        var responseBody_products = resp_products.getBody();\n        var Status_products = resp_products.getStatusCode();\n        gs.info(\"Smarttrack: soap message for get_products have been executed and returned code: \" + Status_products + \"productID\" + productID);\n\n        if (Status_products == 200) {\n\n            xmlDoc.parseXML(responseBody_products);\n            var param3 = xmlDoc.getFirstNode(\"//import_id\");\n\n\n            var importID = param3.getTextContent();\n\n            var softModel = new GlideRecord(\"cmdb_software_product_model\");\n            softModel.addQuery('u_manufacturer_sku', manufacturerSKU);\n            softModel.query();\n\n            while (softModel.next()) {\n\n                softModel.u_smarttrack_import_product_id = importID;\n                softModel.update();\n                gs.info(\"smarttrack: updated the import_id: \" + importID + \" to the respective manufacturerSKU\" + manufacturerSKU);\n                return importID;\n            }\n        } else {\n            gs.info(\"Failed to retrieve importID\");\n            return \"importID_failed\";\n        }\n\n\n    },\n\n\n    //get Transaction ID for One time use\n    getTransactionID: function(imstkn) {\n\n        var xmlDoc = new XMLDocument2();\n        gs.info(\"SmartTrack: getTransactionID: function execution is gettting started\");\n        var re = new sn_ws.SOAPMessageV2('ADB:Smarttrack', 'start_transaction');\n        re.setRequestHeader('authorization', imstkn);\n        re.setRequestHeader('api_key', gs.getProperty(\"ADBSmartTrackAPIkey\"));\n        re.setStringParameterNoEscape('login', gs.getProperty(\"ADBSmartTrackLogin\"));\n        re.setStringParameterNoEscape('password', gs.getProperty(\"ADBSmartTrackPwd\"));\n        response = re.execute();\n        responseBody = response.getBody();\n        httpStatus = response.getStatusCode();\n        gs.info(\"SmartTrack: soap message for transaction id have been executed and returned code: \" + httpStatus);\n\n        if (httpStatus == 200) {\n            xmlDoc.parseXML(responseBody);\n            var param = xmlDoc.getFirstNode(\"//return\");\n            var transactionID = param.getTextContent();\n            gs.info(\"SmartTrack: \" + transactionID);\n\n            return transactionID;\n\n        } else {\n            gs.info(\"Failed to retrieve Transaction ID\");\n        }\n    },\n\n    //get IMS token\t\n    getIMSToken: function() {\n\n        var imstkn = 0;\n        var parser = new global.JSONParser();\n        gs.info(\"SmartTrack: getIMSToken: function execution is gettting started\");\n        var r = new sn_ws.RESTMessageV2('ADB:SmartTrack', 'get_IMSToken');\n        var response = r.execute();\n        var responseBody = response.getBody();\n        var httpStatus = response.getStatusCode();\n        gs.info(\"SmartTrack: getIMSToken: rest message for IMS have been executed and returned code:\" + httpStatus);\n        if (httpStatus == 200) {\n            gs.info(\"SmartTrack: getIMSToken: assigning variable for imstkn value\");\n            var oauthObject = parser.parse(responseBody);\n            imstkn = oauthObject.access_token;\n\n            return imstkn;\n        } else {\n            gs.info(\"Failed to retrieve IMS token\");\n        }\n\n    },\n\n    //create Incident consolidated\n    createIncident: function() {\n        var template = '01- Smart Track ArticleID not Found';\n        var desc = \"Smart Track ArticleID not found for below Manufacturer SKUs :\\n\";\n        var proModel = new GlideRecord('cmdb_software_product_model');\n        proModel.addQuery('u_manufacturer_skuISNOTEMPTY^u_smarttrack_article_idISEMPTY');\n        proModel.query();\n        while (proModel.next()) {\n            desc += proModel.getValue('u_manufacturer_sku') + \"\\n\";\n        }\n\n\n        var incident = new GlideRecord(\"incident\");\n        incident.addEncodedQuery(\"active=true^state!=6^short_description=Smart Track ArticleID not Found\");\n        incident.query();\n        if (!incident.hasNext()) {\n            incident.initialize();\n            incident.description = desc;\n            incident.applyTemplate(template);\n            incident.caller_id = gs.getProperty('adb.nestware.user');\n            incident.insert();\n        }\n    },\n\n    type: 'ADBSmartTrackBusinessRuleScript'\n};\n","action":"ask","response":"The server is currently overloaded with other requests. Sorry about that! You can retry your request, or contact us through our help center at help.openai.com if the error persists."},
{"cuid":"cldbsmtok005brg249joqd5gh","createdAt":"2023-01-25 15:00:38.469","updatedAt":"2023-01-25 15:00:40.644","userCuid":"cldbsfdcq0057rg24q21n9n0p","prompt":"who founded servicenow?","action":"ask","response":"\n\nServiceNow was founded in 2003 by Fred Luddy, a veteran of the software industry."},
{"cuid":"cldbspobu005hrg24isceeze0","createdAt":"2023-01-25 15:02:51.499","updatedAt":"2023-01-25 15:03:06.93","userCuid":"cldbsfdcq0057rg24q21n9n0p","prompt":"Summarize this text for me in a few sentences.\"\nNew client-scripts are run in strict mode, with direct DOM access disabled. Access to jQuery, prototype and the window object are likewise disabled. To disable this on a per-script basis, configure this form and add the \"Isolate script\" field. To disable this feature for all new globally-scoped client-side scripts set the system property \"glide.script.block.client.globals\" to false.\n","action":"summarize-1","response":"The server is currently overloaded with other requests. Sorry about that! You can retry your request, or contact us through our help center at help.openai.com if the error persists."},
{"cuid":"cldbsqgjq005jrg249baqhang","createdAt":"2023-01-25 15:03:28.07","updatedAt":"2023-01-25 15:03:47.423","userCuid":"cldbsfdcq0057rg24q21n9n0p","prompt":"\n<!--Fill out the below given this prompt \"create a badge access form\".-->\n\n<h1>Badge Access</h1>\n\n<h2>Fields to track badge access</h2>\n<ol>\n<li>Badge ID</li>\n<li>Badge Holder Name</li>\n<li>Date Issued</li>\n<li>Expiration Date</li>\n<li>Access Level</li>\n<li>Building Access</li>\n<li>Areas Access</li>\n<li>Doors Access</li>\n<li>Time Zone Restrictions</li>\n<li>Status (Active/Inactive)</li>\n</ol>\n\n<h2>Roles</h2>\nIdentify the roles people need to take to request, approve, and fulfill.\n<ul>\n<li>Request: Badge Holder</li>\n<li>Approve: Security/Administrative Personnel</li>\n<li>Fulfill: Security/Administrative Personnel</li>\n</ul>\n\n<h2>Self Service Form</h2>\n<ul>\n<li>Badge Holder Name</li>\n<li>Access Level</li>\n<li>Building Access</li>\n<li>Areas Access</li>\n<li>Doors Access</li>\n<li>Time Zone Restrictions</li>\n</ul>\n\n<h3>Process</h3>\n<div class=\"mermaid\">\ngraph TD\n  S0(Start)\n  A1(Approval for access)\n  T1(Task to fulfill access)\n  Sc1(Schedule expiration)\n  E0(End)\n\n  S0-->A1\n  A1--Rejected-->E0\n  A1--Approved-->T1\n  T1-->Sc1\n  Sc1-->E0\n</div>\n<h3>Integration</h3>\nCreate an integration between ServiceNow and BadgeSystem to automatically provision access.\n\nPossible paths for this.\n<ul>\n<li>BadgeSystem polls ServiceNow</li>\n  <ul>\n  <li>Every hour BadgeSystem hits the TableAPI for outstanding tasks.</li>\n  <li>Updates the tasks that automated work has started.</li>\n  <li>Processes the tasks.</li>\n  <li>If processing succeeds, close the task with success</li>\n  <li>Else Update the task that automation has failed</li>\n  </ul>\n<li>ServiceNow makes a rest call</li>\n  <li>When a task is ready to process e.g. state changes to ready, send a rest call to BadgeSystem</li>\n  <li>If processing succeeds, close the task with success</li>\n  <li>Else Update the task that automation has failed</li>\n</ul>\n<h3>Notifications</h3>\n\n<h4>Approval</h4>\nSubject: Badge Access Request for {current.variables.requested_for}\n\n{current.variables.requested_for} is requesting access to area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door}). Please review and approve or reject the request.\n\nThank you,\nSecurity Team\n\n<h4>Approved</h4>\nSubject: Badge Access Granted\n\nDear {current.variables.requested_for},\n\nYou have been granted access to area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door}). Your badge ID is {current.variables.badge_id} and it expires on {current.variables.expirationDate}.\n\nThank you,\nSecurity Team\n\n<h4>Rejected</h4>\nSubject: Badge Access Denied\n\nDear {current.variables.requested_for},\n\nYour request for access to area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door}) was denied. Please contact the Security Team for more information.\n\nThank you,\nSecurity Team\n\n<h4>Notice of expiring access</h4>\nSubject: Badge Access Expiring for area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door})\n\nDear {current.variables.requested_for},\n\nYour access to area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door}) expires in on on {current.variables.expirationDate}. If you still need this access please request it.\n\nThank you,\nSecurity Team\n\n<!--Fill out the below given this prompt \"Manage FOIA requests for contracts\".-->\n<h1>FOIA Request for Contracts </h1>\n\n<h2>Request Process</h2>\nCreate a process to allow for members of the public to submit FOIA requests for Contracts: \n<div class=\"mermaid\">\ngraph TD\n  S0((Start))\n  S1(Submit Request)\n  A2(Routing and receipt of  request)\n  A3(Review to determine if document is releasable)\n  T1(Obtain the requested document)\n  A4(Prepare releasable document)\n  A5(Approval to release)\n  T2(Produce requested document)\n  E0(End)\n\n  S0-->S1\n  S1-->A2\n  A2-->A3\n  A3--Yes-->T1\n  A3--No-->E0\n  T1-->A4\n  A4-->A5\n  A5--Yes-->T2\n  A5--No-->E0\n  T2-->E0\n</div>\n\n<h2>Roles</h2>\nIdentify any roles people need to take to request, approve, and fulfill.\n<ul>\n<li>Requester: Anyone can submit a request as long as the requirements are met.</li>\n<li>Approver: Agency representative or Agency FOIA Officer</li>\n<li>Fulfiller: Agency representative or Agency FOIA Officer</li>\n</ul>\n\n<h2>Self Service Form</h2>\nCreate fields for submitting a request in the ServiceNow Self Service Portal. \n<ol>\n<li>Requester Name</li>\n<li>Requester Phone</li>\n<li>Requester Email</li>\n<li>Agency Name</li>\n<li>Contract Number</li>\n<li>Brief description of the requested document</li>\n</ol>\n\n<h2>Notifications</h2>\n\n<h3>Request Submitted</h3>\nSubject: FOIA Request Submitted\n\nDear Applicant,\n\nYour FOIA request has been submitted. Your Request ID is: {current.variables.request_id}. Please note that your Request ID in all further correspondence.\n\nThank you,\nFOIA Office\n\n<h3>Request Received </h3>\nSubject: FOIA Request Received\n\nDear Agency Representative, \n\nA new FOIA request has been received. Please review the request and follow the process to respond. \n\nThank you, \nFOIA Office \n\n<h3>Request Approved </h3>\nSubject: FOIA Request Approved\n\nDear Agency Representative, \n\nFOIA Request {current.variables.request_id} has now been approved. Please proceed with preparing a releasable document. \n\nThank you,\nFOIA Office \n\n<h3>Request Rejected</h3>\nSubject: FOIA Request Rejected\n\nDear Applicant, \n\nYour FOIA Request {current.variables.request_id} has been rejected. Please contact the FOIA Representative for more information. \n\nThank you,\nFOIA Office\n<!--Fill out the below given this prompt \"approve if manager is present\"-->","action":"docs-process-maker","response":"\n<h1>Approve if Manager is Present</h1>\n\n<h2>Workflow</h2>\nCreate a workflow to approve a change if the manager is present.\n<div class=\"mermaid\">\ngraph TD\n  S0((Start))\n  A2(Manager Approval)\n  T1(Execute the change)\n  E0(End)\n\n  S0-->A2\n  A2--Yes-->T1\n  A2--No-->E0\n  T1-->E0\n</div>\n\n<h2>Roles</h2>\nIdentify the roles people need to take to request, approve, and fulfill.\n<ul>\n<li>Request: Change requester</li>\n<li>Approve: Change Manager</li>\n<li>Fulfill: Change Fulfiller/Engineer</li>\n</ul>\n\n<h2>Self Service Form</h2>\n<ul>\n<li>Requested For</li>\n<li>Requested Change</li>\n<li>Request Details</li>\n</ul>\n\n<h2>Notifications</h2>\n\n<h3>Request Submitted</h3>\nSubject: Change Request Submitted\n\nDear {current.variables.requested_for}\n\nYour change request has been submitted. Your Request ID is: {current.variables.request_id}. Please note that your Request ID in all further correspondence.\n\nThank you,\nChange Management Team\n\n<h3>Request Received </h3>\nSubject: Change Request Received\n\nDear Change Manager, \n\nA new change request has been received. Please review the request and follow the process to respond. \n\nThank you, \nChange Management Team\n\n<h3>Request Approved </h3>\nSubject: Change Request Approved\n\nDear Change Manager, \n\nChange Request {current.variables.request_id} has now been approved. Please proceed with executing the change. \n\nThank you,\nChange Management Team\n\n<h3>Request Rejected</h3>\nSubject: Change Request Rejected\n\nDear {current.variables.requested_for}, \n\nYour change Request {current.variables.request_id} has been rejected. Please contact the Change Manager for more information. \n\nThank you,\nChange Management Team\n \n \n"},
{"cuid":"cldbsurcx005vrg244j3c434u","createdAt":"2023-01-25 15:06:48.705","updatedAt":"2023-01-25 15:06:53.887","userCuid":"cld9unimw001vucgu2vi49gvt","prompt":"(function executeRule(current, previous) {\n    //gs.addInfoMessage(\"trying 1\");\n    var grp = new GlideRecord('sys_user_grmember');\n    grp.addQuery('group.sys_id', current.assignment_group);\n    grp.addQuery('user', current.assigned_to);\n    grp.query();\n    gs.addInfoMessage(\"trying 1\");\n\n    if (grp.hasNext()) {\n        gs.addInfoMessage(\"trying...\")\n        current.assigned_to = \"\";\n    }\n    current.update();\n})(current, previous);\n\"\"\"\ncurrent is tied to the sys_script record.\nExplain it like I'm five years old in the form of a list.\n1.","action":"explain","response":" The executeRule function is defined and takes two parameters: current and previous.\n2. A new GlideRecord is created for the sys_user_grmember table.\n3. A query is added to the GlideRecord for the group sys_id field and the current assignment_group value.\n4. Another query is added to the GlideRecord for the user field and the current assigned_to value.\n5. The GlideRecord is queried.\n6. If the GlideRecord has a next record, the assigned_to field is updated to an empty string.\n7. The current record is updated."},
{"cuid":"cldbsw7do005zrg24um9hp9k0","createdAt":"2023-01-25 15:07:56.125","updatedAt":"2023-01-25 15:08:00.213","userCuid":"cld9unimw001vucgu2vi49gvt","prompt":"Update this code based following this prompt, \"\": 1. The executeRule function is defined and takes two parameters: current and previous.\n2. A new GlideRecord is created for the sys_user_grmember table.\n3. A query is added to the GlideRecord for the group sys_id field and the current assignment_group value.\n4. Another query is added to the GlideRecord for the user field and the current assigned_to value.\n5. The GlideRecord is queried.\n6. If the GlideRecord has a next record, the assigned_to field is updated to an empty string.\n7. The current record is updated.\n// Generated by scribe.monster ```","action":"edit","response":"\n\nfunction executeRule(current, previous) {\n    var gr = new GlideRecord('sys_user_grmember');\n    gr.addQuery('group', current.assignment_group);\n    gr.addQuery('user', current.assigned_to);\n    gr.query();\n    if (gr.hasNext()) {\n        current.assigned_to = '';\n        current.update();\n    }\n}"},
{"cuid":"cldbtz9tr0062rg242pswangc","createdAt":"2023-01-25 15:38:18.88","updatedAt":"2023-01-25 15:38:22.149","userCuid":"cld9unimy004pucgu4tff4xl2","prompt":"javascript how to check for number\n\n\n\n","action":"ask","response":"\nYou can use the typeof operator to check a value's type. For example:\n\nif (typeof myValue === 'number') {\n  // myValue is a number\n} else {\n  // myValue is not a number\n}"},
{"cuid":"cldbz4bxg006arg246834n3jx","createdAt":"2023-01-25 18:02:12.964","updatedAt":"2023-01-25 18:02:13.699","userCuid":"cld9unimx003iucguho1c4kb0","prompt":"\n// Prompt: add a new button labeled \"2023\", to filter records created between 1/1/2023 and 12/31/2023\n","action":"complete","response":""},
{"cuid":"cldbz4qah006erg24hmitfzmv","createdAt":"2023-01-25 18:02:31.578","updatedAt":"2023-01-25 18:02:36.265","userCuid":"cld9unimx003iucguho1c4kb0","prompt":"<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<j:jelly trim=\"false\" xmlns:j=\"jelly:core\" xmlns:g=\"glide\" xmlns:j2=\"null\" xmlns:g2=\"null\">\n <script>\n     var my_dashboardMessageHandler = new DashboardMessageHandler(\"my_unique_id\");\n    \n    function publishFilter () {\n        var filter_message = {};\n        filter_message.id = \"my_unique_id\";\n        filter_message.table = \"task\";\n    \n    <!--     Add your own filter query logic here -->\n        filter_message.filter = \"assigned_toDYNAMIC90d1921e5f510100a9ad2572f2b477fe\";\n        SNC.canvas.interactiveFilters.setDefaultValue({\n                id: filter_message.id,\n                filters: [filter_message]\n            }, false);\n        my_dashboardMessageHandler.publishFilter(filter_message.table, filter_message.filter);\n    }\n    \n    function clearFilter() {\n        var filter_message = {};\n        filter_message.id = \"my_unique_id\";\n        filter_message.table = \"task\";\n        filter_message.filter = \"\";\n        SNC.canvas.interactiveFilters.setDefaultValue({\n                id: filter_message.id,\n                filters: [filter_message]\n            }, false);\n        my_dashboardMessageHandler.removeFilter();\n    }\n </script>   \n \nExample of a filter that generates a static filter on 'task' table reports, or removes it <br/>\n    <input id=\"allTasks\" type=\"button\" value=\"All tasks\" onclick=\"clearFilter();\" />\n    <input id=\"onlyMine\" type=\"button\" value=\"Only mine\" onclick=\"publishFilter();\" />\n    \n</j:jelly>\n\"\"\"\nExplain the above code step-by-step in simple english.","action":"explain","response":"\n\nThe code above defines a dashboard message handler with the id \"my_unique_id\". It then defines two functions, \"publishFilter\" and \"clearFilter\". \n\nThe \"publishFilter\" function creates a filter message with the id \"my_unique_id\", table \"task\", and filter \"assigned_toDYNAMIC90d1921e5f510100a9ad2572f2b477fe\". It then sets the default value for the message handler to the filter message and publishes the filter message. \n\nThe \"clearFilter\" function creates a filter message with the id \"my_unique_id\", table \"task\", and filter \"\". It then sets the default value for the message handler to the filter message and removes the filter message."},
{"cuid":"cldbzao86006hrg24ax46mska","createdAt":"2023-01-25 18:07:08.838","updatedAt":"2023-01-25 18:07:14.665","userCuid":"cld9unimy004iucgucx2j1ws4","prompt":"What are the new features in Tokyo for Service Catalog and Catalog Builder?","action":"ask","response":"\n\nThe new features in Tokyo for Service Catalog and Catalog Builder include: \n\n1. Ability to attach a PDF file to a form as a link. \n\n2. Ability to add a header, footer, and logo to a Service Catalog form. \n\n3. Ability to add a Terms & Conditions field to a Service Catalog form. \n\n4. Ability to create a Service Catalog request without a catalog item. \n\n5. The ability to create tables and columns in the Catalog Builder.\n\n6. Support for multi-level service catalog items and variables. \n\n7. The ability to set a variable data type. \n\n8. Ability to add a Service Catalog item as a related item. \n\n9. Ability to create a Service Catalog form with multiple sections. \n\n10. Ability to customize the Service Catalog request form layout."},
{"cuid":"cldbzcgaw006lrg24tl9bxfwp","createdAt":"2023-01-25 18:08:31.881","updatedAt":"2023-01-25 18:08:36.411","userCuid":"cld9unimy004iucgucx2j1ws4","prompt":"Which CMDB Workspace feature allows administrators to use natural language query in a search string?","action":"ask","response":"\n\nThe Natural Language Search feature in CMDB Workspace allows administrators to use natural language query in a search string. This feature enables administrators to quickly search for the desired information within the CMDB using natural language instead of complex Boolean operators."},
{"cuid":"cldbze0dx006prg24fviwkldq","createdAt":"2023-01-25 18:09:44.566","updatedAt":"2023-01-25 18:09:46.773","userCuid":"cld9unimw000wucguenaahfdy","prompt":"\n// Prompt: When the caller is set to jace, set the group to cab\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 'jace') { // when the new value is jace\n        g_form.setValue('assignment_group', 'cab'); // set the group to cab, replace w/sysid\n    }\n}\n// Prompt: If the book changes to read, set the date to today.\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n  if (isLoading || newValue === '') { return; }\n  if (newValue == 'read') { // when the new value is read\n    var now = new Date(); // make a variable for today\n    var dateInUserFormat = getDateTimeFromFormat(now, g_user_date_time_format); // get it in the users format\n    g_form.setValue('date', dateInUserFormat); // set the date to today\n  }\n}\n// Prompt: show me the groups the user picked is a member of\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    var userAjax = new GlideAjax('global.UserAjax'); // call the UserAjax Script Include\n    userAjax.addParam('sysparm_name', 'getGroups'); // call the getGroups function\n    userAjax.addParam('sysparm_obj', JSON.stringify({\"userId\": newValue})); // pass in the new value for the user\n    userAjax.getXML(function(response){\n        var responseDocument = response.responseXML.document.Element.getAttribute('answer'); //get the answer\n        var serverObj = JSON.parse(answer); // make it a json object\n        var groups = serverObj.groups.join(', '); // make it a string with commas\n        g_form.addInfoMessage(groupString); // show it on the form\n    })\n}\n// Prompt: when food quantity becomes zero, require reason\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 0) { // when the new value is zero\n        g_form.setMandatory('reason', true);\n    }\n}\n// Prompt: if 'u_dispatch' is 'true' and assignment group is empty, i want the assignment group to be 'Level 2 - Field Service Coordination'\n    ","action":"complete","response":"function onChange(control, oldValue, newValue, isLoading, isTemplate) {\n        if (isLoading || newValue === '') { return; }\n        if (newValue == true) { // when the new value is true\n            g_form.setValue('assignment_group', 'Level 2 - Field Service Coordination'); // set the group to Level 2 - Field Service Coordination\n        }\n    }\n\n\n"},
{"cuid":"cldbzmgk4006trg241f6wnln7","createdAt":"2023-01-25 18:16:18.772","updatedAt":"2023-01-25 18:16:24.767","userCuid":"cld9unimw000wucguenaahfdy","prompt":"when u_dispatch is true, assignment group is blank, and status is open, assign the ticket to Level 2 - Field Service Coordination and set the configuration item to the incident configuration item","action":"complete","response":". \n            #when u_dispatch is false,  assignment group is blank, and status is closed, do nothing\n            #when u_dispatch is false,  assignment group is blank, and status is open, do nothing\n            #when u_dispatch is false,  assignment group is blank, and status is closed, do nothing\n            #when u_dispatch is false,  assignment group is blank, and status is open, do nothing\n            #when u_dispatch is false,  assignment group is blank, and status is closed, do nothing\n            #when u_dispatch is false,  assignment group is blank, and status is open, do nothing\n            #when u_dispatch is false,  assignment group is blank, and status is closed, do nothing\n            #when u_dispatch is false,  assignment group is blank, and status is open, do nothing\n            #when u_dispatch is false,  assignment group is blank, and status is closed, do nothing\n            \n          end\n        elsif (status == \"closed\")\n          #when the status is closed, the ticket is closed\n          Ticket.find(ticket_id).update(u_dispatch: \"false\")\n          Ticket.find(ticket_id).update(status: \"closed\")\n          Ticket.find(ticket_id).update(assignment_group: \"\")\n          Ticket.find(ticket_id).update(u_assigned_to: \"\")\n        elsif (status == \"resolved\")\n          Ticket.find(ticket_id).update(u_dispatch: \"false\")\n          Ticket.find(ticket_id).update(status: \"closed\")\n          Ticket.find(ticket_id).update(assignment_group: \"\")\n          Ticket.find(ticket_id).update(u_assigned_to: \"\")\n        end\n      end\n    end\n  end\n  \n  \n  \n  \n  def self.get_incidents(config_item_id)\n    #this method takes a config item id and returns a list of tickets associated with that config item\n    incidents = []\n    #incident_id = Incident.find_by(configuration_item_id: config_item"},
{"cuid":"cldc215o8006zrg247bu1rq94","createdAt":"2023-01-25 19:23:43.737","updatedAt":"2023-01-25 19:23:45.889","userCuid":"cldc1kybi006xrg249d8sspw7","prompt":"Summarize this text for me in a few sentences.\"\n","action":"summarize-1","response":"\nThis text is about an individual setting off on an adventure to explore a magical kingdom in a far-off land. The protagonist encounters numerous fantastical creatures and foes along their journey as they strive to find a hidden magical treasure. The adventure ultimately ends in success and they return home with the treasure in tow."},
{"cuid":"cldc21zck0073rg246p35dt0f","createdAt":"2023-01-25 19:24:22.196","updatedAt":"2023-01-25 19:24:27.341","userCuid":"cld9unimy004pucgu4tff4xl2","prompt":"give me some examples of servicenow servicemapping\n\n\n\n","action":"ask","response":"1. Incident Management: Track and resolve incidents quickly and efficiently with ServiceNow Service Mapping.\n\n2. Asset Management: Get real-time visibility into the health and performance of IT assets with ServiceNow Service Mapping.\n\n3. Release Automation: Streamline the application release process with ServiceNow Service Mapping.\n\n4. IT Process Automation: Automate and streamline IT processes with ServiceNow Service Mapping.\n\n5. Event Management: Automate the process of creating and managing events with ServiceNow Service Mapping.\n\n6. Business Service Monitoring: Monitor business services in real-time with ServiceNow Service Mapping.\n\n7. Service Request Management: Automate the process of creating and managing service requests with ServiceNow Service Mapping.\n\n8. Change Management: Automate the process of creating and managing changes with ServiceNow Service Mapping."},
{"cuid":"cldc22ptk0076rg24lwqnch2s","createdAt":"2023-01-25 19:24:56.504","updatedAt":"2023-01-25 19:25:07.189","userCuid":"cld9unimy004pucgu4tff4xl2","prompt":"give me some examples of servicenow servicemapping for assets\n\n\n\n\n","action":"ask","response":"1. Automated Discovery of Network Assets: Using a combination of discovery methods, ServiceNow Service Mapping can detect, map and track assets across virtual, physical and cloud environments.\n\n2. Automated Dependency Mapping: ServiceNow Service Mapping can automatically detect and map dependencies between assets and services, helping IT teams quickly identify the root cause of incidents and outages.\n\n3. Automated Configuration Management: ServiceNow Service Mapping can automatically track changes to assets and services, allowing IT teams to identify and address configuration drift quickly.\n\n4. Automated Performance Monitoring: ServiceNow Service Mapping can monitor the performance of services and assets in real-time, helping IT teams proactively detect and address performance issues.\n\n5. Automated Impact Analysis: ServiceNow Service Mapping can provide detailed impact analysis of incidents and changes to services, helping IT teams understand the potential impact of changes before they are implemented."},
{"cuid":"cldc28pga0079rg24uqstbz5z","createdAt":"2023-01-25 19:29:35.963","updatedAt":"2023-01-25 19:29:38.388","userCuid":"cld9unimy004iucgucx2j1ws4","prompt":"What are the updates on the incident management module in Tokyo?","action":"ask","response":"\n\nAt this time, the incident management module in Tokyo is still in the development phase. The module is being built on the existing platform and will provide a centralized location for incident tracking and management. The module is expected to include features such as notifications, escalation paths, and real-time reporting. It is expected to be released in early 2021."},
{"cuid":"cldc5fagc007crg24xaa7sf8t","createdAt":"2023-01-25 20:58:41.964","updatedAt":"2023-01-25 20:58:48.619","userCuid":"cld9unimy004pucgu4tff4xl2","prompt":"give me some examples of double negative\n\n\n\n\n\n","action":"ask","response":"1. I don't got no money\n2. She ain't never seen nothing like it\n3. He don't know nothing about it\n4. I haven't got nothing to do\n5. He ain't never heard of it before\n6. We don't need no help\n7. I ain't never seen one before\n8. They didn't give us no information\n9. She hasn't got nothing to say\n10. I can't get no satisfaction"},
{"cuid":"cldc5fj02007frg24zf7bh9q9","createdAt":"2023-01-25 20:58:53.042","updatedAt":"2023-01-25 20:59:00.107","userCuid":"cld9unimy004pucgu4tff4xl2","prompt":"give me some examples of javascript double negative\n\n\n\n\n\n\nLet’s think step by step.\n","action":"ask-step-by-step","response":"\n1. No one doesn't like ice cream.\n2. Nothing isn't impossible.\n3. Nobody isn't invited.\n4. Nothing isn't worth trying.\n5. Nobody isn't welcome here.\n6. Nobody isn't capable of learning.\n7. Nobody isn't capable of success.\n8. Nothing isn't worth the effort.\n9. Nobody isn't capable of greatness.\n10. Nothing isn't worth pursuing."},
{"cuid":"cldc5gi6y007lrg24ve5m1415","createdAt":"2023-01-25 20:59:38.651","updatedAt":"2023-01-25 20:59:46.884","userCuid":"cld9unimy004pucgu4tff4xl2","prompt":"give me some examples of javascript double negative boolean\n\n\n\n\n\n\nLet’s think step by step.\n","action":"ask-step-by-step","response":"\n1. What is a JavaScript double negative boolean?\n\nA double negative boolean is a logical expression that uses two negative terms to form a positive statement. This type of expression is often used in programming languages such as JavaScript.\n\n2. What are some examples of JavaScript double negative booleans?\n\n• !(false) – This statement evaluates to true, because the double negative turns the false statement into a positive statement.\n\n• !(!true) – This statement also evaluates to true, because the two negations cancel each other out.\n\n• !(!!false) – This statement evaluates to false, because the two negations cancel each other out and the false statement remains negative."},
{"cuid":"cldc5hsuz007prg249aded3hx","createdAt":"2023-01-25 21:00:39.131","updatedAt":"2023-01-25 21:00:41.077","userCuid":"cldc1kybi006xrg249d8sspw7","prompt":"\n// Prompt: Create a script that sets the assignment group to the Manager's group if the priority is 1.\n(function executeRule(current, previous) {\n    if (current.getValue('priority', '1')) {\n        current.setValue('group', current.manager.group + '');\n    }\n})(current, previous);\n// Prompt: when status changes, if closed, set active to false\n(function executeRule(current, previous) {\n    // condition current.status.changes()\n    if (current.status == 'closed_created' || current.status == 'closed_duplicate' || current.status == 'closed_invalid') {\n        current.active = false;\n    } else {\n        current.active = true;\n    }\n})(current, previous);\n// Prompt: when change request changes, set parent to change request\n(function executeRule(current, previous) {\n    // condition current.change_request.changes()\n    current.parent = current.change_request;\n})(current, previous);\n// Prompt: do not allow changes to others delegates\n(function executeRule(current, previous) {\n    // condition current.user != gs.getUserID() && !gs.hasRole('admin')\n    gs.addInfoMessage(gs.getMessage(\"Cannot assign or modify other users' Delegates\"));\n    current.setAbortAction(true);\n})(current, previous);\n// Prompt: get the bot icon for slack, and set it from the response\n(function executeRule(current, previous) {\n    try {\n        var req = new sn_ws.RESTMessageV2();\n        req.setEndpoint('https://slack.com/api/team.info');\n        req.setHttpMethod('get');\n        var e = new GlideEncryptionUtil();\n        var authToken = e.getClearPassword2('token_verification', 'token', current.provider_auth.outbound_message_creation);\n        if (JSUtil.notNil(authToken))\n            req.setRequestHeader('Authorization', 'Bearer ' + authToken);\n        var resp = req.execute();\n        var team_icon = JSON.parse(resp.getBody()).team.icon.image_88;\n        current.setValue(\"icon\", team_icon);\n    } catch (ex) {\n        gs.error('Error getting slack team info: ' + ex.getMessage());\n    }\n})(current, previous);\n// Prompt: when the start and end dates change, only allow dates where the start is before the end\n(function executeRule(current, previous) {\n    // condition current.start_date.changes() || current.end_date.changes()\n    if (!current.start_date.nil() && !current.end_date.nil() && current.start_date > current.end_date) {\n        current.setAbortAction(true);\n        gs.addErrorMessage(gs.getMessage(\"The start date cannot be after the end date\"));\n    }\n})(current, previous);\n// Prompt: when the date changes is empty, format it in the star trek format (YYYY.ElapsedDays) and set it in the star date field\n(function executeRule(current, previous) {\n    // condition current.date.changes()\n    if (!current.date.nil()) {\n        var date = new GlideDateTime(current.date);\n        var year = date.getYear();\n        var elapsedDays = date.getElapsed(date.getNumericValue());\n        current.star_date = year + '.' + elapsedDays;\n    }\n})(current, previous);\n// Prompt: When caller is my manager, add a work note of \"My manager created an incident\"\n","action":"complete","response":"(function executeRule(current, previous) {\n    // condition current.caller.nil() && current.caller.changes()\n    if (current.caller == current.manager) {\n        current.insertWorkNote(current.manager, 'My manager created an incident', false);\n    }\n})(current, previous);\n"},
{"cuid":"cldc5i3bj007trg2472z5pxwb","createdAt":"2023-01-25 21:00:52.688","updatedAt":"2023-01-25 21:00:54.767","userCuid":"cldc1kybi006xrg249d8sspw7","prompt":"(function executeRule(current, previous) {\n    // condition current.caller.nil() && current.caller.changes()\n    if (current.caller == current.manager) {\n        current.insertWorkNote(current.manager, 'My manager created an incident', false);\n    }\n})(current, previous);\n\n// Generated by scribe.monster\n\"\"\"\ncurrent is tied to the sys_script record.\nExplain it like I'm five years old in the form of a list.\n1.","action":"explain","response":" current.caller.nil() && current.caller.changes()\n2. if current.caller == current.manager\n3. current.insertWorkNote(current.manager, 'My manager created an incident', false);"},
{"cuid":"cldc5it9t007xrg24ah7tyifq","createdAt":"2023-01-25 21:01:26.321","updatedAt":"2023-01-25 21:01:29.469","userCuid":"cldc1kybi006xrg249d8sspw7","prompt":"1. current.caller.nil() && current.caller.changes()\n2. if current.caller == current.manager\n3. current.insertWorkNote(current.manager, 'My manager created an incident', false);\n// Generated by scribe.monster\n\"\"\"\ncurrent is tied to the sys_script record.\nExplain it like I'm five years old in the form of a list.\n1.","action":"explain","response":" current.caller.nil() && current.caller.changes()\n2. if current.caller == current.manager\n3. current.insertWorkNote(current.manager, 'My manager created an incident', false);\n\nThis script is checking to see if the current caller (the person who triggered the script) is the same as the current manager. If so, it inserts a work note saying \"My manager created an incident\"."},
{"cuid":"cldc5p8hl0082rg24gwxbc82d","createdAt":"2023-01-25 21:06:25.977","updatedAt":"2023-01-25 21:06:27.538","userCuid":"cldc1kybi006xrg249d8sspw7","prompt":"\n// Prompt: Create a script that sets the assignment group to the Manager's group if the priority is 1.\n(function executeRule(current, previous) {\n    if (current.getValue('priority', '1')) {\n        current.setValue('group', current.manager.group + '');\n    }\n})(current, previous);\n// Prompt: when status changes, if closed, set active to false\n(function executeRule(current, previous) {\n    // condition current.status.changes()\n    if (current.status == 'closed_created' || current.status == 'closed_duplicate' || current.status == 'closed_invalid') {\n        current.active = false;\n    } else {\n        current.active = true;\n    }\n})(current, previous);\n// Prompt: when change request changes, set parent to change request\n(function executeRule(current, previous) {\n    // condition current.change_request.changes()\n    current.parent = current.change_request;\n})(current, previous);\n// Prompt: do not allow changes to others delegates\n(function executeRule(current, previous) {\n    // condition current.user != gs.getUserID() && !gs.hasRole('admin')\n    gs.addInfoMessage(gs.getMessage(\"Cannot assign or modify other users' Delegates\"));\n    current.setAbortAction(true);\n})(current, previous);\n// Prompt: get the bot icon for slack, and set it from the response\n(function executeRule(current, previous) {\n    try {\n        var req = new sn_ws.RESTMessageV2();\n        req.setEndpoint('https://slack.com/api/team.info');\n        req.setHttpMethod('get');\n        var e = new GlideEncryptionUtil();\n        var authToken = e.getClearPassword2('token_verification', 'token', current.provider_auth.outbound_message_creation);\n        if (JSUtil.notNil(authToken))\n            req.setRequestHeader('Authorization', 'Bearer ' + authToken);\n        var resp = req.execute();\n        var team_icon = JSON.parse(resp.getBody()).team.icon.image_88;\n        current.setValue(\"icon\", team_icon);\n    } catch (ex) {\n        gs.error('Error getting slack team info: ' + ex.getMessage());\n    }\n})(current, previous);\n// Prompt: when the start and end dates change, only allow dates where the start is before the end\n(function executeRule(current, previous) {\n    // condition current.start_date.changes() || current.end_date.changes()\n    if (!current.start_date.nil() && !current.end_date.nil() && current.start_date > current.end_date) {\n        current.setAbortAction(true);\n        gs.addErrorMessage(gs.getMessage(\"The start date cannot be after the end date\"));\n    }\n})(current, previous);\n// Prompt: when the date changes is empty, format it in the star trek format (YYYY.ElapsedDays) and set it in the star date field\n(function executeRule(current, previous) {\n    // condition current.date.changes()\n    if (!current.date.nil()) {\n        var date = new GlideDateTime(current.date);\n        var year = date.getYear();\n        var elapsedDays = date.getElapsed(date.getNumericValue());\n        current.star_date = year + '.' + elapsedDays;\n    }\n})(current, previous);\n// Prompt: When caller is Stew, set comment to \"I'm on my way!\"\n","action":"complete","response":"(function executeRule(current, previous) {\n    // condition current.caller == 'stew'\n    if (current.caller == 'stew') {\n        current.comment = 'I\\'m on my way!';\n    }\n})(current, previous);\n"},
{"cuid":"cldd8j2wb00agrg24nahnfxgx","createdAt":"2023-01-26 15:13:23.819","updatedAt":"2023-01-26 15:13:30.284","userCuid":"cld9unimy004kucgu07nfahsg","prompt":"\n// Prompt: Create a script that sets the assignment group to the Manager's group if the priority is 1.\n(function executeRule(current, previous) {\n    if (current.getValue('priority', '1')) {\n        current.setValue('group', current.manager.group + '');\n    }\n})(current, previous);\n// Prompt: when status changes, if closed, set active to false\n(function executeRule(current, previous) {\n    // condition current.status.changes()\n    if (current.status == 'closed_created' || current.status == 'closed_duplicate' || current.status == 'closed_invalid') {\n        current.active = false;\n    } else {\n        current.active = true;\n    }\n})(current, previous);\n// Prompt: when change request changes, set parent to change request\n(function executeRule(current, previous) {\n    // condition current.change_request.changes()\n    current.parent = current.change_request;\n})(current, previous);\n// Prompt: do not allow changes to others delegates\n(function executeRule(current, previous) {\n    // condition current.user != gs.getUserID() && !gs.hasRole('admin')\n    gs.addInfoMessage(gs.getMessage(\"Cannot assign or modify other users' Delegates\"));\n    current.setAbortAction(true);\n})(current, previous);\n// Prompt: get the bot icon for slack, and set it from the response\n(function executeRule(current, previous) {\n    try {\n        var req = new sn_ws.RESTMessageV2();\n        req.setEndpoint('https://slack.com/api/team.info');\n        req.setHttpMethod('get');\n        var e = new GlideEncryptionUtil();\n        var authToken = e.getClearPassword2('token_verification', 'token', current.provider_auth.outbound_message_creation);\n        if (JSUtil.notNil(authToken))\n            req.setRequestHeader('Authorization', 'Bearer ' + authToken);\n        var resp = req.execute();\n        var team_icon = JSON.parse(resp.getBody()).team.icon.image_88;\n        current.setValue(\"icon\", team_icon);\n    } catch (ex) {\n        gs.error('Error getting slack team info: ' + ex.getMessage());\n    }\n})(current, previous);\n// Prompt: when the start and end dates change, only allow dates where the start is before the end\n(function executeRule(current, previous) {\n    // condition current.start_date.changes() || current.end_date.changes()\n    if (!current.start_date.nil() && !current.end_date.nil() && current.start_date > current.end_date) {\n        current.setAbortAction(true);\n        gs.addErrorMessage(gs.getMessage(\"The start date cannot be after the end date\"));\n    }\n})(current, previous);\n// Prompt: when the date changes is empty, format it in the star trek format (YYYY.ElapsedDays) and set it in the star date field\n(function executeRule(current, previous) {\n    // condition current.date.changes()\n    if (!current.date.nil()) {\n        var date = new GlideDateTime(current.date);\n        var year = date.getYear();\n        var elapsedDays = date.getElapsed(date.getNumericValue());\n        current.star_date = year + '.' + elapsedDays;\n    }\n})(current, previous);\n// Prompt: Send email to  caller_id with subject incident number is updated\n","action":"complete","response":"(function executeRule(current, previous) {\n    // condition current.number.changes()\n    var email = new sn_ws.RESTMessageV2();\n    var e = new GlideEncryptionUtil();\n    var authToken = e.getClearPassword2('token_verification', 'token', current.provider_auth.outbound_message_creation);\n    var sendTo = new sn_ws.RESTMessageV2();\n    var sendFrom = new sn_ws.RESTMessageV2();\n    if (JSUtil.notNil(authToken)) {\n        email.setRequestHeader('Authorization', 'Bearer ' + authToken);\n        sendTo.setRequestHeader('Authorization', 'Bearer ' + authToken);\n        sendFrom.setRequestHeader('Authorization', 'Bearer ' + authToken);\n    }\n    //email.setEndpoint('https://api.sendgrid.com/v3/mail/send');\n    email.setEndpoint('https://api.sendgrid.com/v3/mail/send');\n    email.setHttpMethod('post');\n    email.setContentType('application/json');\n    email.setRequestBody('{\"personalizations\": [{\"to\": [{\"email\": \"' + current.caller_id + '\"}]}],\"from\": {\"email\": \"order.processing@exosite.com\"},\"subject\": \"Incident Number is Updated - Incident ' + current.number + '\",\"content\": [{\"type\": \"text/plain\",\"value\": \"Incident ' + current.number + ' is updated.\"}]}');\n    email.execute();\n    var sendTo = 'order.processing@exosite.com';\n    var sendFrom = 'order.processing@exosite.com';\n    sendTo.setRequestHeader('Authorization', 'Bearer ' + authToken);\n    sendFrom.setRequestHeader('Authorization', 'Bearer ' + authToken);\n    sendTo.setEndpoint('https://api.sendgrid.com/v3/mail/send');\n    sendTo.setHttpMethod('post');\n    sendTo.setContentType('application/json');\n    sendTo.setRequestBody('{\""},
{"cuid":"cldc5pi6g0086rg2485c219av","createdAt":"2023-01-25 21:06:38.536","updatedAt":"2023-01-25 21:06:40.544","userCuid":"cldc1kybi006xrg249d8sspw7","prompt":"\n// Prompt: Create a script that sets the assignment group to the Manager's group if the priority is 1.\n(function executeRule(current, previous) {\n    if (current.getValue('priority', '1')) {\n        current.setValue('group', current.manager.group + '');\n    }\n})(current, previous);\n// Prompt: when status changes, if closed, set active to false\n(function executeRule(current, previous) {\n    // condition current.status.changes()\n    if (current.status == 'closed_created' || current.status == 'closed_duplicate' || current.status == 'closed_invalid') {\n        current.active = false;\n    } else {\n        current.active = true;\n    }\n})(current, previous);\n// Prompt: when change request changes, set parent to change request\n(function executeRule(current, previous) {\n    // condition current.change_request.changes()\n    current.parent = current.change_request;\n})(current, previous);\n// Prompt: do not allow changes to others delegates\n(function executeRule(current, previous) {\n    // condition current.user != gs.getUserID() && !gs.hasRole('admin')\n    gs.addInfoMessage(gs.getMessage(\"Cannot assign or modify other users' Delegates\"));\n    current.setAbortAction(true);\n})(current, previous);\n// Prompt: get the bot icon for slack, and set it from the response\n(function executeRule(current, previous) {\n    try {\n        var req = new sn_ws.RESTMessageV2();\n        req.setEndpoint('https://slack.com/api/team.info');\n        req.setHttpMethod('get');\n        var e = new GlideEncryptionUtil();\n        var authToken = e.getClearPassword2('token_verification', 'token', current.provider_auth.outbound_message_creation);\n        if (JSUtil.notNil(authToken))\n            req.setRequestHeader('Authorization', 'Bearer ' + authToken);\n        var resp = req.execute();\n        var team_icon = JSON.parse(resp.getBody()).team.icon.image_88;\n        current.setValue(\"icon\", team_icon);\n    } catch (ex) {\n        gs.error('Error getting slack team info: ' + ex.getMessage());\n    }\n})(current, previous);\n// Prompt: when the start and end dates change, only allow dates where the start is before the end\n(function executeRule(current, previous) {\n    // condition current.start_date.changes() || current.end_date.changes()\n    if (!current.start_date.nil() && !current.end_date.nil() && current.start_date > current.end_date) {\n        current.setAbortAction(true);\n        gs.addErrorMessage(gs.getMessage(\"The start date cannot be after the end date\"));\n    }\n})(current, previous);\n// Prompt: when the date changes is empty, format it in the star trek format (YYYY.ElapsedDays) and set it in the star date field\n(function executeRule(current, previous) {\n    // condition current.date.changes()\n    if (!current.date.nil()) {\n        var date = new GlideDateTime(current.date);\n        var year = date.getYear();\n        var elapsedDays = date.getElapsed(date.getNumericValue());\n        current.star_date = year + '.' + elapsedDays;\n    }\n})(current, previous);\n// Prompt: When caller is Stew, set work notes to \"I'm on my way!\"\n","action":"complete","response":"(function executeRule(current, previous) {\n    // condition current.caller.changes() && current.caller == 'stew'\n    if (current.caller == 'stew') {\n        var currentTime = new GlideDateTime();\n        current.work_notes = 'I\\'m on my way!';\n        current.setValue('sys_mod_count', current.sys_mod_count + 1);\n        current.setValue('sys_updated_on', currentTime);\n        current.setValue('sys_updated_by', current.sys_updated_by + '');\n    }\n})(current, previous);\n"},
{"cuid":"cldc96io3008arg24pgxc8b46","createdAt":"2023-01-25 22:43:51.171","updatedAt":"2023-01-25 22:43:53.612","userCuid":"cld9unimy0053ucguh4y25ejw","prompt":"What are the key points and main ideas of {\"_resolveOrderGroupRef: function(sessionID, syscode) {\n\t\tif (!sessionID || !syscode) {\n            this.log(\"all\", \"PlanonStandardOrder._resolveOrderGroupRef - Error - Missing Parameter - Session ID or Syscode not provided\");\n        }\n\t\t\n\t\tvar requestStatus;\n        var responseBody;\n\t\tvar orderGroupName = \"\";\n\n        try {\n            var sm = new sn_ws.SOAPMessageV2(this.ORDER_GROUP_SOAP_MESSAGE, \"read\");\n            sm.setStringParameter(\"session_id\", sessionID);\n            sm.setStringParameter(\"syscode\", syscode);\n            sm.setRequestHeader(\"Content-Type\", this.CONTENT_TYPE);\n            var response = sm.execute();\n            responseBody = response.haveError() ? response.getErrorMessage() : response.getBody();\n            requestStatus = response.getStatusCode();\n\n        } catch (ex) {\n            responseBody = ex.getMessage();\n            requestStatus = '500';\n            this.log(\"info\", \"Error \" + requestStatus + ' - ' + responseBody);\n            return false;\n\n        } finally {\n            this.log(\"all\", \"PlanonStandardOrder: Successfully resolved OrderGroupRef name - Response:\\n\\n\" + responseBody);\n\n        }\n\t\t\n\t\tvar orderGroupRecord = this.xmlRecordToObject(responseBody, '//ns:return');\n\t\t\n\t\torderGroupName = orderGroupRecord.name;\n\n        return orderGroupName;\n\t\t\n\t},\"}","action":"summarize-2","response":"\n\nThe key points and main ideas of this functional block is to resolve an order group reference based on an incoming session ID and syscode. It achieves this outcome by creating a SOAPmessage that is sent using the provided parameters, before transforming the response body into an object and accessing the name parameter of this object. Finally, it returns the order group name upon success."},
{"cuid":"cldc9774y008erg245l2pcpz2","createdAt":"2023-01-25 22:44:22.883","updatedAt":"2023-01-25 22:44:24.866","userCuid":"cld9unimy0053ucguh4y25ejw","prompt":"Summarize this text for me in a few sentences.\"\n_resolveOrderGroupRef: function(sessionID, syscode) {\n\t\tif (!sessionID || !syscode) {\n            this.log(\"all\", \"PlanonStandardOrder._resolveOrderGroupRef - Error - Missing Parameter - Session ID or Syscode not provided\");\n        }\n\t\t\n\t\tvar requestStatus;\n        var responseBody;\n\t\tvar orderGroupName = \"\";\n\n        try {\n            var sm = new sn_ws.SOAPMessageV2(this.ORDER_GROUP_SOAP_MESSAGE, \"read\");\n            sm.setStringParameter(\"session_id\", sessionID);\n            sm.setStringParameter(\"syscode\", syscode);\n            sm.setRequestHeader(\"Content-Type\", this.CONTENT_TYPE);\n            var response = sm.execute();\n            responseBody = response.haveError() ? response.getErrorMessage() : response.getBody();\n            requestStatus = response.getStatusCode();\n\n        } catch (ex) {\n            responseBody = ex.getMessage();\n            requestStatus = '500';\n            this.log(\"info\", \"Error \" + requestStatus + ' - ' + responseBody);\n            return false;\n\n        } finally {\n            this.log(\"all\", \"PlanonStandardOrder: Successfully resolved OrderGroupRef name - Response:\\n\\n\" + responseBody);\n\n        }\n\t\t\n\t\tvar orderGroupRecord = this.xmlRecordToObject(responseBody, '//ns:return');\n\t\t\n\t\torderGroupName = orderGroupRecord.name;\n\n        return orderGroupName;\n\t\t\n\t},","action":"summarize-1","response":"\n\nThis function finds the name of an order group by using the session ID and syscode provided as parameters. It creates a SOAP Message request and an XML record response, and converts the response into an object from which it can access the order group's name. Finally, the name is returned."},
{"cuid":"cldcdm6fx008hrg24ckb595oj","createdAt":"2023-01-26 00:48:00.285","updatedAt":"2023-01-26 00:48:24.365","userCuid":"cld9unimw001yucgucbtj659g","prompt":"\n<!--Fill out the below given this prompt \"create a badge access form\".-->\n\n<h1>Badge Access</h1>\n\n<h2>Fields to track badge access</h2>\n<ol>\n<li>Badge ID</li>\n<li>Badge Holder Name</li>\n<li>Date Issued</li>\n<li>Expiration Date</li>\n<li>Access Level</li>\n<li>Building Access</li>\n<li>Areas Access</li>\n<li>Doors Access</li>\n<li>Time Zone Restrictions</li>\n<li>Status (Active/Inactive)</li>\n</ol>\n\n<h2>Roles</h2>\nIdentify the roles people need to take to request, approve, and fulfill.\n<ul>\n<li>Request: Badge Holder</li>\n<li>Approve: Security/Administrative Personnel</li>\n<li>Fulfill: Security/Administrative Personnel</li>\n</ul>\n\n<h2>Self Service Form</h2>\n<ul>\n<li>Badge Holder Name</li>\n<li>Access Level</li>\n<li>Building Access</li>\n<li>Areas Access</li>\n<li>Doors Access</li>\n<li>Time Zone Restrictions</li>\n</ul>\n\n<h3>Process</h3>\n<div class=\"mermaid\">\ngraph TD\n  S0(Start)\n  A1(Approval for access)\n  T1(Task to fulfill access)\n  Sc1(Schedule expiration)\n  E0(End)\n\n  S0-->A1\n  A1--Rejected-->E0\n  A1--Approved-->T1\n  T1-->Sc1\n  Sc1-->E0\n</div>\n<h3>Integration</h3>\nCreate an integration between ServiceNow and BadgeSystem to automatically provision access.\n\nPossible paths for this.\n<ul>\n<li>BadgeSystem polls ServiceNow</li>\n  <ul>\n  <li>Every hour BadgeSystem hits the TableAPI for outstanding tasks.</li>\n  <li>Updates the tasks that automated work has started.</li>\n  <li>Processes the tasks.</li>\n  <li>If processing succeeds, close the task with success</li>\n  <li>Else Update the task that automation has failed</li>\n  </ul>\n<li>ServiceNow makes a rest call</li>\n  <li>When a task is ready to process e.g. state changes to ready, send a rest call to BadgeSystem</li>\n  <li>If processing succeeds, close the task with success</li>\n  <li>Else Update the task that automation has failed</li>\n</ul>\n<h3>Notifications</h3>\n\n<h4>Approval</h4>\nSubject: Badge Access Request for {current.variables.requested_for}\n\n{current.variables.requested_for} is requesting access to area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door}). Please review and approve or reject the request.\n\nThank you,\nSecurity Team\n\n<h4>Approved</h4>\nSubject: Badge Access Granted\n\nDear {current.variables.requested_for},\n\nYou have been granted access to area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door}). Your badge ID is {current.variables.badge_id} and it expires on {current.variables.expirationDate}.\n\nThank you,\nSecurity Team\n\n<h4>Rejected</h4>\nSubject: Badge Access Denied\n\nDear {current.variables.requested_for},\n\nYour request for access to area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door}) was denied. Please contact the Security Team for more information.\n\nThank you,\nSecurity Team\n\n<h4>Notice of expiring access</h4>\nSubject: Badge Access Expiring for area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door})\n\nDear {current.variables.requested_for},\n\nYour access to area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door}) expires in on on {current.variables.expirationDate}. If you still need this access please request it.\n\nThank you,\nSecurity Team\n\n<!--Fill out the below given this prompt \"Manage FOIA requests for contracts\".-->\n<h1>FOIA Request for Contracts </h1>\n\n<h2>Request Process</h2>\nCreate a process to allow for members of the public to submit FOIA requests for Contracts: \n<div class=\"mermaid\">\ngraph TD\n  S0((Start))\n  S1(Submit Request)\n  A2(Routing and receipt of  request)\n  A3(Review to determine if document is releasable)\n  T1(Obtain the requested document)\n  A4(Prepare releasable document)\n  A5(Approval to release)\n  T2(Produce requested document)\n  E0(End)\n\n  S0-->S1\n  S1-->A2\n  A2-->A3\n  A3--Yes-->T1\n  A3--No-->E0\n  T1-->A4\n  A4-->A5\n  A5--Yes-->T2\n  A5--No-->E0\n  T2-->E0\n</div>\n\n<h2>Roles</h2>\nIdentify any roles people need to take to request, approve, and fulfill.\n<ul>\n<li>Requester: Anyone can submit a request as long as the requirements are met.</li>\n<li>Approver: Agency representative or Agency FOIA Officer</li>\n<li>Fulfiller: Agency representative or Agency FOIA Officer</li>\n</ul>\n\n<h2>Self Service Form</h2>\nCreate fields for submitting a request in the ServiceNow Self Service Portal. \n<ol>\n<li>Requester Name</li>\n<li>Requester Phone</li>\n<li>Requester Email</li>\n<li>Agency Name</li>\n<li>Contract Number</li>\n<li>Brief description of the requested document</li>\n</ol>\n\n<h2>Notifications</h2>\n\n<h3>Request Submitted</h3>\nSubject: FOIA Request Submitted\n\nDear Applicant,\n\nYour FOIA request has been submitted. Your Request ID is: {current.variables.request_id}. Please note that your Request ID in all further correspondence.\n\nThank you,\nFOIA Office\n\n<h3>Request Received </h3>\nSubject: FOIA Request Received\n\nDear Agency Representative, \n\nA new FOIA request has been received. Please review the request and follow the process to respond. \n\nThank you, \nFOIA Office \n\n<h3>Request Approved </h3>\nSubject: FOIA Request Approved\n\nDear Agency Representative, \n\nFOIA Request {current.variables.request_id} has now been approved. Please proceed with preparing a releasable document. \n\nThank you,\nFOIA Office \n\n<h3>Request Rejected</h3>\nSubject: FOIA Request Rejected\n\nDear Applicant, \n\nYour FOIA Request {current.variables.request_id} has been rejected. Please contact the FOIA Representative for more information. \n\nThank you,\nFOIA Office\n<!--Fill out the below given this prompt \"A intelligent AI prompt system that finds appropraite prompts then rebuilds the prompt\"-->","action":"docs-process-maker","response":"\n<h1>AI Prompt System</h1>\n\n<h2>Request Process</h2>\nCreate a process to allow for members of the public to submit FOIA requests for Contracts: \n<div class=\"mermaid\">\ngraph TD\n  S0((Start))\n  S1(Submit Request)\n  A2(Routing and receipt of  request)\n  A3(Review to determine if document is releasable)\n  T1(Obtain the requested document)\n  A4(Prepare releasable document)\n  A5(Approval to release)\n  T2(Produce requested document)\n  E0(End)\n\n  S0-->S1\n  S1-->A2\n  A2-->A3\n  A3--Yes-->T1\n  A3--No-->E0\n  T1-->A4\n  A4-->A5\n  A5--Yes-->T2\n  A5--No-->E0\n  T2-->E0\n</div>\n\n<h2>Roles</h2>\nIdentify any roles people need to take to request, approve, and fulfill.\n<ul>\n<li>Requester: Anyone can submit a request as long as the requirements are met.</li>\n<li>Approver: Agency representative or Agency FOIA Officer</li>\n<li>Fulfiller: Agency representative or Agency FOIA Officer</li>\n</ul>\n\n<h2>Self Service Form</h2>\nCreate fields for submitting a request in the ServiceNow Self Service Portal. \n<ol>\n<li>Requester Name</li>\n<li>Requester Phone</li>\n<li>Requester Email</li>\n<li>Agency Name</li>\n<li>Contract Number</li>\n<li>Brief description of the requested document</li>\n</ol>\n\n<h2>Notifications</h2>\n\n<h3>Request Submitted</h3>\nSubject: FOIA Request Submitted\n\nDear Applicant,\n\nYour FOIA request has been submitted. Your Request ID is: {current.variables.request_id}. Please note that your Request ID in all further correspondence.\n\nThank you,\nFOIA Office\n\n<h3>Request Received </h3>\nSubject: FOIA Request Received\n\nDear Agency Representative, \n\nA new FOIA request has been received. Please review the request and follow the process to respond. \n\nThank you, \nFOIA Office \n\n<h3>Request Approved </h3>\nSubject: FOIA Request Approved\n\nDear Agency Representative, \n\nFOIA Request {current.variables.request_id} has now been approved. Please proceed with preparing a releasable document. \n\nThank you,\nFOIA Office \n\n<h3>Request Rejected</h3>\nSubject: FOIA Request Rejected\n\nDear Applicant, \n\nYour FOIA Request {current.variables.request_id} has been rejected. Please contact the FOIA Representative for more information. \n\nThank you,\nFOIA Office\n"},
{"cuid":"cldcybt0q008krg245z5jnboq","createdAt":"2023-01-26 10:27:48.267","updatedAt":"2023-01-26 10:27:54.665","userCuid":"cld9unimy004pucgu4tff4xl2","prompt":"how to enable servicenow Enable Multi Source CMDB\n\n\n\n\n\n\n","action":"ask","response":"1. Navigate to System Definition > Plugins.\n2. Search for the plugin name Multi Source CMDB.\n3. Click the Activate link.\n4. Select the Activate checkbox, click Activate.\n5. Navigate to ServiceNow Home > Multi Source CMDB.\n6. Click the Configuration tab.\n7. Select the Enable Multi Source CMDB checkbox.\n8. Click the Save button."},
{"cuid":"cldcybzv6008nrg24pwne8yrp","createdAt":"2023-01-26 10:27:57.138","updatedAt":"2023-01-26 10:28:02.062","userCuid":"cld9unimy004pucgu4tff4xl2","prompt":"how to enable servicenow Multi Source CMDB\n\n\n\n\n\n\n","action":"ask","response":"1. Access the CMDB Settings page in ServiceNow by navigating to System Definition > CMDB Settings.\n2. In the “Multi-Source CMDB” section, select the “Enable Multi-Source CMDB” check box.\n3. Select “Save” to save your changes.\n4. To configure the multi-source CMDB, select the “Configuration” tab.\n5. In the “Configuration” tab, you can add new sources, configure existing sources, and set up the reconciliation rules.\n6. When you are finished, select “Save” to save your changes."},
{"cuid":"cldd210xf008qrg24nm1j4ywv","createdAt":"2023-01-26 12:11:23.764","updatedAt":"2023-01-26 12:11:30.092","userCuid":"cld9unimy004pucgu4tff4xl2","prompt":"how to discover Storage server in Servicenow\n\n\n\n\n\n\n","action":"ask","response":"\nTo discover a storage server in ServiceNow, you can use the Discovery application. \n\n1. Go to the Discovery application in the navigation bar. \n2. Click on Discovery Source Schedules tab. \n3. Click on New button on the right. \n4. Select a discovery source type that best matches the type of storage server you want to discover. \n5. Select a discovery schedule and enter the IP addresses or the range of IP addresses for the storage server. \n6. Click Submit to start the discovery process. \n7. Once the discovery is complete, you will be able to view the details of the storage server in the Discovery Status page."},
{"cuid":"cldd26dqw008trg24tw3594nr","createdAt":"2023-01-26 12:15:33.656","updatedAt":"2023-01-26 12:15:37.392","userCuid":"cld9unimy0054ucgu34kqd07f","prompt":"\n// Prompt: Set the color to purple, and date to now.\nfunction onLoad() {\n    g_form.setValue('color', 'purple'); // set the color to purple\n    var now = new Date(); // make a date obj for now\n    var dateInUserFormat = getDateTimeFromFormat(now, g_user_date_time_format); //set it to the logged in users format\n    g_form.setValue('date', dateInUserFormat);\n}\n// Prompt: If the user is not part of the Facilities Group, remove \"office\" from the type of access choice.\nfunction onLoad(){\n    var userAjax = new GlideAjax('global.UserAjax'); // make a ajax call to script include UserAjax\n    userAjax.addParam('sysparm_name', 'getGroups'); // call the getGroups function\n    userAjax.addParam('sysparm_obj', JSON.stringify({\"userId\": g_user.userId})); //pass in the logged in user's id\n    userAjax.getXML(function(response){ // handle the response\n        var answer = response.responseXML.document.Element.getAttribute('answer'); // get the answer\n        var serverObj = JSON.parse(answer); // make the response an object\n        var notPartOfFacilities = serverObj.groups.indexOf('Facitilites Group') == -1; // if groups does not contain facilities\n        if(notPartOfFacilities){\n            g_form.removeOption('office','access'); // remove this option\n        }\n    })\n}\n// Prompt: hid span with dom \n    ","action":"complete","response":"function onLoad(){\n        var userAjax = new GlideAjax('global.UserAjax'); // make a ajax call to script include UserAjax\n        userAjax.addParam('sysparm_name', 'getGroups'); // call the getGroups function\n        userAjax.addParam('sysparm_obj', JSON.stringify({\"userId\": g_user.userId})); //pass in the logged in user's id\n        userAjax.getXML(function(response){ // handle the response\n            var answer = response.responseXML.document.Element.getAttribute('answer'); // get the answer\n            var serverObj = JSON.parse(answer); // make the response an object\n            var notPartOfFacilities = serverObj.groups.indexOf('Facitilites Group') == -1; // if groups does not contain facilities\n            var span = document.getElementById(\"no_access\"); // get the span element\n            if(notPartOfFacilities){\n                span.style.display = \"none\"; //hide the span element\n            }\n        })\n    }"},
{"cuid":"cldd3kirp008xrg240f5fl85r","createdAt":"2023-01-26 12:54:32.965","updatedAt":"2023-01-26 12:54:34.365","userCuid":"cld9unimy0054ucgu34kqd07f","prompt":"\n// Prompt: Set the color to purple, and date to now.\nfunction onLoad() {\n    g_form.setValue('color', 'purple'); // set the color to purple\n    var now = new Date(); // make a date obj for now\n    var dateInUserFormat = getDateTimeFromFormat(now, g_user_date_time_format); //set it to the logged in users format\n    g_form.setValue('date', dateInUserFormat);\n}\n// Prompt: If the user is not part of the Facilities Group, remove \"office\" from the type of access choice.\nfunction onLoad(){\n    var userAjax = new GlideAjax('global.UserAjax'); // make a ajax call to script include UserAjax\n    userAjax.addParam('sysparm_name', 'getGroups'); // call the getGroups function\n    userAjax.addParam('sysparm_obj', JSON.stringify({\"userId\": g_user.userId})); //pass in the logged in user's id\n    userAjax.getXML(function(response){ // handle the response\n        var answer = response.responseXML.document.Element.getAttribute('answer'); // get the answer\n        var serverObj = JSON.parse(answer); // make the response an object\n        var notPartOfFacilities = serverObj.groups.indexOf('Facitilites Group') == -1; // if groups does not contain facilities\n        if(notPartOfFacilities){\n            g_form.removeOption('office','access'); // remove this option\n        }\n    })\n}\n// Prompt: hide spain with dom ro javascript\n    ","action":"complete","response":"function onLoad(){\n        var spainItem = document.querySelector('.spain');\n        spainItem.style.display = 'none';\n    }\n"},
{"cuid":"cldd43qog0095rg24zygtt0n7","createdAt":"2023-01-26 13:09:29.68","updatedAt":"2023-01-26 13:09:33.006","userCuid":"cldd3zurw0091rg24icskvyyb","prompt":"\n// Prompt: Create a script that sets the assignment group to the Manager's group if the priority is 1.\n(function executeRule(current, previous) {\n    if (current.getValue('priority', '1')) {\n        current.setValue('group', current.manager.group + '');\n    }\n})(current, previous);\n// Prompt: when status changes, if closed, set active to false\n(function executeRule(current, previous) {\n    // condition current.status.changes()\n    if (current.status == 'closed_created' || current.status == 'closed_duplicate' || current.status == 'closed_invalid') {\n        current.active = false;\n    } else {\n        current.active = true;\n    }\n})(current, previous);\n// Prompt: when change request changes, set parent to change request\n(function executeRule(current, previous) {\n    // condition current.change_request.changes()\n    current.parent = current.change_request;\n})(current, previous);\n// Prompt: do not allow changes to others delegates\n(function executeRule(current, previous) {\n    // condition current.user != gs.getUserID() && !gs.hasRole('admin')\n    gs.addInfoMessage(gs.getMessage(\"Cannot assign or modify other users' Delegates\"));\n    current.setAbortAction(true);\n})(current, previous);\n// Prompt: get the bot icon for slack, and set it from the response\n(function executeRule(current, previous) {\n    try {\n        var req = new sn_ws.RESTMessageV2();\n        req.setEndpoint('https://slack.com/api/team.info');\n        req.setHttpMethod('get');\n        var e = new GlideEncryptionUtil();\n        var authToken = e.getClearPassword2('token_verification', 'token', current.provider_auth.outbound_message_creation);\n        if (JSUtil.notNil(authToken))\n            req.setRequestHeader('Authorization', 'Bearer ' + authToken);\n        var resp = req.execute();\n        var team_icon = JSON.parse(resp.getBody()).team.icon.image_88;\n        current.setValue(\"icon\", team_icon);\n    } catch (ex) {\n        gs.error('Error getting slack team info: ' + ex.getMessage());\n    }\n})(current, previous);\n// Prompt: when the start and end dates change, only allow dates where the start is before the end\n(function executeRule(current, previous) {\n    // condition current.start_date.changes() || current.end_date.changes()\n    if (!current.start_date.nil() && !current.end_date.nil() && current.start_date > current.end_date) {\n        current.setAbortAction(true);\n        gs.addErrorMessage(gs.getMessage(\"The start date cannot be after the end date\"));\n    }\n})(current, previous);\n// Prompt: when the date changes is empty, format it in the star trek format (YYYY.ElapsedDays) and set it in the star date field\n(function executeRule(current, previous) {\n    // condition current.date.changes()\n    if (!current.date.nil()) {\n        var date = new GlideDateTime(current.date);\n        var year = date.getYear();\n        var elapsedDays = date.getElapsed(date.getNumericValue());\n        current.star_date = year + '.' + elapsedDays;\n    }\n})(current, previous);\n// Prompt: query user table and return the results in a variable where name contains Paul\n","action":"complete","response":"(function executeRule(current, previous) {\n    // condition current.name.contains('Paul')\n    var user = new GlideRecord('sys_user');\n    user.addQuery('name', 'Paul');\n    user.query();\n    var paul = new Array();\n    while (user.next()) {\n        var paulUser = new GlideRecord('sys_user');\n        paulUser.setValue('user', user.user);\n        paulUser.setValue('name', user.name);\n        paulUser.setValue('department', user.department);\n        paul.push(paulUser);\n    }\n    current.paul = paul;\n})(current, previous);\n"},
{"cuid":"cldd43qog0097rg24wsstvm21","createdAt":"2023-01-26 13:09:29.681","updatedAt":"2023-01-26 13:09:32.832","userCuid":"cldd3zurw0091rg24icskvyyb","prompt":"\n// Prompt: Create a script that sets the assignment group to the Manager's group if the priority is 1.\n(function executeRule(current, previous) {\n    if (current.getValue('priority', '1')) {\n        current.setValue('group', current.manager.group + '');\n    }\n})(current, previous);\n// Prompt: when status changes, if closed, set active to false\n(function executeRule(current, previous) {\n    // condition current.status.changes()\n    if (current.status == 'closed_created' || current.status == 'closed_duplicate' || current.status == 'closed_invalid') {\n        current.active = false;\n    } else {\n        current.active = true;\n    }\n})(current, previous);\n// Prompt: when change request changes, set parent to change request\n(function executeRule(current, previous) {\n    // condition current.change_request.changes()\n    current.parent = current.change_request;\n})(current, previous);\n// Prompt: do not allow changes to others delegates\n(function executeRule(current, previous) {\n    // condition current.user != gs.getUserID() && !gs.hasRole('admin')\n    gs.addInfoMessage(gs.getMessage(\"Cannot assign or modify other users' Delegates\"));\n    current.setAbortAction(true);\n})(current, previous);\n// Prompt: get the bot icon for slack, and set it from the response\n(function executeRule(current, previous) {\n    try {\n        var req = new sn_ws.RESTMessageV2();\n        req.setEndpoint('https://slack.com/api/team.info');\n        req.setHttpMethod('get');\n        var e = new GlideEncryptionUtil();\n        var authToken = e.getClearPassword2('token_verification', 'token', current.provider_auth.outbound_message_creation);\n        if (JSUtil.notNil(authToken))\n            req.setRequestHeader('Authorization', 'Bearer ' + authToken);\n        var resp = req.execute();\n        var team_icon = JSON.parse(resp.getBody()).team.icon.image_88;\n        current.setValue(\"icon\", team_icon);\n    } catch (ex) {\n        gs.error('Error getting slack team info: ' + ex.getMessage());\n    }\n})(current, previous);\n// Prompt: when the start and end dates change, only allow dates where the start is before the end\n(function executeRule(current, previous) {\n    // condition current.start_date.changes() || current.end_date.changes()\n    if (!current.start_date.nil() && !current.end_date.nil() && current.start_date > current.end_date) {\n        current.setAbortAction(true);\n        gs.addErrorMessage(gs.getMessage(\"The start date cannot be after the end date\"));\n    }\n})(current, previous);\n// Prompt: when the date changes is empty, format it in the star trek format (YYYY.ElapsedDays) and set it in the star date field\n(function executeRule(current, previous) {\n    // condition current.date.changes()\n    if (!current.date.nil()) {\n        var date = new GlideDateTime(current.date);\n        var year = date.getYear();\n        var elapsedDays = date.getElapsed(date.getNumericValue());\n        current.star_date = year + '.' + elapsedDays;\n    }\n})(current, previous);\n// Prompt: query user table and return the results in a variable where name contains Paul\n","action":"complete","response":"(function executeRule(current, previous) {\n    // condition current.user.changes()\n    var user = new GlideRecord('sys_user');\n    var userID = current.user;\n    if (JSUtil.notNil(userID)) {\n        user.addQuery('user', userID);\n        var users = user.query();\n        if (users.size() > 0) {\n            gs.addInfoMessage(gs.getMessage(\"Found \" + users.size() + \" users with the name Paul\"));\n            current.name = users.next().name;\n        }\n    }\n})(current, previous);\n"},
{"cuid":"cldd44oqy009crg2446lik0gr","createdAt":"2023-01-26 13:10:13.834","updatedAt":"2023-01-26 13:10:15.861","userCuid":"cldd3zurw0091rg24icskvyyb","prompt":"\n// Prompt: Create a script that sets the assignment group to the Manager's group if the priority is 1.\n(function executeRule(current, previous) {\n    if (current.getValue('priority', '1')) {\n        current.setValue('group', current.manager.group + '');\n    }\n})(current, previous);\n// Prompt: when status changes, if closed, set active to false\n(function executeRule(current, previous) {\n    // condition current.status.changes()\n    if (current.status == 'closed_created' || current.status == 'closed_duplicate' || current.status == 'closed_invalid') {\n        current.active = false;\n    } else {\n        current.active = true;\n    }\n})(current, previous);\n// Prompt: when change request changes, set parent to change request\n(function executeRule(current, previous) {\n    // condition current.change_request.changes()\n    current.parent = current.change_request;\n})(current, previous);\n// Prompt: do not allow changes to others delegates\n(function executeRule(current, previous) {\n    // condition current.user != gs.getUserID() && !gs.hasRole('admin')\n    gs.addInfoMessage(gs.getMessage(\"Cannot assign or modify other users' Delegates\"));\n    current.setAbortAction(true);\n})(current, previous);\n// Prompt: get the bot icon for slack, and set it from the response\n(function executeRule(current, previous) {\n    try {\n        var req = new sn_ws.RESTMessageV2();\n        req.setEndpoint('https://slack.com/api/team.info');\n        req.setHttpMethod('get');\n        var e = new GlideEncryptionUtil();\n        var authToken = e.getClearPassword2('token_verification', 'token', current.provider_auth.outbound_message_creation);\n        if (JSUtil.notNil(authToken))\n            req.setRequestHeader('Authorization', 'Bearer ' + authToken);\n        var resp = req.execute();\n        var team_icon = JSON.parse(resp.getBody()).team.icon.image_88;\n        current.setValue(\"icon\", team_icon);\n    } catch (ex) {\n        gs.error('Error getting slack team info: ' + ex.getMessage());\n    }\n})(current, previous);\n// Prompt: when the start and end dates change, only allow dates where the start is before the end\n(function executeRule(current, previous) {\n    // condition current.start_date.changes() || current.end_date.changes()\n    if (!current.start_date.nil() && !current.end_date.nil() && current.start_date > current.end_date) {\n        current.setAbortAction(true);\n        gs.addErrorMessage(gs.getMessage(\"The start date cannot be after the end date\"));\n    }\n})(current, previous);\n// Prompt: when the date changes is empty, format it in the star trek format (YYYY.ElapsedDays) and set it in the star date field\n(function executeRule(current, previous) {\n    // condition current.date.changes()\n    if (!current.date.nil()) {\n        var date = new GlideDateTime(current.date);\n        var year = date.getYear();\n        var elapsedDays = date.getElapsed(date.getNumericValue());\n        current.star_date = year + '.' + elapsedDays;\n    }\n})(current, previous);\n// Prompt: query user table and return the results in a variable where name contains keyword Paul\n","action":"complete","response":"(function executeRule(current, previous) {\n    var query = new GlideQuery('sys_user');\n    query.addQuery('name', 'Paul');\n    var results = query.query();\n    var numberOfRecords = results.getRowCount();\n    if (numberOfRecords > 0) {\n        var user = new GlideRecord('sys_user');\n        user.get(results.getValue('sys_id'));\n        current.setValue('user', user);\n    }\n})(current, previous);\n"},
{"cuid":"cldd4557r009grg24lvixm70h","createdAt":"2023-01-26 13:10:35.175","updatedAt":"2023-01-26 13:10:37.324","userCuid":"cldd3zurw0091rg24icskvyyb","prompt":"\n// Prompt: Create a script that sets the assignment group to the Manager's group if the priority is 1.\n(function executeRule(current, previous) {\n    if (current.getValue('priority', '1')) {\n        current.setValue('group', current.manager.group + '');\n    }\n})(current, previous);\n// Prompt: when status changes, if closed, set active to false\n(function executeRule(current, previous) {\n    // condition current.status.changes()\n    if (current.status == 'closed_created' || current.status == 'closed_duplicate' || current.status == 'closed_invalid') {\n        current.active = false;\n    } else {\n        current.active = true;\n    }\n})(current, previous);\n// Prompt: when change request changes, set parent to change request\n(function executeRule(current, previous) {\n    // condition current.change_request.changes()\n    current.parent = current.change_request;\n})(current, previous);\n// Prompt: do not allow changes to others delegates\n(function executeRule(current, previous) {\n    // condition current.user != gs.getUserID() && !gs.hasRole('admin')\n    gs.addInfoMessage(gs.getMessage(\"Cannot assign or modify other users' Delegates\"));\n    current.setAbortAction(true);\n})(current, previous);\n// Prompt: get the bot icon for slack, and set it from the response\n(function executeRule(current, previous) {\n    try {\n        var req = new sn_ws.RESTMessageV2();\n        req.setEndpoint('https://slack.com/api/team.info');\n        req.setHttpMethod('get');\n        var e = new GlideEncryptionUtil();\n        var authToken = e.getClearPassword2('token_verification', 'token', current.provider_auth.outbound_message_creation);\n        if (JSUtil.notNil(authToken))\n            req.setRequestHeader('Authorization', 'Bearer ' + authToken);\n        var resp = req.execute();\n        var team_icon = JSON.parse(resp.getBody()).team.icon.image_88;\n        current.setValue(\"icon\", team_icon);\n    } catch (ex) {\n        gs.error('Error getting slack team info: ' + ex.getMessage());\n    }\n})(current, previous);\n// Prompt: when the start and end dates change, only allow dates where the start is before the end\n(function executeRule(current, previous) {\n    // condition current.start_date.changes() || current.end_date.changes()\n    if (!current.start_date.nil() && !current.end_date.nil() && current.start_date > current.end_date) {\n        current.setAbortAction(true);\n        gs.addErrorMessage(gs.getMessage(\"The start date cannot be after the end date\"));\n    }\n})(current, previous);\n// Prompt: when the date changes is empty, format it in the star trek format (YYYY.ElapsedDays) and set it in the star date field\n(function executeRule(current, previous) {\n    // condition current.date.changes()\n    if (!current.date.nil()) {\n        var date = new GlideDateTime(current.date);\n        var year = date.getYear();\n        var elapsedDays = date.getElapsed(date.getNumericValue());\n        current.star_date = year + '.' + elapsedDays;\n    }\n})(current, previous);\n// Prompt: query user table and return the results in a variable where name contains word Paul\n","action":"complete","response":"(function executeRule(current, previous) {\n    // condition current.name.contains('Paul')\n    var results = gs.getQuery().from('sys_user').exec();\n})(current, previous);\n"},
{"cuid":"cldd47o89009lrg243zb7ycw2","createdAt":"2023-01-26 13:12:33.13","updatedAt":"2023-01-26 13:12:36.126","userCuid":"cldd3zurw0091rg24icskvyyb","prompt":"\n// Prompt: Create a script that sets the assignment group to the Manager's group if the priority is 1.\n(function executeRule(current, previous) {\n    if (current.getValue('priority', '1')) {\n        current.setValue('group', current.manager.group + '');\n    }\n})(current, previous);\n// Prompt: when status changes, if closed, set active to false\n(function executeRule(current, previous) {\n    // condition current.status.changes()\n    if (current.status == 'closed_created' || current.status == 'closed_duplicate' || current.status == 'closed_invalid') {\n        current.active = false;\n    } else {\n        current.active = true;\n    }\n})(current, previous);\n// Prompt: when change request changes, set parent to change request\n(function executeRule(current, previous) {\n    // condition current.change_request.changes()\n    current.parent = current.change_request;\n})(current, previous);\n// Prompt: do not allow changes to others delegates\n(function executeRule(current, previous) {\n    // condition current.user != gs.getUserID() && !gs.hasRole('admin')\n    gs.addInfoMessage(gs.getMessage(\"Cannot assign or modify other users' Delegates\"));\n    current.setAbortAction(true);\n})(current, previous);\n// Prompt: get the bot icon for slack, and set it from the response\n(function executeRule(current, previous) {\n    try {\n        var req = new sn_ws.RESTMessageV2();\n        req.setEndpoint('https://slack.com/api/team.info');\n        req.setHttpMethod('get');\n        var e = new GlideEncryptionUtil();\n        var authToken = e.getClearPassword2('token_verification', 'token', current.provider_auth.outbound_message_creation);\n        if (JSUtil.notNil(authToken))\n            req.setRequestHeader('Authorization', 'Bearer ' + authToken);\n        var resp = req.execute();\n        var team_icon = JSON.parse(resp.getBody()).team.icon.image_88;\n        current.setValue(\"icon\", team_icon);\n    } catch (ex) {\n        gs.error('Error getting slack team info: ' + ex.getMessage());\n    }\n})(current, previous);\n// Prompt: when the start and end dates change, only allow dates where the start is before the end\n(function executeRule(current, previous) {\n    // condition current.start_date.changes() || current.end_date.changes()\n    if (!current.start_date.nil() && !current.end_date.nil() && current.start_date > current.end_date) {\n        current.setAbortAction(true);\n        gs.addErrorMessage(gs.getMessage(\"The start date cannot be after the end date\"));\n    }\n})(current, previous);\n// Prompt: when the date changes is empty, format it in the star trek format (YYYY.ElapsedDays) and set it in the star date field\n(function executeRule(current, previous) {\n    // condition current.date.changes()\n    if (!current.date.nil()) {\n        var date = new GlideDateTime(current.date);\n        var year = date.getYear();\n        var elapsedDays = date.getElapsed(date.getNumericValue());\n        current.star_date = year + '.' + elapsedDays;\n    }\n})(current, previous);\n// Prompt: query the server table and return the owner of the server grouped by owner of the server\n","action":"complete","response":"(function executeRule(current, previous) {\n    // condition current.server_name.changes()\n    var server = current.server_name;\n    var serverTable = new GlideRecord('u_server');\n    serverTable.addQuery('u_server_name', server);\n    serverTable.query();\n    if (serverTable.next()) {\n        current.server_owner = serverTable.u_server_owner;\n    }\n})(current, previous);\n"},
{"cuid":"cldd48h7c009prg24jkv0ab9a","createdAt":"2023-01-26 13:13:10.68","updatedAt":"2023-01-26 13:13:15.506","userCuid":"cldd3zurw0091rg24icskvyyb","prompt":"\n// Prompt: Create a script that sets the assignment group to the Manager's group if the priority is 1.\n(function executeRule(current, previous) {\n    if (current.getValue('priority', '1')) {\n        current.setValue('group', current.manager.group + '');\n    }\n})(current, previous);\n// Prompt: when status changes, if closed, set active to false\n(function executeRule(current, previous) {\n    // condition current.status.changes()\n    if (current.status == 'closed_created' || current.status == 'closed_duplicate' || current.status == 'closed_invalid') {\n        current.active = false;\n    } else {\n        current.active = true;\n    }\n})(current, previous);\n// Prompt: when change request changes, set parent to change request\n(function executeRule(current, previous) {\n    // condition current.change_request.changes()\n    current.parent = current.change_request;\n})(current, previous);\n// Prompt: do not allow changes to others delegates\n(function executeRule(current, previous) {\n    // condition current.user != gs.getUserID() && !gs.hasRole('admin')\n    gs.addInfoMessage(gs.getMessage(\"Cannot assign or modify other users' Delegates\"));\n    current.setAbortAction(true);\n})(current, previous);\n// Prompt: get the bot icon for slack, and set it from the response\n(function executeRule(current, previous) {\n    try {\n        var req = new sn_ws.RESTMessageV2();\n        req.setEndpoint('https://slack.com/api/team.info');\n        req.setHttpMethod('get');\n        var e = new GlideEncryptionUtil();\n        var authToken = e.getClearPassword2('token_verification', 'token', current.provider_auth.outbound_message_creation);\n        if (JSUtil.notNil(authToken))\n            req.setRequestHeader('Authorization', 'Bearer ' + authToken);\n        var resp = req.execute();\n        var team_icon = JSON.parse(resp.getBody()).team.icon.image_88;\n        current.setValue(\"icon\", team_icon);\n    } catch (ex) {\n        gs.error('Error getting slack team info: ' + ex.getMessage());\n    }\n})(current, previous);\n// Prompt: when the start and end dates change, only allow dates where the start is before the end\n(function executeRule(current, previous) {\n    // condition current.start_date.changes() || current.end_date.changes()\n    if (!current.start_date.nil() && !current.end_date.nil() && current.start_date > current.end_date) {\n        current.setAbortAction(true);\n        gs.addErrorMessage(gs.getMessage(\"The start date cannot be after the end date\"));\n    }\n})(current, previous);\n// Prompt: when the date changes is empty, format it in the star trek format (YYYY.ElapsedDays) and set it in the star date field\n(function executeRule(current, previous) {\n    // condition current.date.changes()\n    if (!current.date.nil()) {\n        var date = new GlideDateTime(current.date);\n        var year = date.getYear();\n        var elapsedDays = date.getElapsed(date.getNumericValue());\n        current.star_date = year + '.' + elapsedDays;\n    }\n})(current, previous);\n// Prompt: query the server table and return the owner grouped by\n","action":"complete","response":"// date for the selected date range\n(function executeRule(current, previous) {\n    // condition current.date.changes()\n    if (!current.date.nil()) {\n        var query = new GlideQuery('incidents');\n        query.addQuery('active', 'true');\n        query.addQuery('date_closed', '<=', current.date);\n        query.addQuery('date_closed', '>=', current.date.addDays(-6));\n        if (current.provider_auth != null) {\n            var e = new GlideEncryptionUtil();\n            var authToken = e.getClearPassword2('token_verification', 'token', current.provider_auth.outbound_message_creation);\n            if (JSUtil.notNil(authToken))\n                query.setRequestHeader('Authorization', 'Bearer ' + authToken);\n        }\n        query.query();\n        while (query.next()) {\n            var owner = query.getValue('owner');\n            var date = query.getValue('date_closed');\n            // do not add if the owner is already in the list\n            if (!current.owner_grouped_by_date.contains(owner + '~' + date)) {\n                current.owner_grouped_by_date.add(owner + '~' + date);\n            }\n        }\n    }\n})(current, previous);\n"},
{"cuid":"cldd4cx8g009trg249uwjkruq","createdAt":"2023-01-26 13:16:38.08","updatedAt":"2023-01-26 13:16:41.584","userCuid":"cldd3zurw0091rg24icskvyyb","prompt":"\n// Prompt: Create a script that sets the assignment group to the Manager's group if the priority is 1.\n(function executeRule(current, previous) {\n    if (current.getValue('priority', '1')) {\n        current.setValue('group', current.manager.group + '');\n    }\n})(current, previous);\n// Prompt: when status changes, if closed, set active to false\n(function executeRule(current, previous) {\n    // condition current.status.changes()\n    if (current.status == 'closed_created' || current.status == 'closed_duplicate' || current.status == 'closed_invalid') {\n        current.active = false;\n    } else {\n        current.active = true;\n    }\n})(current, previous);\n// Prompt: when change request changes, set parent to change request\n(function executeRule(current, previous) {\n    // condition current.change_request.changes()\n    current.parent = current.change_request;\n})(current, previous);\n// Prompt: do not allow changes to others delegates\n(function executeRule(current, previous) {\n    // condition current.user != gs.getUserID() && !gs.hasRole('admin')\n    gs.addInfoMessage(gs.getMessage(\"Cannot assign or modify other users' Delegates\"));\n    current.setAbortAction(true);\n})(current, previous);\n// Prompt: get the bot icon for slack, and set it from the response\n(function executeRule(current, previous) {\n    try {\n        var req = new sn_ws.RESTMessageV2();\n        req.setEndpoint('https://slack.com/api/team.info');\n        req.setHttpMethod('get');\n        var e = new GlideEncryptionUtil();\n        var authToken = e.getClearPassword2('token_verification', 'token', current.provider_auth.outbound_message_creation);\n        if (JSUtil.notNil(authToken))\n            req.setRequestHeader('Authorization', 'Bearer ' + authToken);\n        var resp = req.execute();\n        var team_icon = JSON.parse(resp.getBody()).team.icon.image_88;\n        current.setValue(\"icon\", team_icon);\n    } catch (ex) {\n        gs.error('Error getting slack team info: ' + ex.getMessage());\n    }\n})(current, previous);\n// Prompt: when the start and end dates change, only allow dates where the start is before the end\n(function executeRule(current, previous) {\n    // condition current.start_date.changes() || current.end_date.changes()\n    if (!current.start_date.nil() && !current.end_date.nil() && current.start_date > current.end_date) {\n        current.setAbortAction(true);\n        gs.addErrorMessage(gs.getMessage(\"The start date cannot be after the end date\"));\n    }\n})(current, previous);\n// Prompt: when the date changes is empty, format it in the star trek format (YYYY.ElapsedDays) and set it in the star date field\n(function executeRule(current, previous) {\n    // condition current.date.changes()\n    if (!current.date.nil()) {\n        var date = new GlideDateTime(current.date);\n        var year = date.getYear();\n        var elapsedDays = date.getElapsed(date.getNumericValue());\n        current.star_date = year + '.' + elapsedDays;\n    }\n})(current, previous);\n// Prompt: query the cmdb_ci_serevr table and grouped by the owned_by\n","action":"complete","response":"(function executeRule(current, previous) {\n    // condition current.cmdb_ci_server.changes()\n    if (!current.cmdb_ci_server.nil()) {\n        // gs.info('cmdb_ci_server changed');\n        var server = new GlideRecord('cmdb_ci_server');\n        server.addQuery('name', current.cmdb_ci_server);\n        server.query();\n        if (server.next()) {\n            current.setValue('owned_by', server.owned_by);\n            // gs.info('Setting owned_by ' + server.owned_by);\n        } else {\n            gs.addErrorMessage(gs.getMessage(\"The server is either deleted or not valid any longer\"));\n        }\n    }\n})(current, previous);\n"},
{"cuid":"cldd4wr75009wrg24jjp8xw2i","createdAt":"2023-01-26 13:32:03.377","updatedAt":"2023-01-26 13:32:16.443","userCuid":"cld9unimy004pucgu4tff4xl2","prompt":"give me some examples how to compare GlideDate in Servicenow\n\n\n\n\n\n","action":"ask","response":"1. Using GlideDate.before(): This method returns true if the GlideDate object on which it is called is before the GlideDate passed as a parameter.\n\nExample: \n\n// Create two GlideDate objects\nvar gd1 = new GlideDate();\nvar gd2 = new GlideDate();\n\n// Set the date of one of the GlideDate objects\ngd1.setValue('2016-01-01');\n\n// Compare the two GlideDate objects\nif (gd1.before(gd2)) {\n    gs.info('gd1 is before gd2');\n} else {\n    gs.info('gd1 is not before gd2');\n}\n\n2. Using GlideDate.after(): This method returns true if the GlideDate object on which it is called is after the GlideDate passed as a parameter.\n\nExample:\n\n// Create two GlideDate objects\nvar gd1 = new GlideDate();\nvar gd2 = new GlideDate();\n\n// Set the date of one of the GlideDate objects\ngd1.setValue('2016-01-01');\n\n// Compare the two GlideDate objects\nif (gd1.after(gd2)) {\n    gs.info('gd1 is after gd2');\n} else {\n    gs.info('gd1 is not after gd2');\n}\n\n3. Using GlideDate.equals(): This method returns true if the GlideDate objects being compared are equal.\n\nExample:\n\n// Create two GlideDate objects\nvar gd1 = new GlideDate();\nvar gd2 = new GlideDate();\n\n// Set the date of one of the GlideDate objects\ngd1.setValue('2016-01-01');\n\n// Compare the two GlideDate objects\nif (gd1.equals(gd2)) {\n    gs.info('gd1 is equal to gd2');\n} else {\n    gs.info('gd1 is not equal to gd2');\n}"},
{"cuid":"cldd7w4b7009zrg2418vw9c19","createdAt":"2023-01-26 14:55:32.564","updatedAt":"2023-01-26 14:55:34.091","userCuid":"cld9unimy004kucgu07nfahsg","prompt":"\n// Prompt: Set the color to purple, and date to now.\nfunction onLoad() {\n    g_form.setValue('color', 'purple'); // set the color to purple\n    var now = new Date(); // make a date obj for now\n    var dateInUserFormat = getDateTimeFromFormat(now, g_user_date_time_format); //set it to the logged in users format\n    g_form.setValue('date', dateInUserFormat);\n}\n// Prompt: If the user is not part of the Facilities Group, remove \"office\" from the type of access choice.\nfunction onLoad(){\n    var userAjax = new GlideAjax('global.UserAjax'); // make a ajax call to script include UserAjax\n    userAjax.addParam('sysparm_name', 'getGroups'); // call the getGroups function\n    userAjax.addParam('sysparm_obj', JSON.stringify({\"userId\": g_user.userId})); //pass in the logged in user's id\n    userAjax.getXML(function(response){ // handle the response\n        var answer = response.responseXML.document.Element.getAttribute('answer'); // get the answer\n        var serverObj = JSON.parse(answer); // make the response an object\n        var notPartOfFacilities = serverObj.groups.indexOf('Facitilites Group') == -1; // if groups does not contain facilities\n        if(notPartOfFacilities){\n            g_form.removeOption('office','access'); // remove this option\n        }\n    })\n}\n// Prompt: if the description is empty, put an alert saying \"Description is important\".\n    ","action":"complete","response":"function onChange(element){\n        if(element.id == 'description' && element.getValue() == ''){\n            g_form.showErrorMessage('Description is important')\n        }\n    }\n"},
{"cuid":"cldd809gv00a3rg24rmsfdv5t","createdAt":"2023-01-26 14:58:45.871","updatedAt":"2023-01-26 14:58:48.15","userCuid":"cld9unimy004kucgu07nfahsg","prompt":"Update this code based following this prompt, \"if the description is empty, put an alert saying \"Description is important\".\": function onChange(element){\n        if(element.id == 'description' && element.getValue() == ''){\n            g_form.showErrorMessage('Description is important')\n        }\n    }\n\n// Generated by scribe.monster ```","action":"edit","response":"\n\nfunction onChange(element){\n    if(element.id == 'description' && element.getValue() == ''){\n        g_form.showErrorMessage('Description is important')\n    }\n}"},
{"cuid":"cldd85clw00a7rg24cv2s2n8x","createdAt":"2023-01-26 15:02:43.221","updatedAt":"2023-01-26 15:02:45.165","userCuid":"cldd3zurw0091rg24icskvyyb","prompt":"(function executeRule(current, previous) {\n    // condition current.cmdb_ci_server.changes()\n    if (!current.cmdb_ci_server.nil()) {\n        // gs.info('cmdb_ci_server changed');\n        var server = new GlideRecord('cmdb_ci_server');\n        server.addQuery('name', current.cmdb_ci_server);\n        server.query();\n        if (server.next()) {\n            current.setValue('owned_by', server.owned_by);\n            // gs.info('Setting owned_by ' + server.owned_by);\n        } else {\n            gs.addErrorMessage(gs.getMessage(\"The server is either deleted or not valid any longer\"));\n        }\n    }\n})(current, previous);\n\n// Generated by scribe.monster\n\"\"\"\ncurrent is tied to the sys_script record.\nExplain it like I'm five years old in the form of a list.\n1.","action":"explain","response":" sys_script is a record in ServiceNow.\n2. current is the most recent version of that record.\n3. previous is the version of that record before the current one."},
{"cuid":"cldd86usz00adrg242sgj1d98","createdAt":"2023-01-26 15:03:53.46","updatedAt":"2023-01-26 15:03:56.934","userCuid":"cldd3zurw0091rg24icskvyyb","prompt":"\n// Prompt: Create a script that sets the assignment group to the Manager's group if the priority is 1.\n(function executeRule(current, previous) {\n    if (current.getValue('priority', '1')) {\n        current.setValue('group', current.manager.group + '');\n    }\n})(current, previous);\n// Prompt: when status changes, if closed, set active to false\n(function executeRule(current, previous) {\n    // condition current.status.changes()\n    if (current.status == 'closed_created' || current.status == 'closed_duplicate' || current.status == 'closed_invalid') {\n        current.active = false;\n    } else {\n        current.active = true;\n    }\n})(current, previous);\n// Prompt: when change request changes, set parent to change request\n(function executeRule(current, previous) {\n    // condition current.change_request.changes()\n    current.parent = current.change_request;\n})(current, previous);\n// Prompt: do not allow changes to others delegates\n(function executeRule(current, previous) {\n    // condition current.user != gs.getUserID() && !gs.hasRole('admin')\n    gs.addInfoMessage(gs.getMessage(\"Cannot assign or modify other users' Delegates\"));\n    current.setAbortAction(true);\n})(current, previous);\n// Prompt: get the bot icon for slack, and set it from the response\n(function executeRule(current, previous) {\n    try {\n        var req = new sn_ws.RESTMessageV2();\n        req.setEndpoint('https://slack.com/api/team.info');\n        req.setHttpMethod('get');\n        var e = new GlideEncryptionUtil();\n        var authToken = e.getClearPassword2('token_verification', 'token', current.provider_auth.outbound_message_creation);\n        if (JSUtil.notNil(authToken))\n            req.setRequestHeader('Authorization', 'Bearer ' + authToken);\n        var resp = req.execute();\n        var team_icon = JSON.parse(resp.getBody()).team.icon.image_88;\n        current.setValue(\"icon\", team_icon);\n    } catch (ex) {\n        gs.error('Error getting slack team info: ' + ex.getMessage());\n    }\n})(current, previous);\n// Prompt: when the start and end dates change, only allow dates where the start is before the end\n(function executeRule(current, previous) {\n    // condition current.start_date.changes() || current.end_date.changes()\n    if (!current.start_date.nil() && !current.end_date.nil() && current.start_date > current.end_date) {\n        current.setAbortAction(true);\n        gs.addErrorMessage(gs.getMessage(\"The start date cannot be after the end date\"));\n    }\n})(current, previous);\n// Prompt: when the date changes is empty, format it in the star trek format (YYYY.ElapsedDays) and set it in the star date field\n(function executeRule(current, previous) {\n    // condition current.date.changes()\n    if (!current.date.nil()) {\n        var date = new GlideDateTime(current.date);\n        var year = date.getYear();\n        var elapsedDays = date.getElapsed(date.getNumericValue());\n        current.star_date = year + '.' + elapsedDays;\n    }\n})(current, previous);\n// Prompt: query all priority 2 incidents which are in resolved state and then set the status of those incidents to closed\n","action":"complete","response":"(function executeRule(current, previous) {\n    // condition current.priority == '2' && current.status == 'resolved'\n    if (current.priority == '2' && current.status == 'resolved') {\n        var incidents = new GlideRecord('incident');\n        incidents.addQuery('priority', '2');\n        incidents.addQuery('status', 'resolved');\n        incidents.query();\n        while (incidents.next()) {\n            incidents.status = 'closed';\n            gs.debug(incidents.getDisplayValue('number') + ': ' + incidents.status.displayValue);\n            incidents.update();\n        }\n    }\n})(current, previous);\n"},
{"cuid":"cldd8smb400akrg24wnqq5zyh","createdAt":"2023-01-26 15:20:48.881","updatedAt":"2023-01-26 15:20:51.41","userCuid":"cld9unimy004kucgu07nfahsg","prompt":"\n// Prompt: Create a script that sets the assignment group to the Manager's group if the priority is 1.\n(function executeRule(current, previous) {\n    if (current.getValue('priority', '1')) {\n        current.setValue('group', current.manager.group + '');\n    }\n})(current, previous);\n// Prompt: when status changes, if closed, set active to false\n(function executeRule(current, previous) {\n    // condition current.status.changes()\n    if (current.status == 'closed_created' || current.status == 'closed_duplicate' || current.status == 'closed_invalid') {\n        current.active = false;\n    } else {\n        current.active = true;\n    }\n})(current, previous);\n// Prompt: when change request changes, set parent to change request\n(function executeRule(current, previous) {\n    // condition current.change_request.changes()\n    current.parent = current.change_request;\n})(current, previous);\n// Prompt: do not allow changes to others delegates\n(function executeRule(current, previous) {\n    // condition current.user != gs.getUserID() && !gs.hasRole('admin')\n    gs.addInfoMessage(gs.getMessage(\"Cannot assign or modify other users' Delegates\"));\n    current.setAbortAction(true);\n})(current, previous);\n// Prompt: get the bot icon for slack, and set it from the response\n(function executeRule(current, previous) {\n    try {\n        var req = new sn_ws.RESTMessageV2();\n        req.setEndpoint('https://slack.com/api/team.info');\n        req.setHttpMethod('get');\n        var e = new GlideEncryptionUtil();\n        var authToken = e.getClearPassword2('token_verification', 'token', current.provider_auth.outbound_message_creation);\n        if (JSUtil.notNil(authToken))\n            req.setRequestHeader('Authorization', 'Bearer ' + authToken);\n        var resp = req.execute();\n        var team_icon = JSON.parse(resp.getBody()).team.icon.image_88;\n        current.setValue(\"icon\", team_icon);\n    } catch (ex) {\n        gs.error('Error getting slack team info: ' + ex.getMessage());\n    }\n})(current, previous);\n// Prompt: when the start and end dates change, only allow dates where the start is before the end\n(function executeRule(current, previous) {\n    // condition current.start_date.changes() || current.end_date.changes()\n    if (!current.start_date.nil() && !current.end_date.nil() && current.start_date > current.end_date) {\n        current.setAbortAction(true);\n        gs.addErrorMessage(gs.getMessage(\"The start date cannot be after the end date\"));\n    }\n})(current, previous);\n// Prompt: when the date changes is empty, format it in the star trek format (YYYY.ElapsedDays) and set it in the star date field\n(function executeRule(current, previous) {\n    // condition current.date.changes()\n    if (!current.date.nil()) {\n        var date = new GlideDateTime(current.date);\n        var year = date.getYear();\n        var elapsedDays = date.getElapsed(date.getNumericValue());\n        current.star_date = year + '.' + elapsedDays;\n    }\n})(current, previous);\n// Prompt: when caller is Rodrigo Ortega change short desciption to \"He funcionado\"\n","action":"complete","response":"(function executeRule(current, previous) {\n    // condition current.caller.changes() && current.caller.ID == \"5c5d9f2dc5c5d5f5c5d5d5e\"\n    if (current.caller.ID == \"5c5d9f2dc5c5d5f5c5d5d5e\") {\n        current.short_description = \"He funcionado\";\n    }\n})(current, previous);"},
{"cuid":"clddacuwq00anrg24hmqochuu","createdAt":"2023-01-26 16:04:32.763","updatedAt":"2023-01-26 16:04:36.793","userCuid":"cld9unimw000wucguenaahfdy","prompt":"\n// Prompt: When the caller is set to jace, set the group to cab\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 'jace') { // when the new value is jace\n        g_form.setValue('assignment_group', 'cab'); // set the group to cab, replace w/sysid\n    }\n}\n// Prompt: If the book changes to read, set the date to today.\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n  if (isLoading || newValue === '') { return; }\n  if (newValue == 'read') { // when the new value is read\n    var now = new Date(); // make a variable for today\n    var dateInUserFormat = getDateTimeFromFormat(now, g_user_date_time_format); // get it in the users format\n    g_form.setValue('date', dateInUserFormat); // set the date to today\n  }\n}\n// Prompt: show me the groups the user picked is a member of\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    var userAjax = new GlideAjax('global.UserAjax'); // call the UserAjax Script Include\n    userAjax.addParam('sysparm_name', 'getGroups'); // call the getGroups function\n    userAjax.addParam('sysparm_obj', JSON.stringify({\"userId\": newValue})); // pass in the new value for the user\n    userAjax.getXML(function(response){\n        var responseDocument = response.responseXML.document.Element.getAttribute('answer'); //get the answer\n        var serverObj = JSON.parse(answer); // make it a json object\n        var groups = serverObj.groups.join(', '); // make it a string with commas\n        g_form.addInfoMessage(groupString); // show it on the form\n    })\n}\n// Prompt: when food quantity becomes zero, require reason\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 0) { // when the new value is zero\n        g_form.setMandatory('reason', true);\n    }\n}\n// Prompt: when u_dispatch is true, and assignment group is blank, and status is open, assign the ticket to Level 2 - Field Service Coordination and set the configuration item to the incident configuration item\n    ","action":"complete","response":"function onchange(control, oldValue, newValue, isLoading, isTemplate) {\n        if (isLoading || newValue === '') { return; }\n        if (newValue == 'true') { // when the new value is true\n            var assignmentGroup = g_form.getValue('assignment_group'); // get the assignment group\n            if (assignmentGroup === '') { // if the assignment group is blank\n                g_form.setValue('assignment_group', 'Level 2 - Field Service Coordination'); // set the assignment group to Level 2 - Field Service Coordination\n                var configurationItem = g_form.getValue('configuration_item'); // get the configuration item\n                if (configurationItem != '') { // if the configuration item is not blank\n                    g_form.setValue('incident_configuration_item', configurationItem); // set the incident configuration item to the configuration item\n                }\n            }\n        }\n    }\n"},
{"cuid":"clddaohqj00aqrg24f8e0vbj9","createdAt":"2023-01-26 16:13:35.563","updatedAt":"2023-01-26 16:13:40.21","userCuid":"cld9unimw000wucguenaahfdy","prompt":"\n// Prompt: When the caller is set to jace, set the group to cab\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 'jace') { // when the new value is jace\n        g_form.setValue('assignment_group', 'cab'); // set the group to cab, replace w/sysid\n    }\n}\n// Prompt: If the book changes to read, set the date to today.\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n  if (isLoading || newValue === '') { return; }\n  if (newValue == 'read') { // when the new value is read\n    var now = new Date(); // make a variable for today\n    var dateInUserFormat = getDateTimeFromFormat(now, g_user_date_time_format); // get it in the users format\n    g_form.setValue('date', dateInUserFormat); // set the date to today\n  }\n}\n// Prompt: show me the groups the user picked is a member of\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    var userAjax = new GlideAjax('global.UserAjax'); // call the UserAjax Script Include\n    userAjax.addParam('sysparm_name', 'getGroups'); // call the getGroups function\n    userAjax.addParam('sysparm_obj', JSON.stringify({\"userId\": newValue})); // pass in the new value for the user\n    userAjax.getXML(function(response){\n        var responseDocument = response.responseXML.document.Element.getAttribute('answer'); //get the answer\n        var serverObj = JSON.parse(answer); // make it a json object\n        var groups = serverObj.groups.join(', '); // make it a string with commas\n        g_form.addInfoMessage(groupString); // show it on the form\n    })\n}\n// Prompt: when food quantity becomes zero, require reason\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 0) { // when the new value is zero\n        g_form.setMandatory('reason', true);\n    }\n}\n// Prompt: IF dispatch is true assignment group is blank state is open configuration item is not blank  THEN set the assignment group to Level 2 - Field Service Coordination set the configuration item same from incident\n    ","action":"complete","response":"  function onChange(control, oldValue, newValue, isLoading, isTemplate) {\n          if (isLoading || newValue === '') { return; }\n          if (newValue) {\n              var incident = new GlideRecord('incident');\n              incident.addQuery('number', newValue);\n              incident.query();\n              if (incident.next()) {\n                  if (incident.assignment_group.nil || !incident.assignment_group) {\n                      g_form.setValue('assignment_group', 'Level 2 - Field Service Coordination');\n                      g_form.setValue('u_configuration_item', incident.u_configuration_item);\n                  }\n              }\n          }\n      }\n"},
{"cuid":"clddarq7800aurg248botpd7l","createdAt":"2023-01-26 16:16:06.5","updatedAt":"2023-01-26 16:16:09.736","userCuid":"cld9unimw000wucguenaahfdy","prompt":"\n// Prompt: When the caller is set to jace, set the group to cab\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 'jace') { // when the new value is jace\n        g_form.setValue('assignment_group', 'cab'); // set the group to cab, replace w/sysid\n    }\n}\n// Prompt: If the book changes to read, set the date to today.\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n  if (isLoading || newValue === '') { return; }\n  if (newValue == 'read') { // when the new value is read\n    var now = new Date(); // make a variable for today\n    var dateInUserFormat = getDateTimeFromFormat(now, g_user_date_time_format); // get it in the users format\n    g_form.setValue('date', dateInUserFormat); // set the date to today\n  }\n}\n// Prompt: show me the groups the user picked is a member of\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    var userAjax = new GlideAjax('global.UserAjax'); // call the UserAjax Script Include\n    userAjax.addParam('sysparm_name', 'getGroups'); // call the getGroups function\n    userAjax.addParam('sysparm_obj', JSON.stringify({\"userId\": newValue})); // pass in the new value for the user\n    userAjax.getXML(function(response){\n        var responseDocument = response.responseXML.document.Element.getAttribute('answer'); //get the answer\n        var serverObj = JSON.parse(answer); // make it a json object\n        var groups = serverObj.groups.join(', '); // make it a string with commas\n        g_form.addInfoMessage(groupString); // show it on the form\n    })\n}\n// Prompt: when food quantity becomes zero, require reason\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 0) { // when the new value is zero\n        g_form.setMandatory('reason', true);\n    }\n}\n// Prompt: if the field named u_dispatch changes to true, and assignment group is empty, and the state is open, and configuration item is not blank, then set the assignment group to Level 2 - Field Service Coordination and set the configuration item same from incident\n    ","action":"complete","response":"function onChange(control, oldValue, newValue, isLoading, isTemplate) {\n        if (isLoading) { return; }\n        if (newValue == true) {\n            var group = g_form.getValue('assignment_group');\n            var state = g_form.getValue('state');\n            var item = g_form.getValue('u_configuration_item');\n            if (!group && state == '1' && item) {\n                g_form.setValue('assignment_group', 'Level 2 - Field Service Coordination');\n                g_form.setValue('u_configuration_item', item);\n            }\n        }\n    }\n"},
{"cuid":"clddazan700ayrg24zyqcno6j","createdAt":"2023-01-26 16:21:59.587","updatedAt":"2023-01-26 16:22:04.065","userCuid":"cld9unimw000wucguenaahfdy","prompt":"\n// Prompt: When the caller is set to jace, set the group to cab\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 'jace') { // when the new value is jace\n        g_form.setValue('assignment_group', 'cab'); // set the group to cab, replace w/sysid\n    }\n}\n// Prompt: If the book changes to read, set the date to today.\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n  if (isLoading || newValue === '') { return; }\n  if (newValue == 'read') { // when the new value is read\n    var now = new Date(); // make a variable for today\n    var dateInUserFormat = getDateTimeFromFormat(now, g_user_date_time_format); // get it in the users format\n    g_form.setValue('date', dateInUserFormat); // set the date to today\n  }\n}\n// Prompt: show me the groups the user picked is a member of\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    var userAjax = new GlideAjax('global.UserAjax'); // call the UserAjax Script Include\n    userAjax.addParam('sysparm_name', 'getGroups'); // call the getGroups function\n    userAjax.addParam('sysparm_obj', JSON.stringify({\"userId\": newValue})); // pass in the new value for the user\n    userAjax.getXML(function(response){\n        var responseDocument = response.responseXML.document.Element.getAttribute('answer'); //get the answer\n        var serverObj = JSON.parse(answer); // make it a json object\n        var groups = serverObj.groups.join(', '); // make it a string with commas\n        g_form.addInfoMessage(groupString); // show it on the form\n    })\n}\n// Prompt: when food quantity becomes zero, require reason\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 0) { // when the new value is zero\n        g_form.setMandatory('reason', true);\n    }\n}\n// Prompt: if the field named u_dispatch changes to true, and assignment group is empty, and the state is open, and cmdb_ci is not blank, then set the assignment group to Level 2 - Field Service Coordination and set the cmdb_ci same as the incident incident.cmdb_ci\n    ","action":"complete","response":"function onChange(control, oldValue, newValue, isLoading, isTemplate) {\n        if (isLoading || newValue === '') { return; }\n        if (newValue == true) { // when the new value is true\n            var incident = new GlideRecord('incident'); // make a new incident\n            incident.addQuery('sys_id', g_form.getValue('caller_id')); // get the caller_id field\n            incident.query(); // run the query\n            if (incident.next()) { // if the incident is found\n                if (g_form.getValue('assignment_group') == '') { // if the assignment group is empty\n                    if (g_form.getValue('state') == '2') { // if the state is open\n                        if (g_form.getValue('cmdb_ci') != '') { // if the cmdb ci is not blank\n                            g_form.setValue('assignment_group', 'Level 2 - Field Service Coordination'); // set the assignment group to Level 2 - Field Service Coordination\n                            g_form.setValue('cmdb_ci', incident.cmdb_ci); // set the cmdb ci to the incident's cmdb ci\n                        }\n                    }\n                }\n            }\n        }\n    }"},
{"cuid":"clddb0ww000b1rg24ibeu1q67","createdAt":"2023-01-26 16:23:15.072","updatedAt":"2023-01-26 16:23:20.816","userCuid":"cld9unimw000wucguenaahfdy","prompt":"\n// Prompt: When the caller is set to jace, set the group to cab\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 'jace') { // when the new value is jace\n        g_form.setValue('assignment_group', 'cab'); // set the group to cab, replace w/sysid\n    }\n}\n// Prompt: If the book changes to read, set the date to today.\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n  if (isLoading || newValue === '') { return; }\n  if (newValue == 'read') { // when the new value is read\n    var now = new Date(); // make a variable for today\n    var dateInUserFormat = getDateTimeFromFormat(now, g_user_date_time_format); // get it in the users format\n    g_form.setValue('date', dateInUserFormat); // set the date to today\n  }\n}\n// Prompt: show me the groups the user picked is a member of\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    var userAjax = new GlideAjax('global.UserAjax'); // call the UserAjax Script Include\n    userAjax.addParam('sysparm_name', 'getGroups'); // call the getGroups function\n    userAjax.addParam('sysparm_obj', JSON.stringify({\"userId\": newValue})); // pass in the new value for the user\n    userAjax.getXML(function(response){\n        var responseDocument = response.responseXML.document.Element.getAttribute('answer'); //get the answer\n        var serverObj = JSON.parse(answer); // make it a json object\n        var groups = serverObj.groups.join(', '); // make it a string with commas\n        g_form.addInfoMessage(groupString); // show it on the form\n    })\n}\n// Prompt: when food quantity becomes zero, require reason\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 0) { // when the new value is zero\n        g_form.setMandatory('reason', true);\n    }\n}\n// Prompt: if the field named u_dispatch changes to true, and assignment group is empty, and the state is open, and cmdb_ci is not blank, then set the assignment group to Level 2 - Field Service Coordination, then set the cmdb_ci same as the incident incident cmdb_ci\n    ","action":"complete","response":"function onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    var incidentSysId = g_form.getValue('incident.number'); // get the incident sysid\n    var incidentAjax = new GlideAjax('global.UserAjax'); // call the UserAjax Script Include\n    incidentAjax.addParam('sysparm_name', 'getIncident'); // call the getIncident function\n    incidentAjax.addParam('sysparm_obj', JSON.stringify({\"incidentId\": incidentSysId})); // pass in the new value for the incident\n    incidentAjax.getXML(function(response){\n        var responseDocument = response.responseXML.document.Element.getAttribute('answer'); //get the answer\n        var serverObj = JSON.parse(answer); // make it a json object\n        var state = serverObj.state; // make it a string with commas\n        var cmdbCi = serverObj.cmdbCi; // make it a string with commas\n        var assignmentGroup = g_form.getValue('assignment_group'); // get the assignment group from the form\n        if (newValue == true && assignmentGroup == '' && state == 'open' && cmdbCi != '') { // when the new value is true and assignment group is empty and the state is open and cmdb_ci is not blank\n            g_form.setValue('assignment_group', 'Level 2 - Field Service Coordination'); // set the group to Level 2 - Field Service Coordination\n            g_form.setValue('cmdb_ci', cmdbCi); // set the cmdb_ci to incident cmdb_ci\n        }\n    })\n}"},
{"cuid":"clddb7z4j00bcrg246jhy1vvb","createdAt":"2023-01-26 16:28:44.563","updatedAt":"2023-01-26 16:28:47.967","userCuid":"cld9unimw000wucguenaahfdy","prompt":"\n// Prompt: When the caller is set to jace, set the group to cab\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 'jace') { // when the new value is jace\n        g_form.setValue('assignment_group', 'cab'); // set the group to cab, replace w/sysid\n    }\n}\n// Prompt: If the book changes to read, set the date to today.\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n  if (isLoading || newValue === '') { return; }\n  if (newValue == 'read') { // when the new value is read\n    var now = new Date(); // make a variable for today\n    var dateInUserFormat = getDateTimeFromFormat(now, g_user_date_time_format); // get it in the users format\n    g_form.setValue('date', dateInUserFormat); // set the date to today\n  }\n}\n// Prompt: show me the groups the user picked is a member of\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    var userAjax = new GlideAjax('global.UserAjax'); // call the UserAjax Script Include\n    userAjax.addParam('sysparm_name', 'getGroups'); // call the getGroups function\n    userAjax.addParam('sysparm_obj', JSON.stringify({\"userId\": newValue})); // pass in the new value for the user\n    userAjax.getXML(function(response){\n        var responseDocument = response.responseXML.document.Element.getAttribute('answer'); //get the answer\n        var serverObj = JSON.parse(answer); // make it a json object\n        var groups = serverObj.groups.join(', '); // make it a string with commas\n        g_form.addInfoMessage(groupString); // show it on the form\n    })\n}\n// Prompt: when food quantity becomes zero, require reason\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 0) { // when the new value is zero\n        g_form.setMandatory('reason', true);\n    }\n}\n// Prompt: if the field named u_dispatch changes to true, and assignment group is empty, and the state is open, and cmdb_ci is not blank, then set the assignment group to Level 2 - Field Service Coordination, then set configuration item to parent incident configuration item\n    ","action":"complete","response":"//if (g_form.getValue('u_dispatch') == true && g_form.getValue('assignment_group') == '' && g_form.getValue('state') == 'open' && g_form.getValue('cmdb_ci') != '') {\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == true && g_form.getValue('assignment_group') == '' && g_form.getValue('state') == 'open' && g_form.getValue('cmdb_ci') != '') {\n        g_form.setValue('assignment_group', 'Level 2 - Field Service Coordination');\n        g_form.setValue('cmdb_ci', g_form.getValue('cmdb_ci'));\n    }\n}\n"},
{"cuid":"clddb9e8r00bfrg24i73iblfb","createdAt":"2023-01-26 16:29:50.811","updatedAt":"2023-01-26 16:29:52.164","userCuid":"clddb6eso00b7rg2438sk3ouq","prompt":"When does ServiceNow Utah come out?","action":"ask","response":"\n\nServiceNow Utah is scheduled to be released in early 2021."},
{"cuid":"clddba71g00bjrg24yzduxywj","createdAt":"2023-01-26 16:30:28.132","updatedAt":"2023-01-26 16:30:31.67","userCuid":"clddb6eso00b7rg2438sk3ouq","prompt":"In as simple of terms possible, answer this; \"What is a script include?\"","action":"ask-simple-terms","response":"\n\nA script include is a type of file that contains code which is made available to other code files. This code can be used to create functions, classes, and variables which can be reused in other code files."},
{"cuid":"clddbaxo100bmrg24n2y00wgm","createdAt":"2023-01-26 16:31:02.641","updatedAt":"2023-01-26 16:31:10.457","userCuid":"clddb6eso00b7rg2438sk3ouq","prompt":"Answer this questions as if you we're pirate: Why should I back up update sets before cloning back?","action":"ask-pirate","response":"\n\nBackin' up yer update sets before clonin' be one of the most important steps in keepin' yer production system safe and secure. By makin' sure that yer hard work and customizations are safe and secure, y'all can rest assured that if yer clonin' goes awry, ye can reconstruct yer customizations and get yer system back on course with minimal effort."},
{"cuid":"clddbc2e000bprg24gb6jllr0","createdAt":"2023-01-26 16:31:55.416","updatedAt":"2023-01-26 16:32:04.079","userCuid":"clddb6eso00b7rg2438sk3ouq","prompt":"How do I close an incident?\nLet’s think step by step.\n","action":"ask-step-by-step","response":"\n1. Gather the necessary data and document the incident. This includes collecting logs, screenshots, and other relevant information.\n\n2. Verify that the issue is resolved. You can do this by consulting with the customer, running tests, or checking with other stakeholders.\n\n3. Update the incident record in your ticketing system.\n\n4. Notify the customer that the incident has been resolved.\n\n5. Analyze the incident to identify areas for improvement.\n\n6. Close the incident."},
{"cuid":"clddbd48g00btrg24tgxlsogf","createdAt":"2023-01-26 16:32:44.464","updatedAt":"2023-01-26 16:32:49.032","userCuid":"cld9unimw000wucguenaahfdy","prompt":"\n// Prompt: When the caller is set to jace, set the group to cab\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 'jace') { // when the new value is jace\n        g_form.setValue('assignment_group', 'cab'); // set the group to cab, replace w/sysid\n    }\n}\n// Prompt: If the book changes to read, set the date to today.\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n  if (isLoading || newValue === '') { return; }\n  if (newValue == 'read') { // when the new value is read\n    var now = new Date(); // make a variable for today\n    var dateInUserFormat = getDateTimeFromFormat(now, g_user_date_time_format); // get it in the users format\n    g_form.setValue('date', dateInUserFormat); // set the date to today\n  }\n}\n// Prompt: show me the groups the user picked is a member of\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    var userAjax = new GlideAjax('global.UserAjax'); // call the UserAjax Script Include\n    userAjax.addParam('sysparm_name', 'getGroups'); // call the getGroups function\n    userAjax.addParam('sysparm_obj', JSON.stringify({\"userId\": newValue})); // pass in the new value for the user\n    userAjax.getXML(function(response){\n        var responseDocument = response.responseXML.document.Element.getAttribute('answer'); //get the answer\n        var serverObj = JSON.parse(answer); // make it a json object\n        var groups = serverObj.groups.join(', '); // make it a string with commas\n        g_form.addInfoMessage(groupString); // show it on the form\n    })\n}\n// Prompt: when food quantity becomes zero, require reason\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 0) { // when the new value is zero\n        g_form.setMandatory('reason', true);\n    }\n}\n// Prompt: if the field named u_dispatch changes to true, and assignment group is empty, and the state is open, and cmdb_ci is blank, then set the assignment group to Level 2 - Field Service Coordination, then set configuration item to parent incident configuration item\n    ","action":"complete","response":"function onChange(control, oldValue, newValue, isLoading, isTemplate) {\n        if (isLoading || newValue === '') { return; }\n        if (newValue == true) { // when the new value is true\n            var group = g_form.getValue('assignment_group'); // get the value of the assignment group field\n            var state = g_form.getValue('state'); // get the value of the state field\n            var ci = g_form.getValue('cmdb_ci'); // get the value of the cmdb ci field\n            if (group == '' && state == 'open' && ci == '') { // when the assignment group is empty and the state is open and the cmdb_ci is empty\n                g_form.setValue('assignment_group', 'Level 2 - Field Service Coordination'); // set the group to Level 2 - Field Service Coordination, replace w/sysid\n                var parentCI = g_form.getValue('parent_incident.cmdb_ci'); // get the value of the parent incident cmdb_ci field\n                g_form.setValue('cmdb_ci', parentCI); // set the value of cmdb_ci to parent incident cmdb_ci\n            }\n        }\n    }"},
{"cuid":"clddbdiuz00bwrg24nlnw4a2m","createdAt":"2023-01-26 16:33:03.42","updatedAt":"2023-01-26 16:33:07.14","userCuid":"clddb6eso00b7rg2438sk3ouq","prompt":"Summarize this text for me in a few sentences.\"\nOnce upon a time I went to the beach and I saw a big whale smiling eating candy.  Then the whale played some music while others splashed around.","action":"summarize-1","response":" Everybody had a really good time.\n\nA large whale surprised beachgoers by eating candy and playing music. Everyone at the beach enjoyed the unexpected spectacle and had a great time."},
{"cuid":"clddbeah100bzrg247tpqjkbp","createdAt":"2023-01-26 16:33:39.206","updatedAt":"2023-01-26 16:33:41.467","userCuid":"clddb6eso00b7rg2438sk3ouq","prompt":"What are the key points and main ideas of {\"Once upon a time I went to the beach and I saw a big whale smiling eating candy.  Then the whale played some music while others splashed around.\"}","action":"summarize-2","response":"\n\nThe key points of this story are that a whale was seen eating candy at the beach. The whale then played music, and other people were seen splashing around in the water. The main idea is that a whale was having a good time at the beach and its presence was positively impacting the beachgoers."},
{"cuid":"clddbf4am00c3rg24r8euid5p","createdAt":"2023-01-26 16:34:17.855","updatedAt":"2023-01-26 16:34:19.963","userCuid":"clddb6eso00b7rg2438sk3ouq","prompt":"<!--Prompt: Sequence between alice and john-->\n<div class=\"mermaid\">\nsequenceDiagram\n    Alice->>+John: Hello John, how are you?\n    Alice->>+John: John, can you hear me?\n    John-->>-Alice: Hi Alice, I can hear you!\n    John-->>-Alice: I feel great!\n</div>\n<!--Prompt: Flow with one task, no approvals-->\n<div class=\"mermaid\">\nflowchart\n  S0(Start)\n  T1(Task 1)\n  E0(End)\n  S0-->T1\n  T1-->E0\n</div>\n<!--Prompt: Flow with two tasks, no approvals in parellel-->\n<div class=\"mermaid\">\nflowchart\n  S0(Start)\n  T1(Task 1)\n  T2(Task 2)\n  E0(End)\n  S0-->T1\n  S0-->T2\n  T1-->E0\n  T2-->E0\n</div>\n<!--Prompt: Flow with two tasks, no approvals in serial-->\n<div class=\"mermaid\">\nflowchart\n  S0(Start)\n  T1(Task 1)\n  T2(Task 2)\n  E0(End)\n  S0-->T1\n  T1-->T2\n  T2-->E0\n</div>\n<!--Prompt: Flow with one tasks and one approval-->\n<div class=\"mermaid\">\nflowchart\n  S0(Start)\n  A1(Approval 1)\n  T1(Task 1)\n  E0(End)\n  S0-->A1\n  A1--Rejected-->E0\n  A1--Approved-->T1\n  T1-->E0\n</div>\n<!--Prompt: Flow with two tasks, and an approvals in serial-->\n<div class=\"mermaid\">\nflowchart\n  S0(Start)\n  A1(Approval 1)\n  T1(Task 1)\n  T2(Task 2)\n  E0(End)\n  S0-->A1\n  A1--Rejected-->E0\n  A1--Approved-->T1\n  T1-->T2\n  T2-->E0\n</div>\n<!--Prompt: Flow with two approvals in serial, and one task-->\n<div class=\"mermaid\">\nflowchart\n  S0(Start)\n  A1(Approval 1)\n  A2(Approval 2)\n  T1(Task 1)\n  E0(End)\n  S0-->A1\n  A1--Rejected-->E0\n  A1--Approved-->A2\n  A2--Rejected-->E0\n  A2--Approved-->T1\n  T1-->E0\n</div>\n<!--Prompt: Flow with two tasks, and two approvals in serial-->\n<div class=\"mermaid\">\nflowchart\n  S0(Start)\n  A1(Approval 1)\n  A2(Approval 2)\n  T1(Task 1)\n  T2(Task 2)\n  E0(End)\n  S0-->A1\n  A1--Rejected-->E0\n  A1--Approved-->A2\n  A2--Rejected-->E0\n  A2--Approved-->T1\n  T1-->T2\n  T2-->E0\n</div>\n<!--Prompt: pie chart of pets adopted by volunteers-->\n<div class=\"mermaid\">\npie title Pets adopted by volunteers\n  \"Dogs\" : 386\n  \"Cats\" : 85\n  \"Rats\" : 15\n</div>\n<!--Prompt: ServiceNow Certificate Integration Sequence Diagram-->\n<div class=\"mermaid\">\nsequenceDiagram\n  participant ui as User Interactions\n  participant sn as Servicenow\n  participant ms as MidServer\n  participant co as Certificate Authority\n  ui->>sn: User Requests Cert\n  sn->>ms: Run generate-csr-key.js\n  ms->>co: CSR,KEY, and Enrolls Cert\n  co->>sn: Returns Order #\n  loop Download\n  sn->>sn: Waits 2 minutes\n  sn->>ms: Run download-zip-and-upload-cert.js\n  ms->>co: Download Cert\n  co->>sn: Cert Processing\n  end\n  co->>ms: Cert Downloaded\n  ms->>ms: Generate CRT\n  ms->>ms: Generate PFX\n  ms->>ms: Zip CRT, PFX, P7B\n  ms->>sn: Send Zip to SN\n  sn->>ui: Notify user with zip file\n</div>\n<!--Prompt: Show the flow of interactions between a user and an e-commerce website when placing an order.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>E-commerce Website: Place Order\n    E-commerce Website->>Payment Gateway: Verify Payment\n    Payment Gateway->>E-commerce Website: Payment Approved\n    E-commerce Website->>Logistics Company: Prepare Shipment\n    Logistics Company->>E-commerce Website: Shipment Prepared\n    E-commerce Website->>User: Order Confirmation\n</div>\n<!-- Prompt: Illustrate the communication between a mobile app and a server during the login process.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>Mobile App: Login\n    Mobile App->>Server: Send Login Credentials\n    Server->>Authentication Service: Verify Login Credentials\n    Authentication Service->>Server: Credentials Verified\n    Server->>Mobile App: Login Successful\n</div>\n<!-- Prompt: Depict the sequence of events that occur when a user searches for a product on a search engine.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>Search Engine: Search\n    Search Engine->>Search Service: Get Results\n    Search Service->>Index: Retrieve Matches\n    Index->>Search Service: Return Matches\n    Search Service->>Search Engine: Send Results\n    Search Engine->>User: Display Results\n</div>\n<!-- Prompt: Show the interactions between different modules within a banking system during a money transfer operation.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>Banking System: Transfer Money\n    Banking System->>Account Service: Check Balance\n    Account Service->>Banking System: Return Balance\n    Banking System->>Security Service: Verify Transaction\n    Security Service->>Banking System: Transaction Verified\n    Banking System->>Account Service: Deduct Funds\n    Account Service->>Banking System: Funds Deducted\n    Banking System->>Account Service: Add Funds\n    Account Service->>Banking System: Funds Added\n    Banking System->>User: Transaction Complete\n</div>\n<!-- Prompt: Create a sequence diagram that demonstrates the process of video streaming from a server to a client.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>Video Player: Play\n    Video Player->>Server: Request Video\n    Server->>Video Service: Get Video\n    Video Service->>Server: Return Video\n    Server->>Video Player: Send Video\n    Video Player->>User: Display Video\n</div>\n<!-- Prompt: Describe the flow of interactions between a user, a website, and a payment gateway during an online transaction.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>E-commerce Website: Buy Item\n    E-commerce Website->>Payment Gateway: Verify Payment\n    Payment Gateway->>User: Payment Approval\n    User->>E-commerce Website: Confirm Purchase\n    E-commerce Website->>Payment Gateway: Payment Confirmed\n    Payment Gateway->>E-commerce Website: Payment Received\n</div>\n<!-- Prompt: Illustrate the sequence of events that occur when a user logs in to a social media platform.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>Social Media Platform: Login\n    Social Media Platform->>Authentication Service: Verify Login Credentials\n    Authentication Service->>Social Media Platform: Credentials Verified\n    Social Media Platform->>User: Login Successful\n</div>\n<!-- Prompt: Depict the communication between a client and a server during a file upload process.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>Client: Upload file\n    Client->>Server: Send File\n    Server->>File Service: Save File\n    File Service->>Server: File Saved\n    Server->>Client: File Upload Successful\n</div>\n<!-- Prompt: Create a sequence diagram that demonstrates the process of sending an email using an email client.-->\n<div class=\"mermaid\">\nsequenceDiagram\n    User->>Email Client: Compose email\n    Email Client->>SMTP Server: Send email\n    SMTP Server->>MTA: Transfer email\n    MTA->>MDA: Deliver email\n    MDA->>Recipients email client: Display email\n</div>\nA pie chart showing the percentage of global energy consumption by source (fossil fuels, nuclear, hydro, solar, etc.):-->\n<div class=\"mermaid\">\npie\n   \"Fossil Fuels\" : 45,\n   \"Nuclear\" : 20,\n   \"Hydro\" : 10,\n   \"Solar\" : 15,\n   \"Other\" : 10\n</div>\n<!-- Prompt: A pie chart showing the distribution of expenses in a household budget:-->\n<div class=\"mermaid\">\n  pie\n    \"Rent/Mortgage\" : 30,\n    \"Utilities\" : 10,\n    \"Food\" : 20,\n    \"Transportation\" : 15,\n    \"Entertainment\" : 10,\n    \"Savings\" : 15\n</div>\n<!-- Prompt: A pie chart showing the market share of different smartphone brands:-->\n<div class=\"mermaid\">\n  pie\n    \"Samsung\" : 30,\n    \"Apple\" : 20,\n    \"Huawei\" : 15,\n    \"Xiaomi\" : 10,\n    \"Other\" : 25\n</div>\n<!-- Prompt: A pie chart showing the proportion of students in a school by grade level:-->\n<div class=\"mermaid\">\n  pie\n    \"Kindergarten\" : 10,\n    \"Elementary\" : 25,\n    \"Middle School\" : 20,\n    \"High School\" : 30,\n    \"Other\" : 15\n</div>\n<!-- Prompt: A pie chart showing the percentage of website traffic by source (direct, search, referral, social):-->\n<div class=\"mermaid\">\n  pie\n    \"Direct\" : 40,\n    \"Search\" : 25,\n    \"Referral\" : 20,\n    \"Social\" : 15\n</div>\n<!-- Prompt: I need a picture of a whale on the beach eating candy.-->","action":"docs-diagram","response":"\n<div class=\"mermaid\">\ngraph TD\n  A[Whale On The Beach] -->|eats| B[Candy]\n  B -->|eaten by| C[Me]\n</div>\n"},
{"cuid":"clddbljtg00c6rg24kfmidlpb","createdAt":"2023-01-26 16:39:17.908","updatedAt":"2023-01-26 16:39:24.943","userCuid":"clddb6eso00b7rg2438sk3ouq","prompt":"function onLoad() {\n\n\tvar name = g_form.getControl('name');\n\tname.addEventListener('change', setFileName);\n\t\n\tvar format = g_form.getControl('format');\n\tformat.addEventListener('change', setFileExtnAndMaxRow);\n\t\t\n\t//On load always set the correct max row for the selected format\n\tsetMaxRowDefaultValue();\n\n\t//Don't build the filename unless it is missing\n\tvar fName = g_form.getControl('file_name');\n\tif (fName.value === ''){\n\t\tsetFileName();\n\t}\n\t\n}\n\nfunction setFileExtnAndMaxRow() {\n\tsetMaxRowDefaultValue();\n\tsetFileExtn();\n}\n\nfunction setFileName() {\n\tvar name = g_form.getControl('name');\n\tvar fName = g_form.getControl('file_name');\n\tvar format = g_form.getControl('format');\n\t\n\tif (name.value === \"\") {\n\t\tfName.value = \"\";\n\t\treturn;\n\t}\n\t\n\tvar fileName = name.value.toLowerCase();\n\tfileName = getNormalizeFileName(fileName);\n\tfName.value = fileName;\n\t\n\tsetFileExtn();\n}\n\nfunction setMaxRowDefaultValue() {\n\tvar max = g_form.getControl('max_rows');\n\tvar format = g_form.getControl('format');\n\t\n\tvar esajax = new GlideAjax('ExportSetHelper');\n\tvar propertyName = 'glide.' + format.value.toLowerCase() + '.export.limit';\n\tesajax.addParam('sysparm_name', 'getMaxRowProperty');\n\tesajax.addParam('sysparm_propertyName', propertyName);\n\tesajax.getXML(function(resp) {\n\t\tvar rootNode = resp.responseXML.getElementsByTagName('xml');\n\t\tvar maxValue = rootNode[0].getAttribute('answer').replace(',', '');\n\t\tmax.placeholder = maxValue;\n\t\tif (max.value == \"0\") //Allow the placeholder to be visible\n\t\t\tmax.value = \"\";\n\t});\n}\n\nfunction setFileExtn() {\n\tvar format = g_form.getControl('format');\n\tvar fName = g_form.getControl('file_name');\n\tvar fNameValueNoExtn = getFileNameNoExtn(fName.value);\n\t\n\tif (format.value == \"XML\")\n\t\tfNameValueNoExtn += \".xml\";\n\telse if (format.value == \"Excel\")\n\t\tfNameValueNoExtn += \".xls\";\n\telse if (format.value == \"XLSX\")\n\t\tfNameValueNoExtn += \".xlsx\";\n\telse if (format.value == \"CSV\")\n\t\tfNameValueNoExtn += \".csv\";\n\telse if (format.value == \"JSON\")\n\t\tfNameValueNoExtn += \".json\";\n\tfName.value = fNameValueNoExtn;\n}\n\nfunction getNormalizeFileName(name) {\n\tvar fNameNoExtn = getFileNameNoExtn(name);\n\t\n\tfNameNoExtn = fNameNoExtn.toLowerCase().replace(/[^a-zA-Z0-9_]/g, '_');\n\tif (fNameNoExtn.length > 36) {\n\t\tfNameNoExtn = fNameNoExtn.substring(0, 36);\n\t}\n\treturn fNameNoExtn;\n}\n\nfunction getFileNameNoExtn(fName) {\n\tvar fNameNoExtn = fName;\n\tif (fNameNoExtn.indexOf('.') != -1) {\n\t\tfNameNoExtn = fNameNoExtn.substring(0, fNameNoExtn.indexOf('.'));\n\t}\n\treturn fNameNoExtn;\n}\n\n\"\"\"\nThe onLoad function runs on the form.\nExplain it like I'm five years old in the form of a list.\n1.","action":"explain","response":" Look at the name field and when the value is changed, set the file name.\n2. Look at the format field and when the value is changed, set the file extension and the max row.\n3. When the form loads, always set the correct max row for the selected format.\n4. Don't build the filename unless it is missing.\n5. If the name field is empty, set the file name to empty.\n6. If the name field has a value, set the file name to the lowercase version of the name with all non-alphanumeric characters replaced by underscores.\n7. If the file name is longer than 36 characters, truncate it to 36 characters.\n8. If the format field is XML, set the file name extension to .xml.\n9. If the format field is Excel, set the file name extension to .xls.\n10. If the format field is XLSX, set the file name extension to .xlsx.\n11. If the format field is CSV, set the file name extension to .csv.\n12. If the format field is JSON, set the file name extension to .json."},
{"cuid":"clddbo8zl00carg24qmsnuefo","createdAt":"2023-01-26 16:41:23.841","updatedAt":"2023-01-26 16:41:31.029","userCuid":"clddb6eso00b7rg2438sk3ouq","prompt":"Update this code based following this prompt, \"\": 1. Look at the name field and when the value is changed, set the file name.\n2. Look at the format field and when the value is changed, set the file extension and the max row.\n3. When the form loads, always set the correct max row for the selected format.\n4. Don't build the filename unless it is missing.\n5. If the name field is empty, set the file name to empty.\n6. If the name field has a value, set the file name to the lowercase version of the name with all non-alphanumeric characters replaced by underscores.\n7. If the file name is longer than 36 characters, truncate it to 36 characters.\n8. If the format field is XML, set the file name extension to .xml.\n9. If the format field is Excel, set the file name extension to .xls.\n10. If the format field is XLSX, set the file name extension to .xlsx.\n11. If the format field is CSV, set the file name extension to .csv.\n12. If the format field is JSON, set the file name extension to .json.\n// Generated by scribe.monster ```","action":"edit","response":"\n1. Look at the name field and when the value is changed, set the file name.\n2. Look at the format field and when the value is changed, set the file extension and the max row.\n3. When the form loads, always set the correct max row for the selected format.\n4. Don't build the filename unless it is missing.\n5. If the name field is empty, set the file name to empty.\n6. If the name field has a value, set the file name to the lowercase version of the name with all non-alphanumeric characters replaced by underscores.\n7. If the file name is longer than 36 characters, truncate it to 36 characters.\n8. If the format field is XML, set the file name extension to .xml.\n9. If the format field is Excel, set the file name extension to .xls.\n10. If the format field is XLSX, set the file name extension to .xlsx.\n11. If the format field is CSV, set the file name extension to .csv.\n12. If the format field is JSON, set the file name extension to .json."},
{"cuid":"clddbovgl00cerg245rc44him","createdAt":"2023-01-26 16:41:52.965","updatedAt":"2023-01-26 16:41:54.228","userCuid":"clddb6eso00b7rg2438sk3ouq","prompt":"Update this code based following this prompt, \"could you add some useful comments to the existing code?\": 1. Look at the name field and when the value is changed, set the file name.\n2. Look at the format field and when the value is changed, set the file extension and the max row.\n3. When the form loads, always set the correct max row for the selected format.\n4. Don't build the filename unless it is missing.\n5. If the name field is empty, set the file name to empty.\n6. If the name field has a value, set the file name to the lowercase version of the name with all non-alphanumeric characters replaced by underscores.\n7. If the file name is longer than 36 characters, truncate it to 36 characters.\n8. If the format field is XML, set the file name extension to .xml.\n9. If the format field is Excel, set the file name extension to .xls.\n10. If the format field is XLSX, set the file name extension to .xlsx.\n11. If the format field is CSV, set the file name extension to .csv.\n12. If the format field is JSON, set the file name extension to .json.\n// Generated by scribe.monster ```","action":"edit","response":"javascript // 1. Look at the name field and when the value is changed, set the file name. "},
{"cuid":"clddbvak200cirg241sweccin","createdAt":"2023-01-26 16:46:52.466","updatedAt":"2023-01-26 16:46:53.375","userCuid":"clddb6eso00b7rg2438sk3ouq","prompt":"What was the latest ServiceNow release in Sept 2016?","action":"ask","response":"\n\nThe latest ServiceNow release in September 2016 was Geneva."},
{"cuid":"clddlktb500cprg240vpaq1pb","createdAt":"2023-01-26 21:18:39.714","updatedAt":"2023-01-26 21:18:45.966","userCuid":"clddlium900cnrg24he12uien","prompt":"when priority changes make both work notes and comments mandatory","action":"complete","response":"\n\t\t\tthis.workNote = workNote;\n\t\t\tthis.comment = comment;\n\t\t}\n\t}\n\n\t/**\n\t * @return the patient\n\t */\n\tpublic Patient getPatient() {\n\t\treturn patient;\n\t}\n\n\t/**\n\t * @param patient\n\t *            the patient to set\n\t */\n\tpublic void setPatient(Patient patient) {\n\t\tthis.patient = patient;\n\t}\n\n\t/**\n\t * @return the doctor\n\t */\n\tpublic Doctor getDoctor() {\n\t\treturn doctor;\n\t}\n\n\t/**\n\t * @param doctor\n\t *            the doctor to set\n\t */\n\tpublic void setDoctor(Doctor doctor) {\n\t\tthis.doctor = doctor;\n\t}\n\n\t/**\n\t * @return the workNote\n\t */\n\tpublic String getWorkNote() {\n\t\treturn workNote;\n\t}\n\n\t/**\n\t * @param workNote\n\t *            the workNote to set\n\t */\n\tpublic void setWorkNote(String workNote) {\n\t\tthis.workNote = workNote;\n\t}\n\n\t/**\n\t * @return the comment\n\t */\n\tpublic String getComment() {\n\t\treturn comment;\n\t}\n\n\t/**\n\t * @param comment\n\t *            the comment to set\n\t */\n\tpublic void setComment(String comment) {\n\t\tthis.comment = comment;\n\t}\n\n\t/**\n\t * @return the appointment\n\t */\n\tpublic Appointment getAppointment() {\n\t\treturn appointment;\n\t}\n\n\t/**\n\t * @param appointment\n\t *            the appointment to set\n\t */\n\tpublic void setAppointment(Appointment appointment) {\n\t\tthis.appointment = appointment;\n\t}\n\n\t/**\n\t * @return the status\n\t */\n\tpublic Status getStatus() {\n\t\treturn status;\n\t}\n\n\t/**\n\t * @param status\n\t *            the status to set\n\t */\n\tpublic void setStatus(Status status) {\n\t\tthis.status = status;\n\t}\n\n\t@Override\n\tpublic boolean equals(Object obj) {\n\t"},
{"cuid":"clddlm4xz00csrg24dbac937s","createdAt":"2023-01-26 21:19:41.447","updatedAt":"2023-01-26 21:19:43.941","userCuid":"clddlium900cnrg24he12uien","prompt":"\n// Prompt: When the caller is set to jace, set the group to cab\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 'jace') { // when the new value is jace\n        g_form.setValue('assignment_group', 'cab'); // set the group to cab, replace w/sysid\n    }\n}\n// Prompt: If the book changes to read, set the date to today.\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n  if (isLoading || newValue === '') { return; }\n  if (newValue == 'read') { // when the new value is read\n    var now = new Date(); // make a variable for today\n    var dateInUserFormat = getDateTimeFromFormat(now, g_user_date_time_format); // get it in the users format\n    g_form.setValue('date', dateInUserFormat); // set the date to today\n  }\n}\n// Prompt: show me the groups the user picked is a member of\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    var userAjax = new GlideAjax('global.UserAjax'); // call the UserAjax Script Include\n    userAjax.addParam('sysparm_name', 'getGroups'); // call the getGroups function\n    userAjax.addParam('sysparm_obj', JSON.stringify({\"userId\": newValue})); // pass in the new value for the user\n    userAjax.getXML(function(response){\n        var responseDocument = response.responseXML.document.Element.getAttribute('answer'); //get the answer\n        var serverObj = JSON.parse(answer); // make it a json object\n        var groups = serverObj.groups.join(', '); // make it a string with commas\n        g_form.addInfoMessage(groupString); // show it on the form\n    })\n}\n// Prompt: when food quantity becomes zero, require reason\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 0) { // when the new value is zero\n        g_form.setMandatory('reason', true);\n    }\n}\n// Prompt: when priority changes make both work notes and comments mandatory\n    ","action":"complete","response":"function onChange(control, oldValue, newValue, isLoading, isTemplate) {\n        if (isLoading || newValue === '') { return; }\n        if (newValue == 'high') { // when the new value is high\n            g_form.setMandatory('work_notes', true); // make work notes mandatory\n            g_form.setMandatory('comments', true); // make comments mandatory\n            g_form.setValue('work_notes', 'Priority set to high, please check.'); // set work notes\n            g_form.setValue('comments', 'Priority set to high, please check.'); // set comments\n        }\n    }"},
{"cuid":"clddlvmck00czrg24rbekyw05","createdAt":"2023-01-26 21:27:03.908","updatedAt":"2023-01-26 21:27:08.293","userCuid":"clddlium900cnrg24he12uien","prompt":"Update this code based following this prompt, \"when priority changes make both work notes and comments mandatory\": function onChange(control, oldValue, newValue, isLoading, isTemplate) {\n        if (isLoading || newValue === '') { return; }\n        if (newValue == 'high') { // when the new value is high\n            g_form.setMandatory('work_notes', true); // make work notes mandatory\n            g_form.setMandatory('comments', true); // make comments mandatory\n            g_form.setValue('work_notes', 'Priority set to high, please check.'); // set work notes\n            g_form.setValue('comments', 'Priority set to high, please check.'); // set comments\n        }\n    }\n// Generated by scribe.monster ```","action":"edit","response":"\n\nfunction onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 'high') { // when the new value is high\n        g_form.setMandatory('work_notes', true); // make work notes mandatory\n        g_form.setMandatory('comments', true); // make comments mandatory\n        g_form.setValue('work_notes', 'Priority set to high, please check.'); // set work notes\n        g_form.setValue('comments', 'Priority set to high, please check.'); // set comments\n    }\n}"},
{"cuid":"clddlw2d300d5rg24m78rwm0l","createdAt":"2023-01-26 21:27:24.664","updatedAt":"2023-01-26 21:27:29.738","userCuid":"clddlium900cnrg24he12uien","prompt":"function onChange(control, oldValue, newValue, isLoading, isTemplate) {\n    if (isLoading || newValue === '') { return; }\n    if (newValue == 'high') { // when the new value is high\n        g_form.setMandatory('work_notes', true); // make work notes mandatory\n        g_form.setMandatory('comments', true); // make comments mandatory\n        g_form.setValue('work_notes', 'Priority set to high, please check.'); // set work notes\n        g_form.setValue('comments', 'Priority set to high, please check.'); // set comments\n    }\n}\n// Generated by scribe.monster\n\"\"\"\nThe onChange function runs on the form.\nExplain it like I'm five years old in the form of a list.\n1.","action":"explain","response":" g_form.setMandatory('work_notes', true);\n2. g_form.setMandatory('comments', true);\n3. g_form.setValue('work_notes', 'Priority set to high, please check.');\n4. g_form.setValue('comments', 'Priority set to high, please check.');\n\nThis function will make the 'work_notes' and 'comments' fields mandatory when the 'priority' field is set to 'high'.\nIt will also set the 'work_notes' and 'comments' fields to the specified values."},
{"cuid":"clddlwuvb00d8rg24dlspnru6","createdAt":"2023-01-26 21:28:01.608","updatedAt":"2023-01-26 21:28:04.039","userCuid":"clddlium900cnrg24he12uien","prompt":"Update this code based following this prompt, \"when priority changes make both work notes and comments mandatory\": 1. g_form.setMandatory('work_notes', true);\n2. g_form.setMandatory('comments', true);\n3. g_form.setValue('work_notes', 'Priority set to high, please check.');\n4. g_form.setValue('comments', 'Priority set to high, please check.');\n\nThis function will make the 'work_notes' and 'comments' fields mandatory when the 'priority' field is set to 'high'.\nIt will also set the 'work_notes' and 'comments' fields to the specified values.\n// Generated by scribe.monster ```","action":"edit","response":"\ng_form.setMandatory('work_notes', true);\ng_form.setMandatory('comments', true);\ng_form.setValue('work_notes', 'Priority set to high, please check.');\ng_form.setValue('comments', 'Priority set to high, please check.');"},
{"cuid":"clddlz9cy00dgrg24ahns6p2y","createdAt":"2023-01-26 21:29:53.699","updatedAt":"2023-01-26 21:29:54.864","userCuid":"clddlium900cnrg24he12uien","prompt":"Who founded Alibaba","action":"ask","response":"?\n\nAlibaba was founded by Jack Ma and 17 other co-founders in 1999."},
{"cuid":"clddlzzvm00dlrg24ps8g6shq","createdAt":"2023-01-26 21:30:28.066","updatedAt":"2023-01-26 21:31:07.081","userCuid":"clddlium900cnrg24he12uien","prompt":"\n<!--Fill out the below given this prompt \"create a badge access form\".-->\n\n<h1>Badge Access</h1>\n\n<h2>Fields to track badge access</h2>\n<ol>\n<li>Badge ID</li>\n<li>Badge Holder Name</li>\n<li>Date Issued</li>\n<li>Expiration Date</li>\n<li>Access Level</li>\n<li>Building Access</li>\n<li>Areas Access</li>\n<li>Doors Access</li>\n<li>Time Zone Restrictions</li>\n<li>Status (Active/Inactive)</li>\n</ol>\n\n<h2>Roles</h2>\nIdentify the roles people need to take to request, approve, and fulfill.\n<ul>\n<li>Request: Badge Holder</li>\n<li>Approve: Security/Administrative Personnel</li>\n<li>Fulfill: Security/Administrative Personnel</li>\n</ul>\n\n<h2>Self Service Form</h2>\n<ul>\n<li>Badge Holder Name</li>\n<li>Access Level</li>\n<li>Building Access</li>\n<li>Areas Access</li>\n<li>Doors Access</li>\n<li>Time Zone Restrictions</li>\n</ul>\n\n<h3>Process</h3>\n<div class=\"mermaid\">\ngraph TD\n  S0(Start)\n  A1(Approval for access)\n  T1(Task to fulfill access)\n  Sc1(Schedule expiration)\n  E0(End)\n\n  S0-->A1\n  A1--Rejected-->E0\n  A1--Approved-->T1\n  T1-->Sc1\n  Sc1-->E0\n</div>\n<h3>Integration</h3>\nCreate an integration between ServiceNow and BadgeSystem to automatically provision access.\n\nPossible paths for this.\n<ul>\n<li>BadgeSystem polls ServiceNow</li>\n  <ul>\n  <li>Every hour BadgeSystem hits the TableAPI for outstanding tasks.</li>\n  <li>Updates the tasks that automated work has started.</li>\n  <li>Processes the tasks.</li>\n  <li>If processing succeeds, close the task with success</li>\n  <li>Else Update the task that automation has failed</li>\n  </ul>\n<li>ServiceNow makes a rest call</li>\n  <li>When a task is ready to process e.g. state changes to ready, send a rest call to BadgeSystem</li>\n  <li>If processing succeeds, close the task with success</li>\n  <li>Else Update the task that automation has failed</li>\n</ul>\n<h3>Notifications</h3>\n\n<h4>Approval</h4>\nSubject: Badge Access Request for {current.variables.requested_for}\n\n{current.variables.requested_for} is requesting access to area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door}). Please review and approve or reject the request.\n\nThank you,\nSecurity Team\n\n<h4>Approved</h4>\nSubject: Badge Access Granted\n\nDear {current.variables.requested_for},\n\nYou have been granted access to area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door}). Your badge ID is {current.variables.badge_id} and it expires on {current.variables.expirationDate}.\n\nThank you,\nSecurity Team\n\n<h4>Rejected</h4>\nSubject: Badge Access Denied\n\nDear {current.variables.requested_for},\n\nYour request for access to area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door}) was denied. Please contact the Security Team for more information.\n\nThank you,\nSecurity Team\n\n<h4>Notice of expiring access</h4>\nSubject: Badge Access Expiring for area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door})\n\nDear {current.variables.requested_for},\n\nYour access to area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door}) expires in on on {current.variables.expirationDate}. If you still need this access please request it.\n\nThank you,\nSecurity Team\n\n<!--Fill out the below given this prompt \"Manage FOIA requests for contracts\".-->\n<h1>FOIA Request for Contracts </h1>\n\n<h2>Request Process</h2>\nCreate a process to allow for members of the public to submit FOIA requests for Contracts: \n<div class=\"mermaid\">\ngraph TD\n  S0((Start))\n  S1(Submit Request)\n  A2(Routing and receipt of  request)\n  A3(Review to determine if document is releasable)\n  T1(Obtain the requested document)\n  A4(Prepare releasable document)\n  A5(Approval to release)\n  T2(Produce requested document)\n  E0(End)\n\n  S0-->S1\n  S1-->A2\n  A2-->A3\n  A3--Yes-->T1\n  A3--No-->E0\n  T1-->A4\n  A4-->A5\n  A5--Yes-->T2\n  A5--No-->E0\n  T2-->E0\n</div>\n\n<h2>Roles</h2>\nIdentify any roles people need to take to request, approve, and fulfill.\n<ul>\n<li>Requester: Anyone can submit a request as long as the requirements are met.</li>\n<li>Approver: Agency representative or Agency FOIA Officer</li>\n<li>Fulfiller: Agency representative or Agency FOIA Officer</li>\n</ul>\n\n<h2>Self Service Form</h2>\nCreate fields for submitting a request in the ServiceNow Self Service Portal. \n<ol>\n<li>Requester Name</li>\n<li>Requester Phone</li>\n<li>Requester Email</li>\n<li>Agency Name</li>\n<li>Contract Number</li>\n<li>Brief description of the requested document</li>\n</ol>\n\n<h2>Notifications</h2>\n\n<h3>Request Submitted</h3>\nSubject: FOIA Request Submitted\n\nDear Applicant,\n\nYour FOIA request has been submitted. Your Request ID is: {current.variables.request_id}. Please note that your Request ID in all further correspondence.\n\nThank you,\nFOIA Office\n\n<h3>Request Received </h3>\nSubject: FOIA Request Received\n\nDear Agency Representative, \n\nA new FOIA request has been received. Please review the request and follow the process to respond. \n\nThank you, \nFOIA Office \n\n<h3>Request Approved </h3>\nSubject: FOIA Request Approved\n\nDear Agency Representative, \n\nFOIA Request {current.variables.request_id} has now been approved. Please proceed with preparing a releasable document. \n\nThank you,\nFOIA Office \n\n<h3>Request Rejected</h3>\nSubject: FOIA Request Rejected\n\nDear Applicant, \n\nYour FOIA Request {current.variables.request_id} has been rejected. Please contact the FOIA Representative for more information. \n\nThank you,\nFOIA Office\n<!--Fill out the below given this prompt \"\"-->","action":"docs-process-maker","response":"\n\n<h1>Assignment 2</h1>\n\n<h3>Request for Access</h3>\n\n<h4>Request Process</h4>\n\n<div class=\"mermaid\">\ngraph TD\n  S0((Start))\n  S1(Submit Request)\n  A2(Approval for access)\n  T1(Task to fulfill access)\n  Sc1(Schedule expiration)\n  E0(End)\n\n  S0-->S1\n  S1-->A2\n  A2-->T1\n  A2-->E0\n  T1-->Sc1\n  Sc1-->E0\n</div>\n\n<h4>Roles</h4>\n<ul>\n<li>Request: Badge Holder</li>\n<li>Approve: Security/Administrative Personnel</li>\n<li>Fulfill: Security/Administrative Personnel</li>\n</ul>\n\n<h4>Self Service Form</h4>\n<ul>\n<li>Badge Holder Name</li>\n<li>Access Level</li>\n<li>Building Access</li>\n<li>Areas Access</li>\n<li>Doors Access</li>\n<li>Time Zone Restrictions</li>\n</ul>\n\n<h4>Notifications</h4>\n\n<h5>Approval</h5>\nSubject: Badge Access Request for {current.variables.requested_for}\n\n{current.variables.requested_for} is requesting access to area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door}). Please review and approve or reject the request.\n\nThank you,\nSecurity Team\n\n<h5>Approved</h5>\nSubject: Badge Access Granted\n\nDear {current.variables.requested_for},\n\nYou have been granted access to area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door}). Your badge ID is {current.variables.badge_id} and it expires on {current.variables.expirationDate}.\n\nThank you,\nSecurity Team\n\n<h5>Rejected</h5>\nSubject: Badge Access Denied\n\nDear {current.variables.requested_for},\n\nYour request for access to area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door}) was denied. Please contact the Security Team for more information.\n\nThank you,\nSecurity Team\n\n<h5>Notice of expiring access</h5>\nSubject: Badge Access Expiring for area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door})\n\nDear {current.variables.requested_for},\n\nYour access to area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door}) expires in on on {current.variables.expirationDate}. If you still need this access please request it.\n\nThank you,\nSecurity Team\n\n<h3>Integration</h3>\nCreate an integration between ServiceNow and BadgeSystem to automatically provision access.\n\nPossible paths for this.\n<ul>\n<li>BadgeSystem polls ServiceNow</li>\n  <ul>\n  <li>Every hour BadgeSystem hits the TableAPI for outstanding tasks.</li>\n  <li>Updates the tasks that automated work has started.</li>\n  <li>Processes the tasks.</li>\n  <li>If processing succeeds, close the task with success</li>\n  <li>Else Update the task that automation has failed</li>\n  </ul>\n<li>ServiceNow makes a rest call</li>\n  <li>When a task is ready to process e.g. state changes to ready, send a rest call to BadgeSystem</li>\n  <li>If processing succeeds, close the task with success</li>\n  <li>Else Update the task that automation has failed</li>\n</ul>\n\n\n<h3>FOIA Request for Contracts</h3>\n\n<h4>Request Process</h4>\nCreate a process to allow for members of the public to submit FOIA requests for Contracts: \n<div class=\"mermaid\">\ngraph TD\n  S0((Start))\n  S1(Submit Request)\n  A2(Routing and receipt of  request)\n  A3(Review to determine if document is releasable)\n  T1(Obtain the requested document)\n  A4(Prepare releasable document)\n  A5(Approval to release)\n  T2(Produce requested document)\n  E0(End)\n\n  S0-->S1\n  S1-->A2\n  A2-->A3\n  A3--Yes-->T1\n  A3--No-->E0\n  T1-->A4\n  A4-->A5\n  A5--Yes-->T2\n  A5--No-->E0\n  T2-->E0\n</div>\n\n<h4>Roles</h4>\nIdentify any roles people need to take to request, approve, and fulfill.\n<ul>\n<li>Requester: Anyone can submit a request as long as the requirements are met.</li>\n<li>Approver: Agency representative or Agency FOIA Officer</li>\n<li>Fulfiller: Agency representative or Agency FOIA Officer</li>\n</ul>\n\n<h4>Self Service Form</h4>\nCreate fields for submitting a request in the ServiceNow Self Service Portal. \n<ol>\n<li>Requester Name</li>\n<li>Requester Phone</li>\n<li>Requester Email</li>\n<li>Agency Name</li>\n<li>Contract Number</li>\n<li>Brief description of the requested document</li>\n</ol>\n\n\n<h4>Notifications</h4>\n\n<h5>Request Submitted</h5>\nSubject: FOIA Request Submitted\n\nDear Applicant,\n\nYour FOIA request has been submitted. Your Request ID is: {current.variables.request_id}. Please note that your Request ID in all further correspondence.\n\nThank you,\nFOIA Office\n\n<h5>Request Received </h5>\nSubject: FOIA Request Received\n\nDear Agency Representative, \n\nA new FOIA request has been received. Please review the request and follow the process to respond. \n\nThank you, \nFOIA Office \n\n<h5>Request Approved </h5>\nSubject: FOIA Request Approved\n\nDear Agency Representative, \n\nFOIA Request {current.variables.request_id} has now been approved. Please proceed with preparing a releasable document. \n\nThank you,\nFOIA Office \n\n<h5>Request Rejected</h5>\nSubject: FOIA Request Rejected\n\nDear Applicant, \n\nYour FOIA Request {current.variables.request_id} has been rejected. Please contact the FOIA Representative for more information. \n\nThank you,\nFOIA Office\n\n"},
{"cuid":"clddp54f300dorg249he7y5dj","createdAt":"2023-01-26 22:58:26.079","updatedAt":"2023-01-26 22:58:29.874","userCuid":"cld9unimw001yucgucbtj659g","prompt":"What are alternative names for embedding searchs with AI?","action":"ask","response":"\n\n1. Intelligent Search Embedding \n2. Cognitive Search Embedding \n3. Neural Network Search Embedding \n4. Natural Language Processing Search Embedding \n5. Artificial Intelligence Search Embedding \n6. Machine Learning Search Embedding \n7. Knowledge Representation Search Embedding \n8. Semantic Search Embedding \n9. Automated Search Embedding \n10. Automated Intelligent Search Embedding"},
{"cuid":"clddx8jk200dsrg24kfgpa6nu","createdAt":"2023-01-27 02:45:02.595","updatedAt":"2023-01-27 02:45:23.478","userCuid":"cld9unimw001yucgucbtj659g","prompt":"\n<!--Fill out the below given this prompt \"create a badge access form\".-->\n\n<h1>Badge Access</h1>\n\n<h2>Fields to track badge access</h2>\n<ol>\n<li>Badge ID</li>\n<li>Badge Holder Name</li>\n<li>Date Issued</li>\n<li>Expiration Date</li>\n<li>Access Level</li>\n<li>Building Access</li>\n<li>Areas Access</li>\n<li>Doors Access</li>\n<li>Time Zone Restrictions</li>\n<li>Status (Active/Inactive)</li>\n</ol>\n\n<h2>Roles</h2>\nIdentify the roles people need to take to request, approve, and fulfill.\n<ul>\n<li>Request: Badge Holder</li>\n<li>Approve: Security/Administrative Personnel</li>\n<li>Fulfill: Security/Administrative Personnel</li>\n</ul>\n\n<h2>Self Service Form</h2>\n<ul>\n<li>Badge Holder Name</li>\n<li>Access Level</li>\n<li>Building Access</li>\n<li>Areas Access</li>\n<li>Doors Access</li>\n<li>Time Zone Restrictions</li>\n</ul>\n\n<h3>Process</h3>\n<div class=\"mermaid\">\ngraph TD\n  S0(Start)\n  A1(Approval for access)\n  T1(Task to fulfill access)\n  Sc1(Schedule expiration)\n  E0(End)\n\n  S0-->A1\n  A1--Rejected-->E0\n  A1--Approved-->T1\n  T1-->Sc1\n  Sc1-->E0\n</div>\n<h3>Integration</h3>\nCreate an integration between ServiceNow and BadgeSystem to automatically provision access.\n\nPossible paths for this.\n<ul>\n<li>BadgeSystem polls ServiceNow</li>\n  <ul>\n  <li>Every hour BadgeSystem hits the TableAPI for outstanding tasks.</li>\n  <li>Updates the tasks that automated work has started.</li>\n  <li>Processes the tasks.</li>\n  <li>If processing succeeds, close the task with success</li>\n  <li>Else Update the task that automation has failed</li>\n  </ul>\n<li>ServiceNow makes a rest call</li>\n  <li>When a task is ready to process e.g. state changes to ready, send a rest call to BadgeSystem</li>\n  <li>If processing succeeds, close the task with success</li>\n  <li>Else Update the task that automation has failed</li>\n</ul>\n<h3>Notifications</h3>\n\n<h4>Approval</h4>\nSubject: Badge Access Request for {current.variables.requested_for}\n\n{current.variables.requested_for} is requesting access to area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door}). Please review and approve or reject the request.\n\nThank you,\nSecurity Team\n\n<h4>Approved</h4>\nSubject: Badge Access Granted\n\nDear {current.variables.requested_for},\n\nYou have been granted access to area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door}). Your badge ID is {current.variables.badge_id} and it expires on {current.variables.expirationDate}.\n\nThank you,\nSecurity Team\n\n<h4>Rejected</h4>\nSubject: Badge Access Denied\n\nDear {current.variables.requested_for},\n\nYour request for access to area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door}) was denied. Please contact the Security Team for more information.\n\nThank you,\nSecurity Team\n\n<h4>Notice of expiring access</h4>\nSubject: Badge Access Expiring for area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door})\n\nDear {current.variables.requested_for},\n\nYour access to area({current.variables.area}) building({current.variables.building} and door({current.varaibles.door}) expires in on on {current.variables.expirationDate}. If you still need this access please request it.\n\nThank you,\nSecurity Team\n\n<!--Fill out the below given this prompt \"Manage FOIA requests for contracts\".-->\n<h1>FOIA Request for Contracts </h1>\n\n<h2>Request Process</h2>\nCreate a process to allow for members of the public to submit FOIA requests for Contracts: \n<div class=\"mermaid\">\ngraph TD\n  S0((Start))\n  S1(Submit Request)\n  A2(Routing and receipt of  request)\n  A3(Review to determine if document is releasable)\n  T1(Obtain the requested document)\n  A4(Prepare releasable document)\n  A5(Approval to release)\n  T2(Produce requested document)\n  E0(End)\n\n  S0-->S1\n  S1-->A2\n  A2-->A3\n  A3--Yes-->T1\n  A3--No-->E0\n  T1-->A4\n  A4-->A5\n  A5--Yes-->T2\n  A5--No-->E0\n  T2-->E0\n</div>\n\n<h2>Roles</h2>\nIdentify any roles people need to take to request, approve, and fulfill.\n<ul>\n<li>Requester: Anyone can submit a request as long as the requirements are met.</li>\n<li>Approver: Agency representative or Agency FOIA Officer</li>\n<li>Fulfiller: Agency representative or Agency FOIA Officer</li>\n</ul>\n\n<h2>Self Service Form</h2>\nCreate fields for submitting a request in the ServiceNow Self Service Portal. \n<ol>\n<li>Requester Name</li>\n<li>Requester Phone</li>\n<li>Requester Email</li>\n<li>Agency Name</li>\n<li>Contract Number</li>\n<li>Brief description of the requested document</li>\n</ol>\n\n<h2>Notifications</h2>\n\n<h3>Request Submitted</h3>\nSubject: FOIA Request Submitted\n\nDear Applicant,\n\nYour FOIA request has been submitted. Your Request ID is: {current.variables.request_id}. Please note that your Request ID in all further correspondence.\n\nThank you,\nFOIA Office\n\n<h3>Request Received </h3>\nSubject: FOIA Request Received\n\nDear Agency Representative, \n\nA new FOIA request has been received. Please review the request and follow the process to respond. \n\nThank you, \nFOIA Office \n\n<h3>Request Approved </h3>\nSubject: FOIA Request Approved\n\nDear Agency Representative, \n\nFOIA Request {current.variables.request_id} has now been approved. Please proceed with preparing a releasable document. \n\nThank you,\nFOIA Office \n\n<h3>Request Rejected</h3>\nSubject: FOIA Request Rejected\n\nDear Applicant, \n\nYour FOIA Request {current.variables.request_id} has been rejected. Please contact the FOIA Representative for more information. \n\nThank you,\nFOIA Office\n<!--Fill out the below given this prompt \"neural machine comprehension\"-->","action":"docs-process-maker","response":"\n<h1>Neural Machine Comprehension</h1>\n\n<h2>What is the problem you are attempting to solve?</h2>\nNeural Machine Comprehension is a problem that involves understanding a question and retrieving the answer from a given document. This is a challenging problem because of the multi-step nature of the problem:\n<ol>\n  <li>Understand the question</li>\n  <li>Retrieve the document</li>\n  <li>Understand the document</li>\n  <li>Answer the question</li>\n</ol>\n\n<h2>How will you solve it?</h2>\n<p>The model that is going to be used is called the <b>BIDAF model</b>. The idea behind the model is that it first builds a representation of the question and then finds the most relevant part of the document that is most likely to contain the answer to the question.</p>\n<ol>\n  <li>The model reads the question and converts it into a question matrix.</li>\n  <li>The model reads the document and converts it into a document matrix.</li>\n  <li>The model then uses a method that is called attention that finds the most relevant part of the document that contains the answer to the question.</li>\n  <li>The most relevant part of the document is then used to answer the question.</li>\n</ol>\n\n<h2>How will you know when you are done?</h2>\n<p>The model will know that the model is done when the model is able to accurately predict the answer to a question based on a document.</p>\n\n<h2>What metrics will you use to evaluate success?</h2>\n<p>The model will be evaluated based on the accuracy of the model. The accuracy will be measured based on the accuracy of the predictions.</p>\n\n<h2>What data do you need to train the model and where will you get it?</h2>\n<p>The data that is needed to train the model is a training dataset that contains a question and the correct answer to the question from a given document. This data can be found at https://rajpurkar.github.io/SQuAD-explorer/dataset/train-v1.1.json</p>\n\n<h2>Who will use the model?</h2>\n<p>This model is going to be used by the education sector.</p>\n\n<h2>How will you deploy it?</h2>\n<p>This model is going to be delivered as a web service using <a href=\"https://www.tensorflow.org/tfx\">TensorFlow Extended (TFX)</a> and <a href=\"https://cloud.google.com/\">Google Cloud Platform</a>.</p>\n<h2>What does the process look like?</h2>\n<div class=\"mermaid\">\ngraph TD\n  S0(Start)\n  F1(Feature Engineering)\n  T1(Train and Evaluate Model)\n  F2(Feature Engineering)\n  T2(Model Performance)\n  F3(Feature Engineering)\n  T3(Model Performance)\n  T4(Model Performance)\n  F4(Feature Engineering)\n  E0(End)\n\n  S0-->F1\n  F1-->T1\n  T1-->F2\n  F2-->T2\n  T2-->F3\n  F3-->T3\n  T3-->T4\n  T4-->F4\n  F4-->E0\n</div>\n<h2>How will you monitor for drift?</h2>\n<p>The model will monitor for drift by creating a data drift monitor that will monitor the data that comes in and make sure that the data is consistent.</p>\n\n<h2>What does the architecture look like?</h2>\n<p>The architecture for the model is a question encoder and a document encoder. The question encoder converts the question into a question matrix and the document encoder converts the document into a document matrix. The question encoder and the document encoder use attention to try to find the most relevant part of the document that contains the answer to the question. The question encoder then uses that part of the document to answer the question.</p>\n\n<h2>What is the timeline?</h2>\n<p>The timeline for this project is 4 months.</p>\n\n<h2>What is the budget?</h2>\n<p>The budget for this project is $10,000</p>\n\n<h2>What are the risks?</h2>\n<p>The model might not be able to find the answer to the question because the question might be too vague.</p>\n"},
{"cuid":"clddxm4rp00dvrg24i596cj2k","createdAt":"2023-01-27 02:55:36.613","updatedAt":"2023-01-27 02:55:41.16","userCuid":"cld9unimw001yucgucbtj659g","prompt":"Summarize this text for me in a few sentences.\"\nMuch recent research on information retrieval has focused on how to transfer\nfrom one task (typically with abundant supervised data) to various other tasks\nwhere supervision is limited, with the implicit assumption that it is possible to\ngeneralize from one task to all the rest. However, this overlooks the fact that\nthere are many diverse and unique retrieval tasks, each targeting different search\nintents, queries, and search domains. In this paper, we suggest to work on Few-shot\nDense Retrieval, a setting where each task comes with a short description and\na few examples. To amplify the power of a few examples, we propose Promptbase Query Generation for Retriever (PROMPTAGATOR ), which leverages large\nlanguage models (LLM) as a few-shot query generator, and creates task-specific\nretrievers based on the generated data. Powered by LLM’s generalization ability,\nPROMPTAGATOR makes it possible to create task-specific end-to-end retrievers solely\nbased on a few examples without using Natural Questions (Kwiatkowski et al.,\n2019) or MS MARCO (Nguyen et al., 2016) to train dual encoders. Surprisingly,\nLLM prompting with no more than 8 examples allows dual encoders to outperform\nheavily engineered models trained on MS MARCO like ColBERT v2 (Santhanam\net al., 2022) by more than 1.2 nDCG on average on 11 retrieval sets. Further\ntraining standard-size re-rankers using the same generated data yields another 5.0\npoint nDCG improvement. Our studies determine that query generation can be\nfar more effective than previously observed, especially when a small amount of\ntask-specific knowledge is given.","action":"summarize-1","response":"\n\nThis paper explains a novel approach, called Few-shot Dense Retrieval, for creating task-specific retrievals for information retrieval. It proposes a framework, PROMPTAGATOR, that leverages language models as a few-shot query generator to generate task-specific retrievers. Studies have shown that this approach can outperform heavily engineered models trained on MS MARCO by more than 1.2 nDCG on average and further training a re-ranker on the generated data yields a 5.0 point nDCG improvement."},
{"cuid":"clddyqs0900dyrg245ouoqiqx","createdAt":"2023-01-27 03:27:12.969","updatedAt":"2023-01-27 03:27:18.965","userCuid":"cld9unimw000wucguenaahfdy","prompt":"var prob = new IncidentUtils().getProblemFromIncident(current);\nif (prob != undefined) {\n    current.problem_id = prob.insert();\n    if (current.state != IncidentState.RESOLVED) {\n        current.state = IncidentState.ON_HOLD;\n        if (current.isValidField(\"hold_reason\"))\n            current.hold_reason = IncidentState.AWAITING_PROBLEM;\n    }\n    if (GlidePluginManager.isActive(\"com.snc.best_practice.problem.madrid\")) {\n        var problemV2Util = new ProblemV2Util();\n        problemV2Util.copyAttachments(current, prob);\n        problemV2Util.copyAttachedKnowledge(current, prob);\n    }\n    current.update();\n    gs.addInfoMessage(gs.getMessage(\"Problem {0} created\", prob.number));\n    action.setRedirectURL(prob);\n    action.setReturnURL(current);\n} else {\n    action.setRedirectURL(current);\n}\n\"\"\"\nExplain the above code step-by-step in simple english.","action":"explain","response":"\n\n1. The code instantiates an IncidentUtils object.\n2. It then calls the getProblemFromIncident() method on this object, passing in the current incident object.\n3. If the getProblemFromIncident() method returns an object, the code sets the problem_id field of the current incident object to the id of the new problem object, and sets the state of the incident to ON_HOLD.\n4. The code then checks to see if the GlidePluginManager is active for the \"com.snc.best_practice.problem.madrid\" plugin. If it is, the code instantiates a ProblemV2Util object and calls the copyAttachments() and copyAttachedKnowledge() methods on this object, passing in the current incident and problem objects.\n5. Finally, the code updates the current incident object and sets the redirect URL to the new problem object."}
]
